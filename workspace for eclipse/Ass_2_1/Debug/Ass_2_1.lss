
Ass_2_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000329a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000329a  0000330e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000174c  00000000  00000000  00003318  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008c9  00000000  00000000  00004a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  0000532d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  0000548d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  0000561c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00007661  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  00008762  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  000096e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  00009864  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  00009b26  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a3b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e9       	ldi	r30, 0x9A	; 154
      68:	f2 e3       	ldi	r31, 0x32	; 50
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 47 06 	call	0xc8e	; 0xc8e <main>
      7a:	0c 94 4b 19 	jmp	0x3296	; 0x3296 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 14 19 	jmp	0x3228	; 0x3228 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 30 19 	jmp	0x3260	; 0x3260 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 14 19 	jmp	0x3228	; 0x3228 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 30 19 	jmp	0x3260	; 0x3260 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 1c 19 	jmp	0x3238	; 0x3238 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 38 19 	jmp	0x3270	; 0x3270 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 24 19 	jmp	0x3248	; 0x3248 <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 40 19 	jmp	0x3280	; 0x3280 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <main>:
#define F_CPU 8000000
#include <util/delay.h>


int main (void)
{
     c8e:	0f 93       	push	r16
     c90:	1f 93       	push	r17
     c92:	df 93       	push	r29
     c94:	cf 93       	push	r28
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	c0 58       	subi	r28, 0x80	; 128
     c9c:	d1 40       	sbci	r29, 0x01	; 1
     c9e:	0f b6       	in	r0, 0x3f	; 63
     ca0:	f8 94       	cli
     ca2:	de bf       	out	0x3e, r29	; 62
     ca4:	0f be       	out	0x3f, r0	; 63
     ca6:	cd bf       	out	0x3d, r28	; 61
	DDRC=0xff;	// PORTD  is OutPut Pins
     ca8:	e4 e3       	ldi	r30, 0x34	; 52
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	8f ef       	ldi	r24, 0xFF	; 255
     cae:	80 83       	st	Z, r24
	PORTC=0;	// intialize the output for PORTD is zero
     cb0:	e5 e3       	ldi	r30, 0x35	; 53
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	10 82       	st	Z, r1

	DDRA=0x00;	// PORTA is an input PORT
     cb6:	ea e3       	ldi	r30, 0x3A	; 58
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	10 82       	st	Z, r1
	PORTA=0xff;	// PORTA use pull up resistors
     cbc:	eb e3       	ldi	r30, 0x3B	; 59
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	80 83       	st	Z, r24
     cc4:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
	while(1)
	{
	while((!(GET_BIT(PINA,0))) || (!(GET_BIT(PINA,1))) || (!(GET_BIT(PINA,2)))
	||	(!(GET_BIT(PINA,3))) || (!(GET_BIT(PINA,4))) || (!(GET_BIT(PINA,5)))
	||	(!(GET_BIT(PINA,6))) || (!(GET_BIT(PINA,7)))){
		if ( !(GET_BIT(PINA,0)) ){// Do 523251 HZ = 2Microsec
     cc8:	e9 e3       	ldi	r30, 0x39	; 57
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	80 81       	ld	r24, Z
     cce:	88 2f       	mov	r24, r24
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	81 70       	andi	r24, 0x01	; 1
     cd4:	90 70       	andi	r25, 0x00	; 0
     cd6:	00 97       	sbiw	r24, 0x00	; 0
     cd8:	09 f0       	breq	.+2      	; 0xcdc <main+0x4e>
     cda:	64 c2       	rjmp	.+1224   	; 0x11a4 <main+0x516>
		/*Set PA0 as High "5 volt"*/
		SET_BIT(PORTC,7);
     cdc:	a5 e3       	ldi	r26, 0x35	; 53
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	e5 e3       	ldi	r30, 0x35	; 53
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	80 81       	ld	r24, Z
     ce6:	80 68       	ori	r24, 0x80	; 128
     ce8:	8c 93       	st	X, r24
     cea:	fe 01       	movw	r30, r28
     cec:	e3 58       	subi	r30, 0x83	; 131
     cee:	fe 4f       	sbci	r31, 0xFE	; 254
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	a0 e8       	ldi	r26, 0x80	; 128
     cf6:	bf e3       	ldi	r27, 0x3F	; 63
     cf8:	80 83       	st	Z, r24
     cfa:	91 83       	std	Z+1, r25	; 0x01
     cfc:	a2 83       	std	Z+2, r26	; 0x02
     cfe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     d00:	8e 01       	movw	r16, r28
     d02:	07 58       	subi	r16, 0x87	; 135
     d04:	1e 4f       	sbci	r17, 0xFE	; 254
     d06:	fe 01       	movw	r30, r28
     d08:	e3 58       	subi	r30, 0x83	; 131
     d0a:	fe 4f       	sbci	r31, 0xFE	; 254
     d0c:	60 81       	ld	r22, Z
     d0e:	71 81       	ldd	r23, Z+1	; 0x01
     d10:	82 81       	ldd	r24, Z+2	; 0x02
     d12:	93 81       	ldd	r25, Z+3	; 0x03
     d14:	2b ea       	ldi	r18, 0xAB	; 171
     d16:	3a ea       	ldi	r19, 0xAA	; 170
     d18:	4a e2       	ldi	r20, 0x2A	; 42
     d1a:	50 e4       	ldi	r21, 0x40	; 64
     d1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d20:	dc 01       	movw	r26, r24
     d22:	cb 01       	movw	r24, r22
     d24:	f8 01       	movw	r30, r16
     d26:	80 83       	st	Z, r24
     d28:	91 83       	std	Z+1, r25	; 0x01
     d2a:	a2 83       	std	Z+2, r26	; 0x02
     d2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d2e:	fe 01       	movw	r30, r28
     d30:	e7 58       	subi	r30, 0x87	; 135
     d32:	fe 4f       	sbci	r31, 0xFE	; 254
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	40 e8       	ldi	r20, 0x80	; 128
     d42:	5f e3       	ldi	r21, 0x3F	; 63
     d44:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     d48:	88 23       	and	r24, r24
     d4a:	34 f4       	brge	.+12     	; 0xd58 <main+0xca>
		__ticks = 1;
     d4c:	fe 01       	movw	r30, r28
     d4e:	e8 58       	subi	r30, 0x88	; 136
     d50:	fe 4f       	sbci	r31, 0xFE	; 254
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	80 83       	st	Z, r24
     d56:	e0 c0       	rjmp	.+448    	; 0xf18 <main+0x28a>
	else if (__tmp > 255)
     d58:	fe 01       	movw	r30, r28
     d5a:	e7 58       	subi	r30, 0x87	; 135
     d5c:	fe 4f       	sbci	r31, 0xFE	; 254
     d5e:	60 81       	ld	r22, Z
     d60:	71 81       	ldd	r23, Z+1	; 0x01
     d62:	82 81       	ldd	r24, Z+2	; 0x02
     d64:	93 81       	ldd	r25, Z+3	; 0x03
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	4f e7       	ldi	r20, 0x7F	; 127
     d6c:	53 e4       	ldi	r21, 0x43	; 67
     d6e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     d72:	18 16       	cp	r1, r24
     d74:	0c f0       	brlt	.+2      	; 0xd78 <main+0xea>
     d76:	c0 c0       	rjmp	.+384    	; 0xef8 <main+0x26a>
	{
		_delay_ms(__us / 1000.0);
     d78:	fe 01       	movw	r30, r28
     d7a:	e3 58       	subi	r30, 0x83	; 131
     d7c:	fe 4f       	sbci	r31, 0xFE	; 254
     d7e:	60 81       	ld	r22, Z
     d80:	71 81       	ldd	r23, Z+1	; 0x01
     d82:	82 81       	ldd	r24, Z+2	; 0x02
     d84:	93 81       	ldd	r25, Z+3	; 0x03
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	4a e7       	ldi	r20, 0x7A	; 122
     d8c:	54 e4       	ldi	r21, 0x44	; 68
     d8e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     d92:	dc 01       	movw	r26, r24
     d94:	cb 01       	movw	r24, r22
     d96:	fe 01       	movw	r30, r28
     d98:	ec 58       	subi	r30, 0x8C	; 140
     d9a:	fe 4f       	sbci	r31, 0xFE	; 254
     d9c:	80 83       	st	Z, r24
     d9e:	91 83       	std	Z+1, r25	; 0x01
     da0:	a2 83       	std	Z+2, r26	; 0x02
     da2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     da4:	8e 01       	movw	r16, r28
     da6:	00 59       	subi	r16, 0x90	; 144
     da8:	1e 4f       	sbci	r17, 0xFE	; 254
     daa:	fe 01       	movw	r30, r28
     dac:	ec 58       	subi	r30, 0x8C	; 140
     dae:	fe 4f       	sbci	r31, 0xFE	; 254
     db0:	60 81       	ld	r22, Z
     db2:	71 81       	ldd	r23, Z+1	; 0x01
     db4:	82 81       	ldd	r24, Z+2	; 0x02
     db6:	93 81       	ldd	r25, Z+3	; 0x03
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	4a ef       	ldi	r20, 0xFA	; 250
     dbe:	54 e4       	ldi	r21, 0x44	; 68
     dc0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     dc4:	dc 01       	movw	r26, r24
     dc6:	cb 01       	movw	r24, r22
     dc8:	f8 01       	movw	r30, r16
     dca:	80 83       	st	Z, r24
     dcc:	91 83       	std	Z+1, r25	; 0x01
     dce:	a2 83       	std	Z+2, r26	; 0x02
     dd0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dd2:	fe 01       	movw	r30, r28
     dd4:	e0 59       	subi	r30, 0x90	; 144
     dd6:	fe 4f       	sbci	r31, 0xFE	; 254
     dd8:	60 81       	ld	r22, Z
     dda:	71 81       	ldd	r23, Z+1	; 0x01
     ddc:	82 81       	ldd	r24, Z+2	; 0x02
     dde:	93 81       	ldd	r25, Z+3	; 0x03
     de0:	20 e0       	ldi	r18, 0x00	; 0
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	40 e8       	ldi	r20, 0x80	; 128
     de6:	5f e3       	ldi	r21, 0x3F	; 63
     de8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     dec:	88 23       	and	r24, r24
     dee:	44 f4       	brge	.+16     	; 0xe00 <main+0x172>
		__ticks = 1;
     df0:	fe 01       	movw	r30, r28
     df2:	e2 59       	subi	r30, 0x92	; 146
     df4:	fe 4f       	sbci	r31, 0xFE	; 254
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	91 83       	std	Z+1, r25	; 0x01
     dfc:	80 83       	st	Z, r24
     dfe:	64 c0       	rjmp	.+200    	; 0xec8 <main+0x23a>
	else if (__tmp > 65535)
     e00:	fe 01       	movw	r30, r28
     e02:	e0 59       	subi	r30, 0x90	; 144
     e04:	fe 4f       	sbci	r31, 0xFE	; 254
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	3f ef       	ldi	r19, 0xFF	; 255
     e12:	4f e7       	ldi	r20, 0x7F	; 127
     e14:	57 e4       	ldi	r21, 0x47	; 71
     e16:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     e1a:	18 16       	cp	r1, r24
     e1c:	0c f0       	brlt	.+2      	; 0xe20 <main+0x192>
     e1e:	43 c0       	rjmp	.+134    	; 0xea6 <main+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e20:	fe 01       	movw	r30, r28
     e22:	ec 58       	subi	r30, 0x8C	; 140
     e24:	fe 4f       	sbci	r31, 0xFE	; 254
     e26:	60 81       	ld	r22, Z
     e28:	71 81       	ldd	r23, Z+1	; 0x01
     e2a:	82 81       	ldd	r24, Z+2	; 0x02
     e2c:	93 81       	ldd	r25, Z+3	; 0x03
     e2e:	20 e0       	ldi	r18, 0x00	; 0
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	40 e2       	ldi	r20, 0x20	; 32
     e34:	51 e4       	ldi	r21, 0x41	; 65
     e36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e3a:	dc 01       	movw	r26, r24
     e3c:	cb 01       	movw	r24, r22
     e3e:	8e 01       	movw	r16, r28
     e40:	02 59       	subi	r16, 0x92	; 146
     e42:	1e 4f       	sbci	r17, 0xFE	; 254
     e44:	bc 01       	movw	r22, r24
     e46:	cd 01       	movw	r24, r26
     e48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	f8 01       	movw	r30, r16
     e52:	91 83       	std	Z+1, r25	; 0x01
     e54:	80 83       	st	Z, r24
     e56:	1f c0       	rjmp	.+62     	; 0xe96 <main+0x208>
     e58:	fe 01       	movw	r30, r28
     e5a:	e4 59       	subi	r30, 0x94	; 148
     e5c:	fe 4f       	sbci	r31, 0xFE	; 254
     e5e:	88 ec       	ldi	r24, 0xC8	; 200
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	91 83       	std	Z+1, r25	; 0x01
     e64:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e66:	fe 01       	movw	r30, r28
     e68:	e4 59       	subi	r30, 0x94	; 148
     e6a:	fe 4f       	sbci	r31, 0xFE	; 254
     e6c:	80 81       	ld	r24, Z
     e6e:	91 81       	ldd	r25, Z+1	; 0x01
     e70:	01 97       	sbiw	r24, 0x01	; 1
     e72:	f1 f7       	brne	.-4      	; 0xe70 <main+0x1e2>
     e74:	fe 01       	movw	r30, r28
     e76:	e4 59       	subi	r30, 0x94	; 148
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
     e7a:	91 83       	std	Z+1, r25	; 0x01
     e7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e7e:	de 01       	movw	r26, r28
     e80:	a2 59       	subi	r26, 0x92	; 146
     e82:	be 4f       	sbci	r27, 0xFE	; 254
     e84:	fe 01       	movw	r30, r28
     e86:	e2 59       	subi	r30, 0x92	; 146
     e88:	fe 4f       	sbci	r31, 0xFE	; 254
     e8a:	80 81       	ld	r24, Z
     e8c:	91 81       	ldd	r25, Z+1	; 0x01
     e8e:	01 97       	sbiw	r24, 0x01	; 1
     e90:	11 96       	adiw	r26, 0x01	; 1
     e92:	9c 93       	st	X, r25
     e94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e96:	fe 01       	movw	r30, r28
     e98:	e2 59       	subi	r30, 0x92	; 146
     e9a:	fe 4f       	sbci	r31, 0xFE	; 254
     e9c:	80 81       	ld	r24, Z
     e9e:	91 81       	ldd	r25, Z+1	; 0x01
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	d1 f6       	brne	.-76     	; 0xe58 <main+0x1ca>
     ea4:	4b c0       	rjmp	.+150    	; 0xf3c <main+0x2ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ea6:	8e 01       	movw	r16, r28
     ea8:	02 59       	subi	r16, 0x92	; 146
     eaa:	1e 4f       	sbci	r17, 0xFE	; 254
     eac:	fe 01       	movw	r30, r28
     eae:	e0 59       	subi	r30, 0x90	; 144
     eb0:	fe 4f       	sbci	r31, 0xFE	; 254
     eb2:	60 81       	ld	r22, Z
     eb4:	71 81       	ldd	r23, Z+1	; 0x01
     eb6:	82 81       	ldd	r24, Z+2	; 0x02
     eb8:	93 81       	ldd	r25, Z+3	; 0x03
     eba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ebe:	dc 01       	movw	r26, r24
     ec0:	cb 01       	movw	r24, r22
     ec2:	f8 01       	movw	r30, r16
     ec4:	91 83       	std	Z+1, r25	; 0x01
     ec6:	80 83       	st	Z, r24
     ec8:	de 01       	movw	r26, r28
     eca:	a6 59       	subi	r26, 0x96	; 150
     ecc:	be 4f       	sbci	r27, 0xFE	; 254
     ece:	fe 01       	movw	r30, r28
     ed0:	e2 59       	subi	r30, 0x92	; 146
     ed2:	fe 4f       	sbci	r31, 0xFE	; 254
     ed4:	80 81       	ld	r24, Z
     ed6:	91 81       	ldd	r25, Z+1	; 0x01
     ed8:	11 96       	adiw	r26, 0x01	; 1
     eda:	9c 93       	st	X, r25
     edc:	8e 93       	st	-X, r24
     ede:	fe 01       	movw	r30, r28
     ee0:	e6 59       	subi	r30, 0x96	; 150
     ee2:	fe 4f       	sbci	r31, 0xFE	; 254
     ee4:	80 81       	ld	r24, Z
     ee6:	91 81       	ldd	r25, Z+1	; 0x01
     ee8:	01 97       	sbiw	r24, 0x01	; 1
     eea:	f1 f7       	brne	.-4      	; 0xee8 <main+0x25a>
     eec:	fe 01       	movw	r30, r28
     eee:	e6 59       	subi	r30, 0x96	; 150
     ef0:	fe 4f       	sbci	r31, 0xFE	; 254
     ef2:	91 83       	std	Z+1, r25	; 0x01
     ef4:	80 83       	st	Z, r24
     ef6:	22 c0       	rjmp	.+68     	; 0xf3c <main+0x2ae>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     ef8:	8e 01       	movw	r16, r28
     efa:	08 58       	subi	r16, 0x88	; 136
     efc:	1e 4f       	sbci	r17, 0xFE	; 254
     efe:	fe 01       	movw	r30, r28
     f00:	e7 58       	subi	r30, 0x87	; 135
     f02:	fe 4f       	sbci	r31, 0xFE	; 254
     f04:	60 81       	ld	r22, Z
     f06:	71 81       	ldd	r23, Z+1	; 0x01
     f08:	82 81       	ldd	r24, Z+2	; 0x02
     f0a:	93 81       	ldd	r25, Z+3	; 0x03
     f0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f10:	dc 01       	movw	r26, r24
     f12:	cb 01       	movw	r24, r22
     f14:	f8 01       	movw	r30, r16
     f16:	80 83       	st	Z, r24
     f18:	de 01       	movw	r26, r28
     f1a:	a7 59       	subi	r26, 0x97	; 151
     f1c:	be 4f       	sbci	r27, 0xFE	; 254
     f1e:	fe 01       	movw	r30, r28
     f20:	e8 58       	subi	r30, 0x88	; 136
     f22:	fe 4f       	sbci	r31, 0xFE	; 254
     f24:	80 81       	ld	r24, Z
     f26:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     f28:	fe 01       	movw	r30, r28
     f2a:	e7 59       	subi	r30, 0x97	; 151
     f2c:	fe 4f       	sbci	r31, 0xFE	; 254
     f2e:	80 81       	ld	r24, Z
     f30:	8a 95       	dec	r24
     f32:	f1 f7       	brne	.-4      	; 0xf30 <main+0x2a2>
     f34:	fe 01       	movw	r30, r28
     f36:	e7 59       	subi	r30, 0x97	; 151
     f38:	fe 4f       	sbci	r31, 0xFE	; 254
     f3a:	80 83       	st	Z, r24
		/*delay for 200usec*/	// check the bouncing mechanism
		_delay_us(1);
		/*Set PA0 as Low "0 volt"*/
		CLR_BIT(PORTC,7);
     f3c:	a5 e3       	ldi	r26, 0x35	; 53
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	e5 e3       	ldi	r30, 0x35	; 53
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	80 81       	ld	r24, Z
     f46:	8f 77       	andi	r24, 0x7F	; 127
     f48:	8c 93       	st	X, r24
     f4a:	fe 01       	movw	r30, r28
     f4c:	eb 59       	subi	r30, 0x9B	; 155
     f4e:	fe 4f       	sbci	r31, 0xFE	; 254
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	a0 e8       	ldi	r26, 0x80	; 128
     f56:	bf e3       	ldi	r27, 0x3F	; 63
     f58:	80 83       	st	Z, r24
     f5a:	91 83       	std	Z+1, r25	; 0x01
     f5c:	a2 83       	std	Z+2, r26	; 0x02
     f5e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     f60:	8e 01       	movw	r16, r28
     f62:	0f 59       	subi	r16, 0x9F	; 159
     f64:	1e 4f       	sbci	r17, 0xFE	; 254
     f66:	fe 01       	movw	r30, r28
     f68:	eb 59       	subi	r30, 0x9B	; 155
     f6a:	fe 4f       	sbci	r31, 0xFE	; 254
     f6c:	60 81       	ld	r22, Z
     f6e:	71 81       	ldd	r23, Z+1	; 0x01
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	93 81       	ldd	r25, Z+3	; 0x03
     f74:	2b ea       	ldi	r18, 0xAB	; 171
     f76:	3a ea       	ldi	r19, 0xAA	; 170
     f78:	4a e2       	ldi	r20, 0x2A	; 42
     f7a:	50 e4       	ldi	r21, 0x40	; 64
     f7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f80:	dc 01       	movw	r26, r24
     f82:	cb 01       	movw	r24, r22
     f84:	f8 01       	movw	r30, r16
     f86:	80 83       	st	Z, r24
     f88:	91 83       	std	Z+1, r25	; 0x01
     f8a:	a2 83       	std	Z+2, r26	; 0x02
     f8c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f8e:	fe 01       	movw	r30, r28
     f90:	ef 59       	subi	r30, 0x9F	; 159
     f92:	fe 4f       	sbci	r31, 0xFE	; 254
     f94:	60 81       	ld	r22, Z
     f96:	71 81       	ldd	r23, Z+1	; 0x01
     f98:	82 81       	ldd	r24, Z+2	; 0x02
     f9a:	93 81       	ldd	r25, Z+3	; 0x03
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e8       	ldi	r20, 0x80	; 128
     fa2:	5f e3       	ldi	r21, 0x3F	; 63
     fa4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     fa8:	88 23       	and	r24, r24
     faa:	34 f4       	brge	.+12     	; 0xfb8 <main+0x32a>
		__ticks = 1;
     fac:	fe 01       	movw	r30, r28
     fae:	e0 5a       	subi	r30, 0xA0	; 160
     fb0:	fe 4f       	sbci	r31, 0xFE	; 254
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	80 83       	st	Z, r24
     fb6:	e2 c0       	rjmp	.+452    	; 0x117c <main+0x4ee>
	else if (__tmp > 255)
     fb8:	fe 01       	movw	r30, r28
     fba:	ef 59       	subi	r30, 0x9F	; 159
     fbc:	fe 4f       	sbci	r31, 0xFE	; 254
     fbe:	60 81       	ld	r22, Z
     fc0:	71 81       	ldd	r23, Z+1	; 0x01
     fc2:	82 81       	ldd	r24, Z+2	; 0x02
     fc4:	93 81       	ldd	r25, Z+3	; 0x03
     fc6:	20 e0       	ldi	r18, 0x00	; 0
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	4f e7       	ldi	r20, 0x7F	; 127
     fcc:	53 e4       	ldi	r21, 0x43	; 67
     fce:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     fd2:	18 16       	cp	r1, r24
     fd4:	0c f0       	brlt	.+2      	; 0xfd8 <main+0x34a>
     fd6:	c2 c0       	rjmp	.+388    	; 0x115c <main+0x4ce>
	{
		_delay_ms(__us / 1000.0);
     fd8:	fe 01       	movw	r30, r28
     fda:	eb 59       	subi	r30, 0x9B	; 155
     fdc:	fe 4f       	sbci	r31, 0xFE	; 254
     fde:	60 81       	ld	r22, Z
     fe0:	71 81       	ldd	r23, Z+1	; 0x01
     fe2:	82 81       	ldd	r24, Z+2	; 0x02
     fe4:	93 81       	ldd	r25, Z+3	; 0x03
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	4a e7       	ldi	r20, 0x7A	; 122
     fec:	54 e4       	ldi	r21, 0x44	; 68
     fee:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     ff2:	dc 01       	movw	r26, r24
     ff4:	cb 01       	movw	r24, r22
     ff6:	fe 01       	movw	r30, r28
     ff8:	e4 5a       	subi	r30, 0xA4	; 164
     ffa:	fe 4f       	sbci	r31, 0xFE	; 254
     ffc:	80 83       	st	Z, r24
     ffe:	91 83       	std	Z+1, r25	; 0x01
    1000:	a2 83       	std	Z+2, r26	; 0x02
    1002:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1004:	8e 01       	movw	r16, r28
    1006:	08 5a       	subi	r16, 0xA8	; 168
    1008:	1e 4f       	sbci	r17, 0xFE	; 254
    100a:	fe 01       	movw	r30, r28
    100c:	e4 5a       	subi	r30, 0xA4	; 164
    100e:	fe 4f       	sbci	r31, 0xFE	; 254
    1010:	60 81       	ld	r22, Z
    1012:	71 81       	ldd	r23, Z+1	; 0x01
    1014:	82 81       	ldd	r24, Z+2	; 0x02
    1016:	93 81       	ldd	r25, Z+3	; 0x03
    1018:	20 e0       	ldi	r18, 0x00	; 0
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	4a ef       	ldi	r20, 0xFA	; 250
    101e:	54 e4       	ldi	r21, 0x44	; 68
    1020:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1024:	dc 01       	movw	r26, r24
    1026:	cb 01       	movw	r24, r22
    1028:	f8 01       	movw	r30, r16
    102a:	80 83       	st	Z, r24
    102c:	91 83       	std	Z+1, r25	; 0x01
    102e:	a2 83       	std	Z+2, r26	; 0x02
    1030:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1032:	fe 01       	movw	r30, r28
    1034:	e8 5a       	subi	r30, 0xA8	; 168
    1036:	fe 4f       	sbci	r31, 0xFE	; 254
    1038:	60 81       	ld	r22, Z
    103a:	71 81       	ldd	r23, Z+1	; 0x01
    103c:	82 81       	ldd	r24, Z+2	; 0x02
    103e:	93 81       	ldd	r25, Z+3	; 0x03
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	40 e8       	ldi	r20, 0x80	; 128
    1046:	5f e3       	ldi	r21, 0x3F	; 63
    1048:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    104c:	88 23       	and	r24, r24
    104e:	44 f4       	brge	.+16     	; 0x1060 <main+0x3d2>
		__ticks = 1;
    1050:	fe 01       	movw	r30, r28
    1052:	ea 5a       	subi	r30, 0xAA	; 170
    1054:	fe 4f       	sbci	r31, 0xFE	; 254
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	91 83       	std	Z+1, r25	; 0x01
    105c:	80 83       	st	Z, r24
    105e:	65 c0       	rjmp	.+202    	; 0x112a <main+0x49c>
	else if (__tmp > 65535)
    1060:	fe 01       	movw	r30, r28
    1062:	e8 5a       	subi	r30, 0xA8	; 168
    1064:	fe 4f       	sbci	r31, 0xFE	; 254
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	20 e0       	ldi	r18, 0x00	; 0
    1070:	3f ef       	ldi	r19, 0xFF	; 255
    1072:	4f e7       	ldi	r20, 0x7F	; 127
    1074:	57 e4       	ldi	r21, 0x47	; 71
    1076:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    107a:	18 16       	cp	r1, r24
    107c:	0c f0       	brlt	.+2      	; 0x1080 <main+0x3f2>
    107e:	44 c0       	rjmp	.+136    	; 0x1108 <main+0x47a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1080:	fe 01       	movw	r30, r28
    1082:	e4 5a       	subi	r30, 0xA4	; 164
    1084:	fe 4f       	sbci	r31, 0xFE	; 254
    1086:	60 81       	ld	r22, Z
    1088:	71 81       	ldd	r23, Z+1	; 0x01
    108a:	82 81       	ldd	r24, Z+2	; 0x02
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	20 e0       	ldi	r18, 0x00	; 0
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	40 e2       	ldi	r20, 0x20	; 32
    1094:	51 e4       	ldi	r21, 0x41	; 65
    1096:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    109a:	dc 01       	movw	r26, r24
    109c:	cb 01       	movw	r24, r22
    109e:	8e 01       	movw	r16, r28
    10a0:	0a 5a       	subi	r16, 0xAA	; 170
    10a2:	1e 4f       	sbci	r17, 0xFE	; 254
    10a4:	bc 01       	movw	r22, r24
    10a6:	cd 01       	movw	r24, r26
    10a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10ac:	dc 01       	movw	r26, r24
    10ae:	cb 01       	movw	r24, r22
    10b0:	f8 01       	movw	r30, r16
    10b2:	91 83       	std	Z+1, r25	; 0x01
    10b4:	80 83       	st	Z, r24
    10b6:	1f c0       	rjmp	.+62     	; 0x10f6 <main+0x468>
    10b8:	fe 01       	movw	r30, r28
    10ba:	ec 5a       	subi	r30, 0xAC	; 172
    10bc:	fe 4f       	sbci	r31, 0xFE	; 254
    10be:	88 ec       	ldi	r24, 0xC8	; 200
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	91 83       	std	Z+1, r25	; 0x01
    10c4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10c6:	fe 01       	movw	r30, r28
    10c8:	ec 5a       	subi	r30, 0xAC	; 172
    10ca:	fe 4f       	sbci	r31, 0xFE	; 254
    10cc:	80 81       	ld	r24, Z
    10ce:	91 81       	ldd	r25, Z+1	; 0x01
    10d0:	01 97       	sbiw	r24, 0x01	; 1
    10d2:	f1 f7       	brne	.-4      	; 0x10d0 <main+0x442>
    10d4:	fe 01       	movw	r30, r28
    10d6:	ec 5a       	subi	r30, 0xAC	; 172
    10d8:	fe 4f       	sbci	r31, 0xFE	; 254
    10da:	91 83       	std	Z+1, r25	; 0x01
    10dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10de:	de 01       	movw	r26, r28
    10e0:	aa 5a       	subi	r26, 0xAA	; 170
    10e2:	be 4f       	sbci	r27, 0xFE	; 254
    10e4:	fe 01       	movw	r30, r28
    10e6:	ea 5a       	subi	r30, 0xAA	; 170
    10e8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	01 97       	sbiw	r24, 0x01	; 1
    10f0:	11 96       	adiw	r26, 0x01	; 1
    10f2:	9c 93       	st	X, r25
    10f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10f6:	fe 01       	movw	r30, r28
    10f8:	ea 5a       	subi	r30, 0xAA	; 170
    10fa:	fe 4f       	sbci	r31, 0xFE	; 254
    10fc:	80 81       	ld	r24, Z
    10fe:	91 81       	ldd	r25, Z+1	; 0x01
    1100:	00 97       	sbiw	r24, 0x00	; 0
    1102:	d1 f6       	brne	.-76     	; 0x10b8 <main+0x42a>
    1104:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1108:	8e 01       	movw	r16, r28
    110a:	0a 5a       	subi	r16, 0xAA	; 170
    110c:	1e 4f       	sbci	r17, 0xFE	; 254
    110e:	fe 01       	movw	r30, r28
    1110:	e8 5a       	subi	r30, 0xA8	; 168
    1112:	fe 4f       	sbci	r31, 0xFE	; 254
    1114:	60 81       	ld	r22, Z
    1116:	71 81       	ldd	r23, Z+1	; 0x01
    1118:	82 81       	ldd	r24, Z+2	; 0x02
    111a:	93 81       	ldd	r25, Z+3	; 0x03
    111c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1120:	dc 01       	movw	r26, r24
    1122:	cb 01       	movw	r24, r22
    1124:	f8 01       	movw	r30, r16
    1126:	91 83       	std	Z+1, r25	; 0x01
    1128:	80 83       	st	Z, r24
    112a:	de 01       	movw	r26, r28
    112c:	ae 5a       	subi	r26, 0xAE	; 174
    112e:	be 4f       	sbci	r27, 0xFE	; 254
    1130:	fe 01       	movw	r30, r28
    1132:	ea 5a       	subi	r30, 0xAA	; 170
    1134:	fe 4f       	sbci	r31, 0xFE	; 254
    1136:	80 81       	ld	r24, Z
    1138:	91 81       	ldd	r25, Z+1	; 0x01
    113a:	11 96       	adiw	r26, 0x01	; 1
    113c:	9c 93       	st	X, r25
    113e:	8e 93       	st	-X, r24
    1140:	fe 01       	movw	r30, r28
    1142:	ee 5a       	subi	r30, 0xAE	; 174
    1144:	fe 4f       	sbci	r31, 0xFE	; 254
    1146:	80 81       	ld	r24, Z
    1148:	91 81       	ldd	r25, Z+1	; 0x01
    114a:	01 97       	sbiw	r24, 0x01	; 1
    114c:	f1 f7       	brne	.-4      	; 0x114a <main+0x4bc>
    114e:	fe 01       	movw	r30, r28
    1150:	ee 5a       	subi	r30, 0xAE	; 174
    1152:	fe 4f       	sbci	r31, 0xFE	; 254
    1154:	91 83       	std	Z+1, r25	; 0x01
    1156:	80 83       	st	Z, r24
    1158:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    115c:	8e 01       	movw	r16, r28
    115e:	00 5a       	subi	r16, 0xA0	; 160
    1160:	1e 4f       	sbci	r17, 0xFE	; 254
    1162:	fe 01       	movw	r30, r28
    1164:	ef 59       	subi	r30, 0x9F	; 159
    1166:	fe 4f       	sbci	r31, 0xFE	; 254
    1168:	60 81       	ld	r22, Z
    116a:	71 81       	ldd	r23, Z+1	; 0x01
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	93 81       	ldd	r25, Z+3	; 0x03
    1170:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1174:	dc 01       	movw	r26, r24
    1176:	cb 01       	movw	r24, r22
    1178:	f8 01       	movw	r30, r16
    117a:	80 83       	st	Z, r24
    117c:	de 01       	movw	r26, r28
    117e:	af 5a       	subi	r26, 0xAF	; 175
    1180:	be 4f       	sbci	r27, 0xFE	; 254
    1182:	fe 01       	movw	r30, r28
    1184:	e0 5a       	subi	r30, 0xA0	; 160
    1186:	fe 4f       	sbci	r31, 0xFE	; 254
    1188:	80 81       	ld	r24, Z
    118a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    118c:	fe 01       	movw	r30, r28
    118e:	ef 5a       	subi	r30, 0xAF	; 175
    1190:	fe 4f       	sbci	r31, 0xFE	; 254
    1192:	80 81       	ld	r24, Z
    1194:	8a 95       	dec	r24
    1196:	f1 f7       	brne	.-4      	; 0x1194 <main+0x506>
    1198:	fe 01       	movw	r30, r28
    119a:	ef 5a       	subi	r30, 0xAF	; 175
    119c:	fe 4f       	sbci	r31, 0xFE	; 254
    119e:	80 83       	st	Z, r24
    11a0:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
		_delay_us(1);
		}
		else if( !(GET_BIT(PINA,1))){ //Re 58733 HZ = 17Microsec
    11a4:	e9 e3       	ldi	r30, 0x39	; 57
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	80 81       	ld	r24, Z
    11aa:	86 95       	lsr	r24
    11ac:	88 2f       	mov	r24, r24
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	81 70       	andi	r24, 0x01	; 1
    11b2:	90 70       	andi	r25, 0x00	; 0
    11b4:	00 97       	sbiw	r24, 0x00	; 0
    11b6:	09 f0       	breq	.+2      	; 0x11ba <main+0x52c>
    11b8:	64 c2       	rjmp	.+1224   	; 0x1682 <main+0x9f4>
			SET_BIT(PORTC,7);
    11ba:	a5 e3       	ldi	r26, 0x35	; 53
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	e5 e3       	ldi	r30, 0x35	; 53
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	80 81       	ld	r24, Z
    11c4:	80 68       	ori	r24, 0x80	; 128
    11c6:	8c 93       	st	X, r24
    11c8:	fe 01       	movw	r30, r28
    11ca:	e3 5b       	subi	r30, 0xB3	; 179
    11cc:	fe 4f       	sbci	r31, 0xFE	; 254
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	a0 e0       	ldi	r26, 0x00	; 0
    11d4:	b1 e4       	ldi	r27, 0x41	; 65
    11d6:	80 83       	st	Z, r24
    11d8:	91 83       	std	Z+1, r25	; 0x01
    11da:	a2 83       	std	Z+2, r26	; 0x02
    11dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    11de:	8e 01       	movw	r16, r28
    11e0:	07 5b       	subi	r16, 0xB7	; 183
    11e2:	1e 4f       	sbci	r17, 0xFE	; 254
    11e4:	fe 01       	movw	r30, r28
    11e6:	e3 5b       	subi	r30, 0xB3	; 179
    11e8:	fe 4f       	sbci	r31, 0xFE	; 254
    11ea:	60 81       	ld	r22, Z
    11ec:	71 81       	ldd	r23, Z+1	; 0x01
    11ee:	82 81       	ldd	r24, Z+2	; 0x02
    11f0:	93 81       	ldd	r25, Z+3	; 0x03
    11f2:	2b ea       	ldi	r18, 0xAB	; 171
    11f4:	3a ea       	ldi	r19, 0xAA	; 170
    11f6:	4a e2       	ldi	r20, 0x2A	; 42
    11f8:	50 e4       	ldi	r21, 0x40	; 64
    11fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	f8 01       	movw	r30, r16
    1204:	80 83       	st	Z, r24
    1206:	91 83       	std	Z+1, r25	; 0x01
    1208:	a2 83       	std	Z+2, r26	; 0x02
    120a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    120c:	fe 01       	movw	r30, r28
    120e:	e7 5b       	subi	r30, 0xB7	; 183
    1210:	fe 4f       	sbci	r31, 0xFE	; 254
    1212:	60 81       	ld	r22, Z
    1214:	71 81       	ldd	r23, Z+1	; 0x01
    1216:	82 81       	ldd	r24, Z+2	; 0x02
    1218:	93 81       	ldd	r25, Z+3	; 0x03
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	40 e8       	ldi	r20, 0x80	; 128
    1220:	5f e3       	ldi	r21, 0x3F	; 63
    1222:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1226:	88 23       	and	r24, r24
    1228:	34 f4       	brge	.+12     	; 0x1236 <main+0x5a8>
		__ticks = 1;
    122a:	fe 01       	movw	r30, r28
    122c:	e8 5b       	subi	r30, 0xB8	; 184
    122e:	fe 4f       	sbci	r31, 0xFE	; 254
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	80 83       	st	Z, r24
    1234:	e0 c0       	rjmp	.+448    	; 0x13f6 <main+0x768>
	else if (__tmp > 255)
    1236:	fe 01       	movw	r30, r28
    1238:	e7 5b       	subi	r30, 0xB7	; 183
    123a:	fe 4f       	sbci	r31, 0xFE	; 254
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	4f e7       	ldi	r20, 0x7F	; 127
    124a:	53 e4       	ldi	r21, 0x43	; 67
    124c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1250:	18 16       	cp	r1, r24
    1252:	0c f0       	brlt	.+2      	; 0x1256 <main+0x5c8>
    1254:	c0 c0       	rjmp	.+384    	; 0x13d6 <main+0x748>
	{
		_delay_ms(__us / 1000.0);
    1256:	fe 01       	movw	r30, r28
    1258:	e3 5b       	subi	r30, 0xB3	; 179
    125a:	fe 4f       	sbci	r31, 0xFE	; 254
    125c:	60 81       	ld	r22, Z
    125e:	71 81       	ldd	r23, Z+1	; 0x01
    1260:	82 81       	ldd	r24, Z+2	; 0x02
    1262:	93 81       	ldd	r25, Z+3	; 0x03
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	4a e7       	ldi	r20, 0x7A	; 122
    126a:	54 e4       	ldi	r21, 0x44	; 68
    126c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	fe 01       	movw	r30, r28
    1276:	ec 5b       	subi	r30, 0xBC	; 188
    1278:	fe 4f       	sbci	r31, 0xFE	; 254
    127a:	80 83       	st	Z, r24
    127c:	91 83       	std	Z+1, r25	; 0x01
    127e:	a2 83       	std	Z+2, r26	; 0x02
    1280:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1282:	8e 01       	movw	r16, r28
    1284:	00 5c       	subi	r16, 0xC0	; 192
    1286:	1e 4f       	sbci	r17, 0xFE	; 254
    1288:	fe 01       	movw	r30, r28
    128a:	ec 5b       	subi	r30, 0xBC	; 188
    128c:	fe 4f       	sbci	r31, 0xFE	; 254
    128e:	60 81       	ld	r22, Z
    1290:	71 81       	ldd	r23, Z+1	; 0x01
    1292:	82 81       	ldd	r24, Z+2	; 0x02
    1294:	93 81       	ldd	r25, Z+3	; 0x03
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	4a ef       	ldi	r20, 0xFA	; 250
    129c:	54 e4       	ldi	r21, 0x44	; 68
    129e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12a2:	dc 01       	movw	r26, r24
    12a4:	cb 01       	movw	r24, r22
    12a6:	f8 01       	movw	r30, r16
    12a8:	80 83       	st	Z, r24
    12aa:	91 83       	std	Z+1, r25	; 0x01
    12ac:	a2 83       	std	Z+2, r26	; 0x02
    12ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12b0:	fe 01       	movw	r30, r28
    12b2:	e0 5c       	subi	r30, 0xC0	; 192
    12b4:	fe 4f       	sbci	r31, 0xFE	; 254
    12b6:	60 81       	ld	r22, Z
    12b8:	71 81       	ldd	r23, Z+1	; 0x01
    12ba:	82 81       	ldd	r24, Z+2	; 0x02
    12bc:	93 81       	ldd	r25, Z+3	; 0x03
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	40 e8       	ldi	r20, 0x80	; 128
    12c4:	5f e3       	ldi	r21, 0x3F	; 63
    12c6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    12ca:	88 23       	and	r24, r24
    12cc:	44 f4       	brge	.+16     	; 0x12de <main+0x650>
		__ticks = 1;
    12ce:	fe 01       	movw	r30, r28
    12d0:	e2 5c       	subi	r30, 0xC2	; 194
    12d2:	fe 4f       	sbci	r31, 0xFE	; 254
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	91 83       	std	Z+1, r25	; 0x01
    12da:	80 83       	st	Z, r24
    12dc:	64 c0       	rjmp	.+200    	; 0x13a6 <main+0x718>
	else if (__tmp > 65535)
    12de:	fe 01       	movw	r30, r28
    12e0:	e0 5c       	subi	r30, 0xC0	; 192
    12e2:	fe 4f       	sbci	r31, 0xFE	; 254
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	20 e0       	ldi	r18, 0x00	; 0
    12ee:	3f ef       	ldi	r19, 0xFF	; 255
    12f0:	4f e7       	ldi	r20, 0x7F	; 127
    12f2:	57 e4       	ldi	r21, 0x47	; 71
    12f4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    12f8:	18 16       	cp	r1, r24
    12fa:	0c f0       	brlt	.+2      	; 0x12fe <main+0x670>
    12fc:	43 c0       	rjmp	.+134    	; 0x1384 <main+0x6f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12fe:	fe 01       	movw	r30, r28
    1300:	ec 5b       	subi	r30, 0xBC	; 188
    1302:	fe 4f       	sbci	r31, 0xFE	; 254
    1304:	60 81       	ld	r22, Z
    1306:	71 81       	ldd	r23, Z+1	; 0x01
    1308:	82 81       	ldd	r24, Z+2	; 0x02
    130a:	93 81       	ldd	r25, Z+3	; 0x03
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	40 e2       	ldi	r20, 0x20	; 32
    1312:	51 e4       	ldi	r21, 0x41	; 65
    1314:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	8e 01       	movw	r16, r28
    131e:	02 5c       	subi	r16, 0xC2	; 194
    1320:	1e 4f       	sbci	r17, 0xFE	; 254
    1322:	bc 01       	movw	r22, r24
    1324:	cd 01       	movw	r24, r26
    1326:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    132a:	dc 01       	movw	r26, r24
    132c:	cb 01       	movw	r24, r22
    132e:	f8 01       	movw	r30, r16
    1330:	91 83       	std	Z+1, r25	; 0x01
    1332:	80 83       	st	Z, r24
    1334:	1f c0       	rjmp	.+62     	; 0x1374 <main+0x6e6>
    1336:	fe 01       	movw	r30, r28
    1338:	e4 5c       	subi	r30, 0xC4	; 196
    133a:	fe 4f       	sbci	r31, 0xFE	; 254
    133c:	88 ec       	ldi	r24, 0xC8	; 200
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	91 83       	std	Z+1, r25	; 0x01
    1342:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1344:	fe 01       	movw	r30, r28
    1346:	e4 5c       	subi	r30, 0xC4	; 196
    1348:	fe 4f       	sbci	r31, 0xFE	; 254
    134a:	80 81       	ld	r24, Z
    134c:	91 81       	ldd	r25, Z+1	; 0x01
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	f1 f7       	brne	.-4      	; 0x134e <main+0x6c0>
    1352:	fe 01       	movw	r30, r28
    1354:	e4 5c       	subi	r30, 0xC4	; 196
    1356:	fe 4f       	sbci	r31, 0xFE	; 254
    1358:	91 83       	std	Z+1, r25	; 0x01
    135a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    135c:	de 01       	movw	r26, r28
    135e:	a2 5c       	subi	r26, 0xC2	; 194
    1360:	be 4f       	sbci	r27, 0xFE	; 254
    1362:	fe 01       	movw	r30, r28
    1364:	e2 5c       	subi	r30, 0xC2	; 194
    1366:	fe 4f       	sbci	r31, 0xFE	; 254
    1368:	80 81       	ld	r24, Z
    136a:	91 81       	ldd	r25, Z+1	; 0x01
    136c:	01 97       	sbiw	r24, 0x01	; 1
    136e:	11 96       	adiw	r26, 0x01	; 1
    1370:	9c 93       	st	X, r25
    1372:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1374:	fe 01       	movw	r30, r28
    1376:	e2 5c       	subi	r30, 0xC2	; 194
    1378:	fe 4f       	sbci	r31, 0xFE	; 254
    137a:	80 81       	ld	r24, Z
    137c:	91 81       	ldd	r25, Z+1	; 0x01
    137e:	00 97       	sbiw	r24, 0x00	; 0
    1380:	d1 f6       	brne	.-76     	; 0x1336 <main+0x6a8>
    1382:	4b c0       	rjmp	.+150    	; 0x141a <main+0x78c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1384:	8e 01       	movw	r16, r28
    1386:	02 5c       	subi	r16, 0xC2	; 194
    1388:	1e 4f       	sbci	r17, 0xFE	; 254
    138a:	fe 01       	movw	r30, r28
    138c:	e0 5c       	subi	r30, 0xC0	; 192
    138e:	fe 4f       	sbci	r31, 0xFE	; 254
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	82 81       	ldd	r24, Z+2	; 0x02
    1396:	93 81       	ldd	r25, Z+3	; 0x03
    1398:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    139c:	dc 01       	movw	r26, r24
    139e:	cb 01       	movw	r24, r22
    13a0:	f8 01       	movw	r30, r16
    13a2:	91 83       	std	Z+1, r25	; 0x01
    13a4:	80 83       	st	Z, r24
    13a6:	de 01       	movw	r26, r28
    13a8:	a6 5c       	subi	r26, 0xC6	; 198
    13aa:	be 4f       	sbci	r27, 0xFE	; 254
    13ac:	fe 01       	movw	r30, r28
    13ae:	e2 5c       	subi	r30, 0xC2	; 194
    13b0:	fe 4f       	sbci	r31, 0xFE	; 254
    13b2:	80 81       	ld	r24, Z
    13b4:	91 81       	ldd	r25, Z+1	; 0x01
    13b6:	11 96       	adiw	r26, 0x01	; 1
    13b8:	9c 93       	st	X, r25
    13ba:	8e 93       	st	-X, r24
    13bc:	fe 01       	movw	r30, r28
    13be:	e6 5c       	subi	r30, 0xC6	; 198
    13c0:	fe 4f       	sbci	r31, 0xFE	; 254
    13c2:	80 81       	ld	r24, Z
    13c4:	91 81       	ldd	r25, Z+1	; 0x01
    13c6:	01 97       	sbiw	r24, 0x01	; 1
    13c8:	f1 f7       	brne	.-4      	; 0x13c6 <main+0x738>
    13ca:	fe 01       	movw	r30, r28
    13cc:	e6 5c       	subi	r30, 0xC6	; 198
    13ce:	fe 4f       	sbci	r31, 0xFE	; 254
    13d0:	91 83       	std	Z+1, r25	; 0x01
    13d2:	80 83       	st	Z, r24
    13d4:	22 c0       	rjmp	.+68     	; 0x141a <main+0x78c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    13d6:	8e 01       	movw	r16, r28
    13d8:	08 5b       	subi	r16, 0xB8	; 184
    13da:	1e 4f       	sbci	r17, 0xFE	; 254
    13dc:	fe 01       	movw	r30, r28
    13de:	e7 5b       	subi	r30, 0xB7	; 183
    13e0:	fe 4f       	sbci	r31, 0xFE	; 254
    13e2:	60 81       	ld	r22, Z
    13e4:	71 81       	ldd	r23, Z+1	; 0x01
    13e6:	82 81       	ldd	r24, Z+2	; 0x02
    13e8:	93 81       	ldd	r25, Z+3	; 0x03
    13ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ee:	dc 01       	movw	r26, r24
    13f0:	cb 01       	movw	r24, r22
    13f2:	f8 01       	movw	r30, r16
    13f4:	80 83       	st	Z, r24
    13f6:	de 01       	movw	r26, r28
    13f8:	a7 5c       	subi	r26, 0xC7	; 199
    13fa:	be 4f       	sbci	r27, 0xFE	; 254
    13fc:	fe 01       	movw	r30, r28
    13fe:	e8 5b       	subi	r30, 0xB8	; 184
    1400:	fe 4f       	sbci	r31, 0xFE	; 254
    1402:	80 81       	ld	r24, Z
    1404:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1406:	fe 01       	movw	r30, r28
    1408:	e7 5c       	subi	r30, 0xC7	; 199
    140a:	fe 4f       	sbci	r31, 0xFE	; 254
    140c:	80 81       	ld	r24, Z
    140e:	8a 95       	dec	r24
    1410:	f1 f7       	brne	.-4      	; 0x140e <main+0x780>
    1412:	fe 01       	movw	r30, r28
    1414:	e7 5c       	subi	r30, 0xC7	; 199
    1416:	fe 4f       	sbci	r31, 0xFE	; 254
    1418:	80 83       	st	Z, r24
			_delay_us(8);
			CLR_BIT(PORTC,7);
    141a:	a5 e3       	ldi	r26, 0x35	; 53
    141c:	b0 e0       	ldi	r27, 0x00	; 0
    141e:	e5 e3       	ldi	r30, 0x35	; 53
    1420:	f0 e0       	ldi	r31, 0x00	; 0
    1422:	80 81       	ld	r24, Z
    1424:	8f 77       	andi	r24, 0x7F	; 127
    1426:	8c 93       	st	X, r24
    1428:	fe 01       	movw	r30, r28
    142a:	eb 5c       	subi	r30, 0xCB	; 203
    142c:	fe 4f       	sbci	r31, 0xFE	; 254
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	a0 e1       	ldi	r26, 0x10	; 16
    1434:	b1 e4       	ldi	r27, 0x41	; 65
    1436:	80 83       	st	Z, r24
    1438:	91 83       	std	Z+1, r25	; 0x01
    143a:	a2 83       	std	Z+2, r26	; 0x02
    143c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    143e:	8e 01       	movw	r16, r28
    1440:	0f 5c       	subi	r16, 0xCF	; 207
    1442:	1e 4f       	sbci	r17, 0xFE	; 254
    1444:	fe 01       	movw	r30, r28
    1446:	eb 5c       	subi	r30, 0xCB	; 203
    1448:	fe 4f       	sbci	r31, 0xFE	; 254
    144a:	60 81       	ld	r22, Z
    144c:	71 81       	ldd	r23, Z+1	; 0x01
    144e:	82 81       	ldd	r24, Z+2	; 0x02
    1450:	93 81       	ldd	r25, Z+3	; 0x03
    1452:	2b ea       	ldi	r18, 0xAB	; 171
    1454:	3a ea       	ldi	r19, 0xAA	; 170
    1456:	4a e2       	ldi	r20, 0x2A	; 42
    1458:	50 e4       	ldi	r21, 0x40	; 64
    145a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    145e:	dc 01       	movw	r26, r24
    1460:	cb 01       	movw	r24, r22
    1462:	f8 01       	movw	r30, r16
    1464:	80 83       	st	Z, r24
    1466:	91 83       	std	Z+1, r25	; 0x01
    1468:	a2 83       	std	Z+2, r26	; 0x02
    146a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    146c:	fe 01       	movw	r30, r28
    146e:	ef 5c       	subi	r30, 0xCF	; 207
    1470:	fe 4f       	sbci	r31, 0xFE	; 254
    1472:	60 81       	ld	r22, Z
    1474:	71 81       	ldd	r23, Z+1	; 0x01
    1476:	82 81       	ldd	r24, Z+2	; 0x02
    1478:	93 81       	ldd	r25, Z+3	; 0x03
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 e8       	ldi	r20, 0x80	; 128
    1480:	5f e3       	ldi	r21, 0x3F	; 63
    1482:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1486:	88 23       	and	r24, r24
    1488:	34 f4       	brge	.+12     	; 0x1496 <main+0x808>
		__ticks = 1;
    148a:	fe 01       	movw	r30, r28
    148c:	e0 5d       	subi	r30, 0xD0	; 208
    148e:	fe 4f       	sbci	r31, 0xFE	; 254
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	80 83       	st	Z, r24
    1494:	e2 c0       	rjmp	.+452    	; 0x165a <main+0x9cc>
	else if (__tmp > 255)
    1496:	fe 01       	movw	r30, r28
    1498:	ef 5c       	subi	r30, 0xCF	; 207
    149a:	fe 4f       	sbci	r31, 0xFE	; 254
    149c:	60 81       	ld	r22, Z
    149e:	71 81       	ldd	r23, Z+1	; 0x01
    14a0:	82 81       	ldd	r24, Z+2	; 0x02
    14a2:	93 81       	ldd	r25, Z+3	; 0x03
    14a4:	20 e0       	ldi	r18, 0x00	; 0
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	4f e7       	ldi	r20, 0x7F	; 127
    14aa:	53 e4       	ldi	r21, 0x43	; 67
    14ac:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    14b0:	18 16       	cp	r1, r24
    14b2:	0c f0       	brlt	.+2      	; 0x14b6 <main+0x828>
    14b4:	c2 c0       	rjmp	.+388    	; 0x163a <main+0x9ac>
	{
		_delay_ms(__us / 1000.0);
    14b6:	fe 01       	movw	r30, r28
    14b8:	eb 5c       	subi	r30, 0xCB	; 203
    14ba:	fe 4f       	sbci	r31, 0xFE	; 254
    14bc:	60 81       	ld	r22, Z
    14be:	71 81       	ldd	r23, Z+1	; 0x01
    14c0:	82 81       	ldd	r24, Z+2	; 0x02
    14c2:	93 81       	ldd	r25, Z+3	; 0x03
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	4a e7       	ldi	r20, 0x7A	; 122
    14ca:	54 e4       	ldi	r21, 0x44	; 68
    14cc:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	fe 01       	movw	r30, r28
    14d6:	e4 5d       	subi	r30, 0xD4	; 212
    14d8:	fe 4f       	sbci	r31, 0xFE	; 254
    14da:	80 83       	st	Z, r24
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	a2 83       	std	Z+2, r26	; 0x02
    14e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14e2:	8e 01       	movw	r16, r28
    14e4:	08 5d       	subi	r16, 0xD8	; 216
    14e6:	1e 4f       	sbci	r17, 0xFE	; 254
    14e8:	fe 01       	movw	r30, r28
    14ea:	e4 5d       	subi	r30, 0xD4	; 212
    14ec:	fe 4f       	sbci	r31, 0xFE	; 254
    14ee:	60 81       	ld	r22, Z
    14f0:	71 81       	ldd	r23, Z+1	; 0x01
    14f2:	82 81       	ldd	r24, Z+2	; 0x02
    14f4:	93 81       	ldd	r25, Z+3	; 0x03
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	4a ef       	ldi	r20, 0xFA	; 250
    14fc:	54 e4       	ldi	r21, 0x44	; 68
    14fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1502:	dc 01       	movw	r26, r24
    1504:	cb 01       	movw	r24, r22
    1506:	f8 01       	movw	r30, r16
    1508:	80 83       	st	Z, r24
    150a:	91 83       	std	Z+1, r25	; 0x01
    150c:	a2 83       	std	Z+2, r26	; 0x02
    150e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1510:	fe 01       	movw	r30, r28
    1512:	e8 5d       	subi	r30, 0xD8	; 216
    1514:	fe 4f       	sbci	r31, 0xFE	; 254
    1516:	60 81       	ld	r22, Z
    1518:	71 81       	ldd	r23, Z+1	; 0x01
    151a:	82 81       	ldd	r24, Z+2	; 0x02
    151c:	93 81       	ldd	r25, Z+3	; 0x03
    151e:	20 e0       	ldi	r18, 0x00	; 0
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	40 e8       	ldi	r20, 0x80	; 128
    1524:	5f e3       	ldi	r21, 0x3F	; 63
    1526:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    152a:	88 23       	and	r24, r24
    152c:	44 f4       	brge	.+16     	; 0x153e <main+0x8b0>
		__ticks = 1;
    152e:	fe 01       	movw	r30, r28
    1530:	ea 5d       	subi	r30, 0xDA	; 218
    1532:	fe 4f       	sbci	r31, 0xFE	; 254
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	91 83       	std	Z+1, r25	; 0x01
    153a:	80 83       	st	Z, r24
    153c:	65 c0       	rjmp	.+202    	; 0x1608 <main+0x97a>
	else if (__tmp > 65535)
    153e:	fe 01       	movw	r30, r28
    1540:	e8 5d       	subi	r30, 0xD8	; 216
    1542:	fe 4f       	sbci	r31, 0xFE	; 254
    1544:	60 81       	ld	r22, Z
    1546:	71 81       	ldd	r23, Z+1	; 0x01
    1548:	82 81       	ldd	r24, Z+2	; 0x02
    154a:	93 81       	ldd	r25, Z+3	; 0x03
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	3f ef       	ldi	r19, 0xFF	; 255
    1550:	4f e7       	ldi	r20, 0x7F	; 127
    1552:	57 e4       	ldi	r21, 0x47	; 71
    1554:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1558:	18 16       	cp	r1, r24
    155a:	0c f0       	brlt	.+2      	; 0x155e <main+0x8d0>
    155c:	44 c0       	rjmp	.+136    	; 0x15e6 <main+0x958>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    155e:	fe 01       	movw	r30, r28
    1560:	e4 5d       	subi	r30, 0xD4	; 212
    1562:	fe 4f       	sbci	r31, 0xFE	; 254
    1564:	60 81       	ld	r22, Z
    1566:	71 81       	ldd	r23, Z+1	; 0x01
    1568:	82 81       	ldd	r24, Z+2	; 0x02
    156a:	93 81       	ldd	r25, Z+3	; 0x03
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	40 e2       	ldi	r20, 0x20	; 32
    1572:	51 e4       	ldi	r21, 0x41	; 65
    1574:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1578:	dc 01       	movw	r26, r24
    157a:	cb 01       	movw	r24, r22
    157c:	8e 01       	movw	r16, r28
    157e:	0a 5d       	subi	r16, 0xDA	; 218
    1580:	1e 4f       	sbci	r17, 0xFE	; 254
    1582:	bc 01       	movw	r22, r24
    1584:	cd 01       	movw	r24, r26
    1586:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    158a:	dc 01       	movw	r26, r24
    158c:	cb 01       	movw	r24, r22
    158e:	f8 01       	movw	r30, r16
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	80 83       	st	Z, r24
    1594:	1f c0       	rjmp	.+62     	; 0x15d4 <main+0x946>
    1596:	fe 01       	movw	r30, r28
    1598:	ec 5d       	subi	r30, 0xDC	; 220
    159a:	fe 4f       	sbci	r31, 0xFE	; 254
    159c:	88 ec       	ldi	r24, 0xC8	; 200
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	91 83       	std	Z+1, r25	; 0x01
    15a2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15a4:	fe 01       	movw	r30, r28
    15a6:	ec 5d       	subi	r30, 0xDC	; 220
    15a8:	fe 4f       	sbci	r31, 0xFE	; 254
    15aa:	80 81       	ld	r24, Z
    15ac:	91 81       	ldd	r25, Z+1	; 0x01
    15ae:	01 97       	sbiw	r24, 0x01	; 1
    15b0:	f1 f7       	brne	.-4      	; 0x15ae <main+0x920>
    15b2:	fe 01       	movw	r30, r28
    15b4:	ec 5d       	subi	r30, 0xDC	; 220
    15b6:	fe 4f       	sbci	r31, 0xFE	; 254
    15b8:	91 83       	std	Z+1, r25	; 0x01
    15ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15bc:	de 01       	movw	r26, r28
    15be:	aa 5d       	subi	r26, 0xDA	; 218
    15c0:	be 4f       	sbci	r27, 0xFE	; 254
    15c2:	fe 01       	movw	r30, r28
    15c4:	ea 5d       	subi	r30, 0xDA	; 218
    15c6:	fe 4f       	sbci	r31, 0xFE	; 254
    15c8:	80 81       	ld	r24, Z
    15ca:	91 81       	ldd	r25, Z+1	; 0x01
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	11 96       	adiw	r26, 0x01	; 1
    15d0:	9c 93       	st	X, r25
    15d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d4:	fe 01       	movw	r30, r28
    15d6:	ea 5d       	subi	r30, 0xDA	; 218
    15d8:	fe 4f       	sbci	r31, 0xFE	; 254
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	00 97       	sbiw	r24, 0x00	; 0
    15e0:	d1 f6       	brne	.-76     	; 0x1596 <main+0x908>
    15e2:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15e6:	8e 01       	movw	r16, r28
    15e8:	0a 5d       	subi	r16, 0xDA	; 218
    15ea:	1e 4f       	sbci	r17, 0xFE	; 254
    15ec:	fe 01       	movw	r30, r28
    15ee:	e8 5d       	subi	r30, 0xD8	; 216
    15f0:	fe 4f       	sbci	r31, 0xFE	; 254
    15f2:	60 81       	ld	r22, Z
    15f4:	71 81       	ldd	r23, Z+1	; 0x01
    15f6:	82 81       	ldd	r24, Z+2	; 0x02
    15f8:	93 81       	ldd	r25, Z+3	; 0x03
    15fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	f8 01       	movw	r30, r16
    1604:	91 83       	std	Z+1, r25	; 0x01
    1606:	80 83       	st	Z, r24
    1608:	de 01       	movw	r26, r28
    160a:	ae 5d       	subi	r26, 0xDE	; 222
    160c:	be 4f       	sbci	r27, 0xFE	; 254
    160e:	fe 01       	movw	r30, r28
    1610:	ea 5d       	subi	r30, 0xDA	; 218
    1612:	fe 4f       	sbci	r31, 0xFE	; 254
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	11 96       	adiw	r26, 0x01	; 1
    161a:	9c 93       	st	X, r25
    161c:	8e 93       	st	-X, r24
    161e:	fe 01       	movw	r30, r28
    1620:	ee 5d       	subi	r30, 0xDE	; 222
    1622:	fe 4f       	sbci	r31, 0xFE	; 254
    1624:	80 81       	ld	r24, Z
    1626:	91 81       	ldd	r25, Z+1	; 0x01
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	f1 f7       	brne	.-4      	; 0x1628 <main+0x99a>
    162c:	fe 01       	movw	r30, r28
    162e:	ee 5d       	subi	r30, 0xDE	; 222
    1630:	fe 4f       	sbci	r31, 0xFE	; 254
    1632:	91 83       	std	Z+1, r25	; 0x01
    1634:	80 83       	st	Z, r24
    1636:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    163a:	8e 01       	movw	r16, r28
    163c:	00 5d       	subi	r16, 0xD0	; 208
    163e:	1e 4f       	sbci	r17, 0xFE	; 254
    1640:	fe 01       	movw	r30, r28
    1642:	ef 5c       	subi	r30, 0xCF	; 207
    1644:	fe 4f       	sbci	r31, 0xFE	; 254
    1646:	60 81       	ld	r22, Z
    1648:	71 81       	ldd	r23, Z+1	; 0x01
    164a:	82 81       	ldd	r24, Z+2	; 0x02
    164c:	93 81       	ldd	r25, Z+3	; 0x03
    164e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	f8 01       	movw	r30, r16
    1658:	80 83       	st	Z, r24
    165a:	de 01       	movw	r26, r28
    165c:	af 5d       	subi	r26, 0xDF	; 223
    165e:	be 4f       	sbci	r27, 0xFE	; 254
    1660:	fe 01       	movw	r30, r28
    1662:	e0 5d       	subi	r30, 0xD0	; 208
    1664:	fe 4f       	sbci	r31, 0xFE	; 254
    1666:	80 81       	ld	r24, Z
    1668:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    166a:	fe 01       	movw	r30, r28
    166c:	ef 5d       	subi	r30, 0xDF	; 223
    166e:	fe 4f       	sbci	r31, 0xFE	; 254
    1670:	80 81       	ld	r24, Z
    1672:	8a 95       	dec	r24
    1674:	f1 f7       	brne	.-4      	; 0x1672 <main+0x9e4>
    1676:	fe 01       	movw	r30, r28
    1678:	ef 5d       	subi	r30, 0xDF	; 223
    167a:	fe 4f       	sbci	r31, 0xFE	; 254
    167c:	80 83       	st	Z, r24
    167e:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
			_delay_us(9);
		}
		else if( !(GET_BIT(PINA,2))){ //MI 659255 HZ = 1.5Microsec
    1682:	e9 e3       	ldi	r30, 0x39	; 57
    1684:	f0 e0       	ldi	r31, 0x00	; 0
    1686:	80 81       	ld	r24, Z
    1688:	86 95       	lsr	r24
    168a:	86 95       	lsr	r24
    168c:	88 2f       	mov	r24, r24
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	81 70       	andi	r24, 0x01	; 1
    1692:	90 70       	andi	r25, 0x00	; 0
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	09 f0       	breq	.+2      	; 0x169a <main+0xa0c>
    1698:	64 c2       	rjmp	.+1224   	; 0x1b62 <main+0xed4>
				SET_BIT(PORTC,7);
    169a:	a5 e3       	ldi	r26, 0x35	; 53
    169c:	b0 e0       	ldi	r27, 0x00	; 0
    169e:	e5 e3       	ldi	r30, 0x35	; 53
    16a0:	f0 e0       	ldi	r31, 0x00	; 0
    16a2:	80 81       	ld	r24, Z
    16a4:	80 68       	ori	r24, 0x80	; 128
    16a6:	8c 93       	st	X, r24
    16a8:	fe 01       	movw	r30, r28
    16aa:	e3 5e       	subi	r30, 0xE3	; 227
    16ac:	fe 4f       	sbci	r31, 0xFE	; 254
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	a0 e4       	ldi	r26, 0x40	; 64
    16b4:	bf e3       	ldi	r27, 0x3F	; 63
    16b6:	80 83       	st	Z, r24
    16b8:	91 83       	std	Z+1, r25	; 0x01
    16ba:	a2 83       	std	Z+2, r26	; 0x02
    16bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    16be:	8e 01       	movw	r16, r28
    16c0:	07 5e       	subi	r16, 0xE7	; 231
    16c2:	1e 4f       	sbci	r17, 0xFE	; 254
    16c4:	fe 01       	movw	r30, r28
    16c6:	e3 5e       	subi	r30, 0xE3	; 227
    16c8:	fe 4f       	sbci	r31, 0xFE	; 254
    16ca:	60 81       	ld	r22, Z
    16cc:	71 81       	ldd	r23, Z+1	; 0x01
    16ce:	82 81       	ldd	r24, Z+2	; 0x02
    16d0:	93 81       	ldd	r25, Z+3	; 0x03
    16d2:	2b ea       	ldi	r18, 0xAB	; 171
    16d4:	3a ea       	ldi	r19, 0xAA	; 170
    16d6:	4a e2       	ldi	r20, 0x2A	; 42
    16d8:	50 e4       	ldi	r21, 0x40	; 64
    16da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16de:	dc 01       	movw	r26, r24
    16e0:	cb 01       	movw	r24, r22
    16e2:	f8 01       	movw	r30, r16
    16e4:	80 83       	st	Z, r24
    16e6:	91 83       	std	Z+1, r25	; 0x01
    16e8:	a2 83       	std	Z+2, r26	; 0x02
    16ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16ec:	fe 01       	movw	r30, r28
    16ee:	e7 5e       	subi	r30, 0xE7	; 231
    16f0:	fe 4f       	sbci	r31, 0xFE	; 254
    16f2:	60 81       	ld	r22, Z
    16f4:	71 81       	ldd	r23, Z+1	; 0x01
    16f6:	82 81       	ldd	r24, Z+2	; 0x02
    16f8:	93 81       	ldd	r25, Z+3	; 0x03
    16fa:	20 e0       	ldi	r18, 0x00	; 0
    16fc:	30 e0       	ldi	r19, 0x00	; 0
    16fe:	40 e8       	ldi	r20, 0x80	; 128
    1700:	5f e3       	ldi	r21, 0x3F	; 63
    1702:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1706:	88 23       	and	r24, r24
    1708:	34 f4       	brge	.+12     	; 0x1716 <main+0xa88>
		__ticks = 1;
    170a:	fe 01       	movw	r30, r28
    170c:	e8 5e       	subi	r30, 0xE8	; 232
    170e:	fe 4f       	sbci	r31, 0xFE	; 254
    1710:	81 e0       	ldi	r24, 0x01	; 1
    1712:	80 83       	st	Z, r24
    1714:	e0 c0       	rjmp	.+448    	; 0x18d6 <main+0xc48>
	else if (__tmp > 255)
    1716:	fe 01       	movw	r30, r28
    1718:	e7 5e       	subi	r30, 0xE7	; 231
    171a:	fe 4f       	sbci	r31, 0xFE	; 254
    171c:	60 81       	ld	r22, Z
    171e:	71 81       	ldd	r23, Z+1	; 0x01
    1720:	82 81       	ldd	r24, Z+2	; 0x02
    1722:	93 81       	ldd	r25, Z+3	; 0x03
    1724:	20 e0       	ldi	r18, 0x00	; 0
    1726:	30 e0       	ldi	r19, 0x00	; 0
    1728:	4f e7       	ldi	r20, 0x7F	; 127
    172a:	53 e4       	ldi	r21, 0x43	; 67
    172c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1730:	18 16       	cp	r1, r24
    1732:	0c f0       	brlt	.+2      	; 0x1736 <main+0xaa8>
    1734:	c0 c0       	rjmp	.+384    	; 0x18b6 <main+0xc28>
	{
		_delay_ms(__us / 1000.0);
    1736:	fe 01       	movw	r30, r28
    1738:	e3 5e       	subi	r30, 0xE3	; 227
    173a:	fe 4f       	sbci	r31, 0xFE	; 254
    173c:	60 81       	ld	r22, Z
    173e:	71 81       	ldd	r23, Z+1	; 0x01
    1740:	82 81       	ldd	r24, Z+2	; 0x02
    1742:	93 81       	ldd	r25, Z+3	; 0x03
    1744:	20 e0       	ldi	r18, 0x00	; 0
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	4a e7       	ldi	r20, 0x7A	; 122
    174a:	54 e4       	ldi	r21, 0x44	; 68
    174c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1750:	dc 01       	movw	r26, r24
    1752:	cb 01       	movw	r24, r22
    1754:	fe 01       	movw	r30, r28
    1756:	ec 5e       	subi	r30, 0xEC	; 236
    1758:	fe 4f       	sbci	r31, 0xFE	; 254
    175a:	80 83       	st	Z, r24
    175c:	91 83       	std	Z+1, r25	; 0x01
    175e:	a2 83       	std	Z+2, r26	; 0x02
    1760:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1762:	8e 01       	movw	r16, r28
    1764:	00 5f       	subi	r16, 0xF0	; 240
    1766:	1e 4f       	sbci	r17, 0xFE	; 254
    1768:	fe 01       	movw	r30, r28
    176a:	ec 5e       	subi	r30, 0xEC	; 236
    176c:	fe 4f       	sbci	r31, 0xFE	; 254
    176e:	60 81       	ld	r22, Z
    1770:	71 81       	ldd	r23, Z+1	; 0x01
    1772:	82 81       	ldd	r24, Z+2	; 0x02
    1774:	93 81       	ldd	r25, Z+3	; 0x03
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	4a ef       	ldi	r20, 0xFA	; 250
    177c:	54 e4       	ldi	r21, 0x44	; 68
    177e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1782:	dc 01       	movw	r26, r24
    1784:	cb 01       	movw	r24, r22
    1786:	f8 01       	movw	r30, r16
    1788:	80 83       	st	Z, r24
    178a:	91 83       	std	Z+1, r25	; 0x01
    178c:	a2 83       	std	Z+2, r26	; 0x02
    178e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1790:	fe 01       	movw	r30, r28
    1792:	e0 5f       	subi	r30, 0xF0	; 240
    1794:	fe 4f       	sbci	r31, 0xFE	; 254
    1796:	60 81       	ld	r22, Z
    1798:	71 81       	ldd	r23, Z+1	; 0x01
    179a:	82 81       	ldd	r24, Z+2	; 0x02
    179c:	93 81       	ldd	r25, Z+3	; 0x03
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	40 e8       	ldi	r20, 0x80	; 128
    17a4:	5f e3       	ldi	r21, 0x3F	; 63
    17a6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    17aa:	88 23       	and	r24, r24
    17ac:	44 f4       	brge	.+16     	; 0x17be <main+0xb30>
		__ticks = 1;
    17ae:	fe 01       	movw	r30, r28
    17b0:	e2 5f       	subi	r30, 0xF2	; 242
    17b2:	fe 4f       	sbci	r31, 0xFE	; 254
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	91 83       	std	Z+1, r25	; 0x01
    17ba:	80 83       	st	Z, r24
    17bc:	64 c0       	rjmp	.+200    	; 0x1886 <main+0xbf8>
	else if (__tmp > 65535)
    17be:	fe 01       	movw	r30, r28
    17c0:	e0 5f       	subi	r30, 0xF0	; 240
    17c2:	fe 4f       	sbci	r31, 0xFE	; 254
    17c4:	60 81       	ld	r22, Z
    17c6:	71 81       	ldd	r23, Z+1	; 0x01
    17c8:	82 81       	ldd	r24, Z+2	; 0x02
    17ca:	93 81       	ldd	r25, Z+3	; 0x03
    17cc:	20 e0       	ldi	r18, 0x00	; 0
    17ce:	3f ef       	ldi	r19, 0xFF	; 255
    17d0:	4f e7       	ldi	r20, 0x7F	; 127
    17d2:	57 e4       	ldi	r21, 0x47	; 71
    17d4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17d8:	18 16       	cp	r1, r24
    17da:	0c f0       	brlt	.+2      	; 0x17de <main+0xb50>
    17dc:	43 c0       	rjmp	.+134    	; 0x1864 <main+0xbd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17de:	fe 01       	movw	r30, r28
    17e0:	ec 5e       	subi	r30, 0xEC	; 236
    17e2:	fe 4f       	sbci	r31, 0xFE	; 254
    17e4:	60 81       	ld	r22, Z
    17e6:	71 81       	ldd	r23, Z+1	; 0x01
    17e8:	82 81       	ldd	r24, Z+2	; 0x02
    17ea:	93 81       	ldd	r25, Z+3	; 0x03
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	40 e2       	ldi	r20, 0x20	; 32
    17f2:	51 e4       	ldi	r21, 0x41	; 65
    17f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	8e 01       	movw	r16, r28
    17fe:	02 5f       	subi	r16, 0xF2	; 242
    1800:	1e 4f       	sbci	r17, 0xFE	; 254
    1802:	bc 01       	movw	r22, r24
    1804:	cd 01       	movw	r24, r26
    1806:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
    180e:	f8 01       	movw	r30, r16
    1810:	91 83       	std	Z+1, r25	; 0x01
    1812:	80 83       	st	Z, r24
    1814:	1f c0       	rjmp	.+62     	; 0x1854 <main+0xbc6>
    1816:	fe 01       	movw	r30, r28
    1818:	e4 5f       	subi	r30, 0xF4	; 244
    181a:	fe 4f       	sbci	r31, 0xFE	; 254
    181c:	88 ec       	ldi	r24, 0xC8	; 200
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	91 83       	std	Z+1, r25	; 0x01
    1822:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1824:	fe 01       	movw	r30, r28
    1826:	e4 5f       	subi	r30, 0xF4	; 244
    1828:	fe 4f       	sbci	r31, 0xFE	; 254
    182a:	80 81       	ld	r24, Z
    182c:	91 81       	ldd	r25, Z+1	; 0x01
    182e:	01 97       	sbiw	r24, 0x01	; 1
    1830:	f1 f7       	brne	.-4      	; 0x182e <main+0xba0>
    1832:	fe 01       	movw	r30, r28
    1834:	e4 5f       	subi	r30, 0xF4	; 244
    1836:	fe 4f       	sbci	r31, 0xFE	; 254
    1838:	91 83       	std	Z+1, r25	; 0x01
    183a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    183c:	de 01       	movw	r26, r28
    183e:	a2 5f       	subi	r26, 0xF2	; 242
    1840:	be 4f       	sbci	r27, 0xFE	; 254
    1842:	fe 01       	movw	r30, r28
    1844:	e2 5f       	subi	r30, 0xF2	; 242
    1846:	fe 4f       	sbci	r31, 0xFE	; 254
    1848:	80 81       	ld	r24, Z
    184a:	91 81       	ldd	r25, Z+1	; 0x01
    184c:	01 97       	sbiw	r24, 0x01	; 1
    184e:	11 96       	adiw	r26, 0x01	; 1
    1850:	9c 93       	st	X, r25
    1852:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1854:	fe 01       	movw	r30, r28
    1856:	e2 5f       	subi	r30, 0xF2	; 242
    1858:	fe 4f       	sbci	r31, 0xFE	; 254
    185a:	80 81       	ld	r24, Z
    185c:	91 81       	ldd	r25, Z+1	; 0x01
    185e:	00 97       	sbiw	r24, 0x00	; 0
    1860:	d1 f6       	brne	.-76     	; 0x1816 <main+0xb88>
    1862:	4b c0       	rjmp	.+150    	; 0x18fa <main+0xc6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1864:	8e 01       	movw	r16, r28
    1866:	02 5f       	subi	r16, 0xF2	; 242
    1868:	1e 4f       	sbci	r17, 0xFE	; 254
    186a:	fe 01       	movw	r30, r28
    186c:	e0 5f       	subi	r30, 0xF0	; 240
    186e:	fe 4f       	sbci	r31, 0xFE	; 254
    1870:	60 81       	ld	r22, Z
    1872:	71 81       	ldd	r23, Z+1	; 0x01
    1874:	82 81       	ldd	r24, Z+2	; 0x02
    1876:	93 81       	ldd	r25, Z+3	; 0x03
    1878:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    187c:	dc 01       	movw	r26, r24
    187e:	cb 01       	movw	r24, r22
    1880:	f8 01       	movw	r30, r16
    1882:	91 83       	std	Z+1, r25	; 0x01
    1884:	80 83       	st	Z, r24
    1886:	de 01       	movw	r26, r28
    1888:	a6 5f       	subi	r26, 0xF6	; 246
    188a:	be 4f       	sbci	r27, 0xFE	; 254
    188c:	fe 01       	movw	r30, r28
    188e:	e2 5f       	subi	r30, 0xF2	; 242
    1890:	fe 4f       	sbci	r31, 0xFE	; 254
    1892:	80 81       	ld	r24, Z
    1894:	91 81       	ldd	r25, Z+1	; 0x01
    1896:	11 96       	adiw	r26, 0x01	; 1
    1898:	9c 93       	st	X, r25
    189a:	8e 93       	st	-X, r24
    189c:	fe 01       	movw	r30, r28
    189e:	e6 5f       	subi	r30, 0xF6	; 246
    18a0:	fe 4f       	sbci	r31, 0xFE	; 254
    18a2:	80 81       	ld	r24, Z
    18a4:	91 81       	ldd	r25, Z+1	; 0x01
    18a6:	01 97       	sbiw	r24, 0x01	; 1
    18a8:	f1 f7       	brne	.-4      	; 0x18a6 <main+0xc18>
    18aa:	fe 01       	movw	r30, r28
    18ac:	e6 5f       	subi	r30, 0xF6	; 246
    18ae:	fe 4f       	sbci	r31, 0xFE	; 254
    18b0:	91 83       	std	Z+1, r25	; 0x01
    18b2:	80 83       	st	Z, r24
    18b4:	22 c0       	rjmp	.+68     	; 0x18fa <main+0xc6c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    18b6:	8e 01       	movw	r16, r28
    18b8:	08 5e       	subi	r16, 0xE8	; 232
    18ba:	1e 4f       	sbci	r17, 0xFE	; 254
    18bc:	fe 01       	movw	r30, r28
    18be:	e7 5e       	subi	r30, 0xE7	; 231
    18c0:	fe 4f       	sbci	r31, 0xFE	; 254
    18c2:	60 81       	ld	r22, Z
    18c4:	71 81       	ldd	r23, Z+1	; 0x01
    18c6:	82 81       	ldd	r24, Z+2	; 0x02
    18c8:	93 81       	ldd	r25, Z+3	; 0x03
    18ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18ce:	dc 01       	movw	r26, r24
    18d0:	cb 01       	movw	r24, r22
    18d2:	f8 01       	movw	r30, r16
    18d4:	80 83       	st	Z, r24
    18d6:	de 01       	movw	r26, r28
    18d8:	a7 5f       	subi	r26, 0xF7	; 247
    18da:	be 4f       	sbci	r27, 0xFE	; 254
    18dc:	fe 01       	movw	r30, r28
    18de:	e8 5e       	subi	r30, 0xE8	; 232
    18e0:	fe 4f       	sbci	r31, 0xFE	; 254
    18e2:	80 81       	ld	r24, Z
    18e4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    18e6:	fe 01       	movw	r30, r28
    18e8:	e7 5f       	subi	r30, 0xF7	; 247
    18ea:	fe 4f       	sbci	r31, 0xFE	; 254
    18ec:	80 81       	ld	r24, Z
    18ee:	8a 95       	dec	r24
    18f0:	f1 f7       	brne	.-4      	; 0x18ee <main+0xc60>
    18f2:	fe 01       	movw	r30, r28
    18f4:	e7 5f       	subi	r30, 0xF7	; 247
    18f6:	fe 4f       	sbci	r31, 0xFE	; 254
    18f8:	80 83       	st	Z, r24
				_delay_us(0.75);
				CLR_BIT(PORTC,7);
    18fa:	a5 e3       	ldi	r26, 0x35	; 53
    18fc:	b0 e0       	ldi	r27, 0x00	; 0
    18fe:	e5 e3       	ldi	r30, 0x35	; 53
    1900:	f0 e0       	ldi	r31, 0x00	; 0
    1902:	80 81       	ld	r24, Z
    1904:	8f 77       	andi	r24, 0x7F	; 127
    1906:	8c 93       	st	X, r24
    1908:	fe 01       	movw	r30, r28
    190a:	eb 5f       	subi	r30, 0xFB	; 251
    190c:	fe 4f       	sbci	r31, 0xFE	; 254
    190e:	80 e0       	ldi	r24, 0x00	; 0
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	a0 e4       	ldi	r26, 0x40	; 64
    1914:	bf e3       	ldi	r27, 0x3F	; 63
    1916:	80 83       	st	Z, r24
    1918:	91 83       	std	Z+1, r25	; 0x01
    191a:	a2 83       	std	Z+2, r26	; 0x02
    191c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    191e:	8e 01       	movw	r16, r28
    1920:	0f 5f       	subi	r16, 0xFF	; 255
    1922:	1e 4f       	sbci	r17, 0xFE	; 254
    1924:	fe 01       	movw	r30, r28
    1926:	eb 5f       	subi	r30, 0xFB	; 251
    1928:	fe 4f       	sbci	r31, 0xFE	; 254
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	2b ea       	ldi	r18, 0xAB	; 171
    1934:	3a ea       	ldi	r19, 0xAA	; 170
    1936:	4a e2       	ldi	r20, 0x2A	; 42
    1938:	50 e4       	ldi	r21, 0x40	; 64
    193a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    193e:	dc 01       	movw	r26, r24
    1940:	cb 01       	movw	r24, r22
    1942:	f8 01       	movw	r30, r16
    1944:	80 83       	st	Z, r24
    1946:	91 83       	std	Z+1, r25	; 0x01
    1948:	a2 83       	std	Z+2, r26	; 0x02
    194a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    194c:	fe 01       	movw	r30, r28
    194e:	ef 5f       	subi	r30, 0xFF	; 255
    1950:	fe 4f       	sbci	r31, 0xFE	; 254
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e8       	ldi	r20, 0x80	; 128
    1960:	5f e3       	ldi	r21, 0x3F	; 63
    1962:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1966:	88 23       	and	r24, r24
    1968:	34 f4       	brge	.+12     	; 0x1976 <main+0xce8>
		__ticks = 1;
    196a:	fe 01       	movw	r30, r28
    196c:	e0 50       	subi	r30, 0x00	; 0
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	81 e0       	ldi	r24, 0x01	; 1
    1972:	80 83       	st	Z, r24
    1974:	e2 c0       	rjmp	.+452    	; 0x1b3a <main+0xeac>
	else if (__tmp > 255)
    1976:	fe 01       	movw	r30, r28
    1978:	ef 5f       	subi	r30, 0xFF	; 255
    197a:	fe 4f       	sbci	r31, 0xFE	; 254
    197c:	60 81       	ld	r22, Z
    197e:	71 81       	ldd	r23, Z+1	; 0x01
    1980:	82 81       	ldd	r24, Z+2	; 0x02
    1982:	93 81       	ldd	r25, Z+3	; 0x03
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	4f e7       	ldi	r20, 0x7F	; 127
    198a:	53 e4       	ldi	r21, 0x43	; 67
    198c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1990:	18 16       	cp	r1, r24
    1992:	0c f0       	brlt	.+2      	; 0x1996 <main+0xd08>
    1994:	c2 c0       	rjmp	.+388    	; 0x1b1a <main+0xe8c>
	{
		_delay_ms(__us / 1000.0);
    1996:	fe 01       	movw	r30, r28
    1998:	eb 5f       	subi	r30, 0xFB	; 251
    199a:	fe 4f       	sbci	r31, 0xFE	; 254
    199c:	60 81       	ld	r22, Z
    199e:	71 81       	ldd	r23, Z+1	; 0x01
    19a0:	82 81       	ldd	r24, Z+2	; 0x02
    19a2:	93 81       	ldd	r25, Z+3	; 0x03
    19a4:	20 e0       	ldi	r18, 0x00	; 0
    19a6:	30 e0       	ldi	r19, 0x00	; 0
    19a8:	4a e7       	ldi	r20, 0x7A	; 122
    19aa:	54 e4       	ldi	r21, 0x44	; 68
    19ac:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    19b0:	dc 01       	movw	r26, r24
    19b2:	cb 01       	movw	r24, r22
    19b4:	fe 01       	movw	r30, r28
    19b6:	e4 50       	subi	r30, 0x04	; 4
    19b8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ba:	80 83       	st	Z, r24
    19bc:	91 83       	std	Z+1, r25	; 0x01
    19be:	a2 83       	std	Z+2, r26	; 0x02
    19c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19c2:	8e 01       	movw	r16, r28
    19c4:	08 50       	subi	r16, 0x08	; 8
    19c6:	1f 4f       	sbci	r17, 0xFF	; 255
    19c8:	fe 01       	movw	r30, r28
    19ca:	e4 50       	subi	r30, 0x04	; 4
    19cc:	ff 4f       	sbci	r31, 0xFF	; 255
    19ce:	60 81       	ld	r22, Z
    19d0:	71 81       	ldd	r23, Z+1	; 0x01
    19d2:	82 81       	ldd	r24, Z+2	; 0x02
    19d4:	93 81       	ldd	r25, Z+3	; 0x03
    19d6:	20 e0       	ldi	r18, 0x00	; 0
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	4a ef       	ldi	r20, 0xFA	; 250
    19dc:	54 e4       	ldi	r21, 0x44	; 68
    19de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19e2:	dc 01       	movw	r26, r24
    19e4:	cb 01       	movw	r24, r22
    19e6:	f8 01       	movw	r30, r16
    19e8:	80 83       	st	Z, r24
    19ea:	91 83       	std	Z+1, r25	; 0x01
    19ec:	a2 83       	std	Z+2, r26	; 0x02
    19ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19f0:	fe 01       	movw	r30, r28
    19f2:	e8 50       	subi	r30, 0x08	; 8
    19f4:	ff 4f       	sbci	r31, 0xFF	; 255
    19f6:	60 81       	ld	r22, Z
    19f8:	71 81       	ldd	r23, Z+1	; 0x01
    19fa:	82 81       	ldd	r24, Z+2	; 0x02
    19fc:	93 81       	ldd	r25, Z+3	; 0x03
    19fe:	20 e0       	ldi	r18, 0x00	; 0
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	40 e8       	ldi	r20, 0x80	; 128
    1a04:	5f e3       	ldi	r21, 0x3F	; 63
    1a06:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a0a:	88 23       	and	r24, r24
    1a0c:	44 f4       	brge	.+16     	; 0x1a1e <main+0xd90>
		__ticks = 1;
    1a0e:	fe 01       	movw	r30, r28
    1a10:	ea 50       	subi	r30, 0x0A	; 10
    1a12:	ff 4f       	sbci	r31, 0xFF	; 255
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	91 83       	std	Z+1, r25	; 0x01
    1a1a:	80 83       	st	Z, r24
    1a1c:	65 c0       	rjmp	.+202    	; 0x1ae8 <main+0xe5a>
	else if (__tmp > 65535)
    1a1e:	fe 01       	movw	r30, r28
    1a20:	e8 50       	subi	r30, 0x08	; 8
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	60 81       	ld	r22, Z
    1a26:	71 81       	ldd	r23, Z+1	; 0x01
    1a28:	82 81       	ldd	r24, Z+2	; 0x02
    1a2a:	93 81       	ldd	r25, Z+3	; 0x03
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	3f ef       	ldi	r19, 0xFF	; 255
    1a30:	4f e7       	ldi	r20, 0x7F	; 127
    1a32:	57 e4       	ldi	r21, 0x47	; 71
    1a34:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1a38:	18 16       	cp	r1, r24
    1a3a:	0c f0       	brlt	.+2      	; 0x1a3e <main+0xdb0>
    1a3c:	44 c0       	rjmp	.+136    	; 0x1ac6 <main+0xe38>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a3e:	fe 01       	movw	r30, r28
    1a40:	e4 50       	subi	r30, 0x04	; 4
    1a42:	ff 4f       	sbci	r31, 0xFF	; 255
    1a44:	60 81       	ld	r22, Z
    1a46:	71 81       	ldd	r23, Z+1	; 0x01
    1a48:	82 81       	ldd	r24, Z+2	; 0x02
    1a4a:	93 81       	ldd	r25, Z+3	; 0x03
    1a4c:	20 e0       	ldi	r18, 0x00	; 0
    1a4e:	30 e0       	ldi	r19, 0x00	; 0
    1a50:	40 e2       	ldi	r20, 0x20	; 32
    1a52:	51 e4       	ldi	r21, 0x41	; 65
    1a54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a58:	dc 01       	movw	r26, r24
    1a5a:	cb 01       	movw	r24, r22
    1a5c:	8e 01       	movw	r16, r28
    1a5e:	0a 50       	subi	r16, 0x0A	; 10
    1a60:	1f 4f       	sbci	r17, 0xFF	; 255
    1a62:	bc 01       	movw	r22, r24
    1a64:	cd 01       	movw	r24, r26
    1a66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a6a:	dc 01       	movw	r26, r24
    1a6c:	cb 01       	movw	r24, r22
    1a6e:	f8 01       	movw	r30, r16
    1a70:	91 83       	std	Z+1, r25	; 0x01
    1a72:	80 83       	st	Z, r24
    1a74:	1f c0       	rjmp	.+62     	; 0x1ab4 <main+0xe26>
    1a76:	fe 01       	movw	r30, r28
    1a78:	ec 50       	subi	r30, 0x0C	; 12
    1a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7c:	88 ec       	ldi	r24, 0xC8	; 200
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	91 83       	std	Z+1, r25	; 0x01
    1a82:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a84:	fe 01       	movw	r30, r28
    1a86:	ec 50       	subi	r30, 0x0C	; 12
    1a88:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8a:	80 81       	ld	r24, Z
    1a8c:	91 81       	ldd	r25, Z+1	; 0x01
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
    1a90:	f1 f7       	brne	.-4      	; 0x1a8e <main+0xe00>
    1a92:	fe 01       	movw	r30, r28
    1a94:	ec 50       	subi	r30, 0x0C	; 12
    1a96:	ff 4f       	sbci	r31, 0xFF	; 255
    1a98:	91 83       	std	Z+1, r25	; 0x01
    1a9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a9c:	de 01       	movw	r26, r28
    1a9e:	aa 50       	subi	r26, 0x0A	; 10
    1aa0:	bf 4f       	sbci	r27, 0xFF	; 255
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	ea 50       	subi	r30, 0x0A	; 10
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	80 81       	ld	r24, Z
    1aaa:	91 81       	ldd	r25, Z+1	; 0x01
    1aac:	01 97       	sbiw	r24, 0x01	; 1
    1aae:	11 96       	adiw	r26, 0x01	; 1
    1ab0:	9c 93       	st	X, r25
    1ab2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	ea 50       	subi	r30, 0x0A	; 10
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	80 81       	ld	r24, Z
    1abc:	91 81       	ldd	r25, Z+1	; 0x01
    1abe:	00 97       	sbiw	r24, 0x00	; 0
    1ac0:	d1 f6       	brne	.-76     	; 0x1a76 <main+0xde8>
    1ac2:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ac6:	8e 01       	movw	r16, r28
    1ac8:	0a 50       	subi	r16, 0x0A	; 10
    1aca:	1f 4f       	sbci	r17, 0xFF	; 255
    1acc:	fe 01       	movw	r30, r28
    1ace:	e8 50       	subi	r30, 0x08	; 8
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	60 81       	ld	r22, Z
    1ad4:	71 81       	ldd	r23, Z+1	; 0x01
    1ad6:	82 81       	ldd	r24, Z+2	; 0x02
    1ad8:	93 81       	ldd	r25, Z+3	; 0x03
    1ada:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ade:	dc 01       	movw	r26, r24
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	f8 01       	movw	r30, r16
    1ae4:	91 83       	std	Z+1, r25	; 0x01
    1ae6:	80 83       	st	Z, r24
    1ae8:	de 01       	movw	r26, r28
    1aea:	ae 50       	subi	r26, 0x0E	; 14
    1aec:	bf 4f       	sbci	r27, 0xFF	; 255
    1aee:	fe 01       	movw	r30, r28
    1af0:	ea 50       	subi	r30, 0x0A	; 10
    1af2:	ff 4f       	sbci	r31, 0xFF	; 255
    1af4:	80 81       	ld	r24, Z
    1af6:	91 81       	ldd	r25, Z+1	; 0x01
    1af8:	11 96       	adiw	r26, 0x01	; 1
    1afa:	9c 93       	st	X, r25
    1afc:	8e 93       	st	-X, r24
    1afe:	fe 01       	movw	r30, r28
    1b00:	ee 50       	subi	r30, 0x0E	; 14
    1b02:	ff 4f       	sbci	r31, 0xFF	; 255
    1b04:	80 81       	ld	r24, Z
    1b06:	91 81       	ldd	r25, Z+1	; 0x01
    1b08:	01 97       	sbiw	r24, 0x01	; 1
    1b0a:	f1 f7       	brne	.-4      	; 0x1b08 <main+0xe7a>
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	ee 50       	subi	r30, 0x0E	; 14
    1b10:	ff 4f       	sbci	r31, 0xFF	; 255
    1b12:	91 83       	std	Z+1, r25	; 0x01
    1b14:	80 83       	st	Z, r24
    1b16:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1b1a:	8e 01       	movw	r16, r28
    1b1c:	00 50       	subi	r16, 0x00	; 0
    1b1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b20:	fe 01       	movw	r30, r28
    1b22:	ef 5f       	subi	r30, 0xFF	; 255
    1b24:	fe 4f       	sbci	r31, 0xFE	; 254
    1b26:	60 81       	ld	r22, Z
    1b28:	71 81       	ldd	r23, Z+1	; 0x01
    1b2a:	82 81       	ldd	r24, Z+2	; 0x02
    1b2c:	93 81       	ldd	r25, Z+3	; 0x03
    1b2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b32:	dc 01       	movw	r26, r24
    1b34:	cb 01       	movw	r24, r22
    1b36:	f8 01       	movw	r30, r16
    1b38:	80 83       	st	Z, r24
    1b3a:	de 01       	movw	r26, r28
    1b3c:	af 50       	subi	r26, 0x0F	; 15
    1b3e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b40:	fe 01       	movw	r30, r28
    1b42:	e0 50       	subi	r30, 0x00	; 0
    1b44:	ff 4f       	sbci	r31, 0xFF	; 255
    1b46:	80 81       	ld	r24, Z
    1b48:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	ef 50       	subi	r30, 0x0F	; 15
    1b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b50:	80 81       	ld	r24, Z
    1b52:	8a 95       	dec	r24
    1b54:	f1 f7       	brne	.-4      	; 0x1b52 <main+0xec4>
    1b56:	fe 01       	movw	r30, r28
    1b58:	ef 50       	subi	r30, 0x0F	; 15
    1b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5c:	80 83       	st	Z, r24
    1b5e:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
				_delay_us(0.75);
		}
		else if( !(GET_BIT(PINA,3))){ //FA 698456 HZ = 1.4Microsec
    1b62:	e9 e3       	ldi	r30, 0x39	; 57
    1b64:	f0 e0       	ldi	r31, 0x00	; 0
    1b66:	80 81       	ld	r24, Z
    1b68:	86 95       	lsr	r24
    1b6a:	86 95       	lsr	r24
    1b6c:	86 95       	lsr	r24
    1b6e:	88 2f       	mov	r24, r24
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	81 70       	andi	r24, 0x01	; 1
    1b74:	90 70       	andi	r25, 0x00	; 0
    1b76:	00 97       	sbiw	r24, 0x00	; 0
    1b78:	09 f0       	breq	.+2      	; 0x1b7c <main+0xeee>
    1b7a:	64 c2       	rjmp	.+1224   	; 0x2044 <main+0x13b6>
					SET_BIT(PORTC,7);
    1b7c:	a5 e3       	ldi	r26, 0x35	; 53
    1b7e:	b0 e0       	ldi	r27, 0x00	; 0
    1b80:	e5 e3       	ldi	r30, 0x35	; 53
    1b82:	f0 e0       	ldi	r31, 0x00	; 0
    1b84:	80 81       	ld	r24, Z
    1b86:	80 68       	ori	r24, 0x80	; 128
    1b88:	8c 93       	st	X, r24
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e3 51       	subi	r30, 0x13	; 19
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	83 e3       	ldi	r24, 0x33	; 51
    1b92:	93 e3       	ldi	r25, 0x33	; 51
    1b94:	a3 e3       	ldi	r26, 0x33	; 51
    1b96:	bf e3       	ldi	r27, 0x3F	; 63
    1b98:	80 83       	st	Z, r24
    1b9a:	91 83       	std	Z+1, r25	; 0x01
    1b9c:	a2 83       	std	Z+2, r26	; 0x02
    1b9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1ba0:	8e 01       	movw	r16, r28
    1ba2:	07 51       	subi	r16, 0x17	; 23
    1ba4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba6:	fe 01       	movw	r30, r28
    1ba8:	e3 51       	subi	r30, 0x13	; 19
    1baa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bac:	60 81       	ld	r22, Z
    1bae:	71 81       	ldd	r23, Z+1	; 0x01
    1bb0:	82 81       	ldd	r24, Z+2	; 0x02
    1bb2:	93 81       	ldd	r25, Z+3	; 0x03
    1bb4:	2b ea       	ldi	r18, 0xAB	; 171
    1bb6:	3a ea       	ldi	r19, 0xAA	; 170
    1bb8:	4a e2       	ldi	r20, 0x2A	; 42
    1bba:	50 e4       	ldi	r21, 0x40	; 64
    1bbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	f8 01       	movw	r30, r16
    1bc6:	80 83       	st	Z, r24
    1bc8:	91 83       	std	Z+1, r25	; 0x01
    1bca:	a2 83       	std	Z+2, r26	; 0x02
    1bcc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bce:	fe 01       	movw	r30, r28
    1bd0:	e7 51       	subi	r30, 0x17	; 23
    1bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd4:	60 81       	ld	r22, Z
    1bd6:	71 81       	ldd	r23, Z+1	; 0x01
    1bd8:	82 81       	ldd	r24, Z+2	; 0x02
    1bda:	93 81       	ldd	r25, Z+3	; 0x03
    1bdc:	20 e0       	ldi	r18, 0x00	; 0
    1bde:	30 e0       	ldi	r19, 0x00	; 0
    1be0:	40 e8       	ldi	r20, 0x80	; 128
    1be2:	5f e3       	ldi	r21, 0x3F	; 63
    1be4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1be8:	88 23       	and	r24, r24
    1bea:	34 f4       	brge	.+12     	; 0x1bf8 <main+0xf6a>
		__ticks = 1;
    1bec:	fe 01       	movw	r30, r28
    1bee:	e8 51       	subi	r30, 0x18	; 24
    1bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf2:	81 e0       	ldi	r24, 0x01	; 1
    1bf4:	80 83       	st	Z, r24
    1bf6:	e0 c0       	rjmp	.+448    	; 0x1db8 <main+0x112a>
	else if (__tmp > 255)
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	e7 51       	subi	r30, 0x17	; 23
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	60 81       	ld	r22, Z
    1c00:	71 81       	ldd	r23, Z+1	; 0x01
    1c02:	82 81       	ldd	r24, Z+2	; 0x02
    1c04:	93 81       	ldd	r25, Z+3	; 0x03
    1c06:	20 e0       	ldi	r18, 0x00	; 0
    1c08:	30 e0       	ldi	r19, 0x00	; 0
    1c0a:	4f e7       	ldi	r20, 0x7F	; 127
    1c0c:	53 e4       	ldi	r21, 0x43	; 67
    1c0e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c12:	18 16       	cp	r1, r24
    1c14:	0c f0       	brlt	.+2      	; 0x1c18 <main+0xf8a>
    1c16:	c0 c0       	rjmp	.+384    	; 0x1d98 <main+0x110a>
	{
		_delay_ms(__us / 1000.0);
    1c18:	fe 01       	movw	r30, r28
    1c1a:	e3 51       	subi	r30, 0x13	; 19
    1c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1e:	60 81       	ld	r22, Z
    1c20:	71 81       	ldd	r23, Z+1	; 0x01
    1c22:	82 81       	ldd	r24, Z+2	; 0x02
    1c24:	93 81       	ldd	r25, Z+3	; 0x03
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	30 e0       	ldi	r19, 0x00	; 0
    1c2a:	4a e7       	ldi	r20, 0x7A	; 122
    1c2c:	54 e4       	ldi	r21, 0x44	; 68
    1c2e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1c32:	dc 01       	movw	r26, r24
    1c34:	cb 01       	movw	r24, r22
    1c36:	fe 01       	movw	r30, r28
    1c38:	ec 51       	subi	r30, 0x1C	; 28
    1c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3c:	80 83       	st	Z, r24
    1c3e:	91 83       	std	Z+1, r25	; 0x01
    1c40:	a2 83       	std	Z+2, r26	; 0x02
    1c42:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c44:	8e 01       	movw	r16, r28
    1c46:	00 52       	subi	r16, 0x20	; 32
    1c48:	1f 4f       	sbci	r17, 0xFF	; 255
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	ec 51       	subi	r30, 0x1C	; 28
    1c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c50:	60 81       	ld	r22, Z
    1c52:	71 81       	ldd	r23, Z+1	; 0x01
    1c54:	82 81       	ldd	r24, Z+2	; 0x02
    1c56:	93 81       	ldd	r25, Z+3	; 0x03
    1c58:	20 e0       	ldi	r18, 0x00	; 0
    1c5a:	30 e0       	ldi	r19, 0x00	; 0
    1c5c:	4a ef       	ldi	r20, 0xFA	; 250
    1c5e:	54 e4       	ldi	r21, 0x44	; 68
    1c60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c64:	dc 01       	movw	r26, r24
    1c66:	cb 01       	movw	r24, r22
    1c68:	f8 01       	movw	r30, r16
    1c6a:	80 83       	st	Z, r24
    1c6c:	91 83       	std	Z+1, r25	; 0x01
    1c6e:	a2 83       	std	Z+2, r26	; 0x02
    1c70:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c72:	fe 01       	movw	r30, r28
    1c74:	e0 52       	subi	r30, 0x20	; 32
    1c76:	ff 4f       	sbci	r31, 0xFF	; 255
    1c78:	60 81       	ld	r22, Z
    1c7a:	71 81       	ldd	r23, Z+1	; 0x01
    1c7c:	82 81       	ldd	r24, Z+2	; 0x02
    1c7e:	93 81       	ldd	r25, Z+3	; 0x03
    1c80:	20 e0       	ldi	r18, 0x00	; 0
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	40 e8       	ldi	r20, 0x80	; 128
    1c86:	5f e3       	ldi	r21, 0x3F	; 63
    1c88:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c8c:	88 23       	and	r24, r24
    1c8e:	44 f4       	brge	.+16     	; 0x1ca0 <main+0x1012>
		__ticks = 1;
    1c90:	fe 01       	movw	r30, r28
    1c92:	e2 52       	subi	r30, 0x22	; 34
    1c94:	ff 4f       	sbci	r31, 0xFF	; 255
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
    1c9e:	64 c0       	rjmp	.+200    	; 0x1d68 <main+0x10da>
	else if (__tmp > 65535)
    1ca0:	fe 01       	movw	r30, r28
    1ca2:	e0 52       	subi	r30, 0x20	; 32
    1ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca6:	60 81       	ld	r22, Z
    1ca8:	71 81       	ldd	r23, Z+1	; 0x01
    1caa:	82 81       	ldd	r24, Z+2	; 0x02
    1cac:	93 81       	ldd	r25, Z+3	; 0x03
    1cae:	20 e0       	ldi	r18, 0x00	; 0
    1cb0:	3f ef       	ldi	r19, 0xFF	; 255
    1cb2:	4f e7       	ldi	r20, 0x7F	; 127
    1cb4:	57 e4       	ldi	r21, 0x47	; 71
    1cb6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1cba:	18 16       	cp	r1, r24
    1cbc:	0c f0       	brlt	.+2      	; 0x1cc0 <main+0x1032>
    1cbe:	43 c0       	rjmp	.+134    	; 0x1d46 <main+0x10b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cc0:	fe 01       	movw	r30, r28
    1cc2:	ec 51       	subi	r30, 0x1C	; 28
    1cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc6:	60 81       	ld	r22, Z
    1cc8:	71 81       	ldd	r23, Z+1	; 0x01
    1cca:	82 81       	ldd	r24, Z+2	; 0x02
    1ccc:	93 81       	ldd	r25, Z+3	; 0x03
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	40 e2       	ldi	r20, 0x20	; 32
    1cd4:	51 e4       	ldi	r21, 0x41	; 65
    1cd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cda:	dc 01       	movw	r26, r24
    1cdc:	cb 01       	movw	r24, r22
    1cde:	8e 01       	movw	r16, r28
    1ce0:	02 52       	subi	r16, 0x22	; 34
    1ce2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	cd 01       	movw	r24, r26
    1ce8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cec:	dc 01       	movw	r26, r24
    1cee:	cb 01       	movw	r24, r22
    1cf0:	f8 01       	movw	r30, r16
    1cf2:	91 83       	std	Z+1, r25	; 0x01
    1cf4:	80 83       	st	Z, r24
    1cf6:	1f c0       	rjmp	.+62     	; 0x1d36 <main+0x10a8>
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	e4 52       	subi	r30, 0x24	; 36
    1cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfe:	88 ec       	ldi	r24, 0xC8	; 200
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	91 83       	std	Z+1, r25	; 0x01
    1d04:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1d06:	fe 01       	movw	r30, r28
    1d08:	e4 52       	subi	r30, 0x24	; 36
    1d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0c:	80 81       	ld	r24, Z
    1d0e:	91 81       	ldd	r25, Z+1	; 0x01
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	f1 f7       	brne	.-4      	; 0x1d10 <main+0x1082>
    1d14:	fe 01       	movw	r30, r28
    1d16:	e4 52       	subi	r30, 0x24	; 36
    1d18:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1a:	91 83       	std	Z+1, r25	; 0x01
    1d1c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d1e:	de 01       	movw	r26, r28
    1d20:	a2 52       	subi	r26, 0x22	; 34
    1d22:	bf 4f       	sbci	r27, 0xFF	; 255
    1d24:	fe 01       	movw	r30, r28
    1d26:	e2 52       	subi	r30, 0x22	; 34
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	01 97       	sbiw	r24, 0x01	; 1
    1d30:	11 96       	adiw	r26, 0x01	; 1
    1d32:	9c 93       	st	X, r25
    1d34:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d36:	fe 01       	movw	r30, r28
    1d38:	e2 52       	subi	r30, 0x22	; 34
    1d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3c:	80 81       	ld	r24, Z
    1d3e:	91 81       	ldd	r25, Z+1	; 0x01
    1d40:	00 97       	sbiw	r24, 0x00	; 0
    1d42:	d1 f6       	brne	.-76     	; 0x1cf8 <main+0x106a>
    1d44:	4b c0       	rjmp	.+150    	; 0x1ddc <main+0x114e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d46:	8e 01       	movw	r16, r28
    1d48:	02 52       	subi	r16, 0x22	; 34
    1d4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	e0 52       	subi	r30, 0x20	; 32
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d5e:	dc 01       	movw	r26, r24
    1d60:	cb 01       	movw	r24, r22
    1d62:	f8 01       	movw	r30, r16
    1d64:	91 83       	std	Z+1, r25	; 0x01
    1d66:	80 83       	st	Z, r24
    1d68:	de 01       	movw	r26, r28
    1d6a:	a6 52       	subi	r26, 0x26	; 38
    1d6c:	bf 4f       	sbci	r27, 0xFF	; 255
    1d6e:	fe 01       	movw	r30, r28
    1d70:	e2 52       	subi	r30, 0x22	; 34
    1d72:	ff 4f       	sbci	r31, 0xFF	; 255
    1d74:	80 81       	ld	r24, Z
    1d76:	91 81       	ldd	r25, Z+1	; 0x01
    1d78:	11 96       	adiw	r26, 0x01	; 1
    1d7a:	9c 93       	st	X, r25
    1d7c:	8e 93       	st	-X, r24
    1d7e:	fe 01       	movw	r30, r28
    1d80:	e6 52       	subi	r30, 0x26	; 38
    1d82:	ff 4f       	sbci	r31, 0xFF	; 255
    1d84:	80 81       	ld	r24, Z
    1d86:	91 81       	ldd	r25, Z+1	; 0x01
    1d88:	01 97       	sbiw	r24, 0x01	; 1
    1d8a:	f1 f7       	brne	.-4      	; 0x1d88 <main+0x10fa>
    1d8c:	fe 01       	movw	r30, r28
    1d8e:	e6 52       	subi	r30, 0x26	; 38
    1d90:	ff 4f       	sbci	r31, 0xFF	; 255
    1d92:	91 83       	std	Z+1, r25	; 0x01
    1d94:	80 83       	st	Z, r24
    1d96:	22 c0       	rjmp	.+68     	; 0x1ddc <main+0x114e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	08 51       	subi	r16, 0x18	; 24
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	fe 01       	movw	r30, r28
    1da0:	e7 51       	subi	r30, 0x17	; 23
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	60 81       	ld	r22, Z
    1da6:	71 81       	ldd	r23, Z+1	; 0x01
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	f8 01       	movw	r30, r16
    1db6:	80 83       	st	Z, r24
    1db8:	de 01       	movw	r26, r28
    1dba:	a7 52       	subi	r26, 0x27	; 39
    1dbc:	bf 4f       	sbci	r27, 0xFF	; 255
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	e8 51       	subi	r30, 0x18	; 24
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	80 81       	ld	r24, Z
    1dc6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1dc8:	fe 01       	movw	r30, r28
    1dca:	e7 52       	subi	r30, 0x27	; 39
    1dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dce:	80 81       	ld	r24, Z
    1dd0:	8a 95       	dec	r24
    1dd2:	f1 f7       	brne	.-4      	; 0x1dd0 <main+0x1142>
    1dd4:	fe 01       	movw	r30, r28
    1dd6:	e7 52       	subi	r30, 0x27	; 39
    1dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dda:	80 83       	st	Z, r24
					_delay_us(0.7);
					CLR_BIT(PORTC,7);
    1ddc:	a5 e3       	ldi	r26, 0x35	; 53
    1dde:	b0 e0       	ldi	r27, 0x00	; 0
    1de0:	e5 e3       	ldi	r30, 0x35	; 53
    1de2:	f0 e0       	ldi	r31, 0x00	; 0
    1de4:	80 81       	ld	r24, Z
    1de6:	8f 77       	andi	r24, 0x7F	; 127
    1de8:	8c 93       	st	X, r24
    1dea:	fe 01       	movw	r30, r28
    1dec:	eb 52       	subi	r30, 0x2B	; 43
    1dee:	ff 4f       	sbci	r31, 0xFF	; 255
    1df0:	83 e3       	ldi	r24, 0x33	; 51
    1df2:	93 e3       	ldi	r25, 0x33	; 51
    1df4:	a3 e3       	ldi	r26, 0x33	; 51
    1df6:	bf e3       	ldi	r27, 0x3F	; 63
    1df8:	80 83       	st	Z, r24
    1dfa:	91 83       	std	Z+1, r25	; 0x01
    1dfc:	a2 83       	std	Z+2, r26	; 0x02
    1dfe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e00:	8e 01       	movw	r16, r28
    1e02:	0f 52       	subi	r16, 0x2F	; 47
    1e04:	1f 4f       	sbci	r17, 0xFF	; 255
    1e06:	fe 01       	movw	r30, r28
    1e08:	eb 52       	subi	r30, 0x2B	; 43
    1e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0c:	60 81       	ld	r22, Z
    1e0e:	71 81       	ldd	r23, Z+1	; 0x01
    1e10:	82 81       	ldd	r24, Z+2	; 0x02
    1e12:	93 81       	ldd	r25, Z+3	; 0x03
    1e14:	2b ea       	ldi	r18, 0xAB	; 171
    1e16:	3a ea       	ldi	r19, 0xAA	; 170
    1e18:	4a e2       	ldi	r20, 0x2A	; 42
    1e1a:	50 e4       	ldi	r21, 0x40	; 64
    1e1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e20:	dc 01       	movw	r26, r24
    1e22:	cb 01       	movw	r24, r22
    1e24:	f8 01       	movw	r30, r16
    1e26:	80 83       	st	Z, r24
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	a2 83       	std	Z+2, r26	; 0x02
    1e2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e2e:	fe 01       	movw	r30, r28
    1e30:	ef 52       	subi	r30, 0x2F	; 47
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	20 e0       	ldi	r18, 0x00	; 0
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	40 e8       	ldi	r20, 0x80	; 128
    1e42:	5f e3       	ldi	r21, 0x3F	; 63
    1e44:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e48:	88 23       	and	r24, r24
    1e4a:	34 f4       	brge	.+12     	; 0x1e58 <main+0x11ca>
		__ticks = 1;
    1e4c:	fe 01       	movw	r30, r28
    1e4e:	e0 53       	subi	r30, 0x30	; 48
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	80 83       	st	Z, r24
    1e56:	e2 c0       	rjmp	.+452    	; 0x201c <main+0x138e>
	else if (__tmp > 255)
    1e58:	fe 01       	movw	r30, r28
    1e5a:	ef 52       	subi	r30, 0x2F	; 47
    1e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5e:	60 81       	ld	r22, Z
    1e60:	71 81       	ldd	r23, Z+1	; 0x01
    1e62:	82 81       	ldd	r24, Z+2	; 0x02
    1e64:	93 81       	ldd	r25, Z+3	; 0x03
    1e66:	20 e0       	ldi	r18, 0x00	; 0
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	4f e7       	ldi	r20, 0x7F	; 127
    1e6c:	53 e4       	ldi	r21, 0x43	; 67
    1e6e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e72:	18 16       	cp	r1, r24
    1e74:	0c f0       	brlt	.+2      	; 0x1e78 <main+0x11ea>
    1e76:	c2 c0       	rjmp	.+388    	; 0x1ffc <main+0x136e>
	{
		_delay_ms(__us / 1000.0);
    1e78:	fe 01       	movw	r30, r28
    1e7a:	eb 52       	subi	r30, 0x2B	; 43
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	60 81       	ld	r22, Z
    1e80:	71 81       	ldd	r23, Z+1	; 0x01
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	93 81       	ldd	r25, Z+3	; 0x03
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	4a e7       	ldi	r20, 0x7A	; 122
    1e8c:	54 e4       	ldi	r21, 0x44	; 68
    1e8e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1e92:	dc 01       	movw	r26, r24
    1e94:	cb 01       	movw	r24, r22
    1e96:	fe 01       	movw	r30, r28
    1e98:	e4 53       	subi	r30, 0x34	; 52
    1e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9c:	80 83       	st	Z, r24
    1e9e:	91 83       	std	Z+1, r25	; 0x01
    1ea0:	a2 83       	std	Z+2, r26	; 0x02
    1ea2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ea4:	8e 01       	movw	r16, r28
    1ea6:	08 53       	subi	r16, 0x38	; 56
    1ea8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eaa:	fe 01       	movw	r30, r28
    1eac:	e4 53       	subi	r30, 0x34	; 52
    1eae:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb0:	60 81       	ld	r22, Z
    1eb2:	71 81       	ldd	r23, Z+1	; 0x01
    1eb4:	82 81       	ldd	r24, Z+2	; 0x02
    1eb6:	93 81       	ldd	r25, Z+3	; 0x03
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	30 e0       	ldi	r19, 0x00	; 0
    1ebc:	4a ef       	ldi	r20, 0xFA	; 250
    1ebe:	54 e4       	ldi	r21, 0x44	; 68
    1ec0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ec4:	dc 01       	movw	r26, r24
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	f8 01       	movw	r30, r16
    1eca:	80 83       	st	Z, r24
    1ecc:	91 83       	std	Z+1, r25	; 0x01
    1ece:	a2 83       	std	Z+2, r26	; 0x02
    1ed0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	e8 53       	subi	r30, 0x38	; 56
    1ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed8:	60 81       	ld	r22, Z
    1eda:	71 81       	ldd	r23, Z+1	; 0x01
    1edc:	82 81       	ldd	r24, Z+2	; 0x02
    1ede:	93 81       	ldd	r25, Z+3	; 0x03
    1ee0:	20 e0       	ldi	r18, 0x00	; 0
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	40 e8       	ldi	r20, 0x80	; 128
    1ee6:	5f e3       	ldi	r21, 0x3F	; 63
    1ee8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1eec:	88 23       	and	r24, r24
    1eee:	44 f4       	brge	.+16     	; 0x1f00 <main+0x1272>
		__ticks = 1;
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	ea 53       	subi	r30, 0x3A	; 58
    1ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef6:	81 e0       	ldi	r24, 0x01	; 1
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	91 83       	std	Z+1, r25	; 0x01
    1efc:	80 83       	st	Z, r24
    1efe:	65 c0       	rjmp	.+202    	; 0x1fca <main+0x133c>
	else if (__tmp > 65535)
    1f00:	fe 01       	movw	r30, r28
    1f02:	e8 53       	subi	r30, 0x38	; 56
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	60 81       	ld	r22, Z
    1f08:	71 81       	ldd	r23, Z+1	; 0x01
    1f0a:	82 81       	ldd	r24, Z+2	; 0x02
    1f0c:	93 81       	ldd	r25, Z+3	; 0x03
    1f0e:	20 e0       	ldi	r18, 0x00	; 0
    1f10:	3f ef       	ldi	r19, 0xFF	; 255
    1f12:	4f e7       	ldi	r20, 0x7F	; 127
    1f14:	57 e4       	ldi	r21, 0x47	; 71
    1f16:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1f1a:	18 16       	cp	r1, r24
    1f1c:	0c f0       	brlt	.+2      	; 0x1f20 <main+0x1292>
    1f1e:	44 c0       	rjmp	.+136    	; 0x1fa8 <main+0x131a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f20:	fe 01       	movw	r30, r28
    1f22:	e4 53       	subi	r30, 0x34	; 52
    1f24:	ff 4f       	sbci	r31, 0xFF	; 255
    1f26:	60 81       	ld	r22, Z
    1f28:	71 81       	ldd	r23, Z+1	; 0x01
    1f2a:	82 81       	ldd	r24, Z+2	; 0x02
    1f2c:	93 81       	ldd	r25, Z+3	; 0x03
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	40 e2       	ldi	r20, 0x20	; 32
    1f34:	51 e4       	ldi	r21, 0x41	; 65
    1f36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f3a:	dc 01       	movw	r26, r24
    1f3c:	cb 01       	movw	r24, r22
    1f3e:	8e 01       	movw	r16, r28
    1f40:	0a 53       	subi	r16, 0x3A	; 58
    1f42:	1f 4f       	sbci	r17, 0xFF	; 255
    1f44:	bc 01       	movw	r22, r24
    1f46:	cd 01       	movw	r24, r26
    1f48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	cb 01       	movw	r24, r22
    1f50:	f8 01       	movw	r30, r16
    1f52:	91 83       	std	Z+1, r25	; 0x01
    1f54:	80 83       	st	Z, r24
    1f56:	1f c0       	rjmp	.+62     	; 0x1f96 <main+0x1308>
    1f58:	fe 01       	movw	r30, r28
    1f5a:	ec 53       	subi	r30, 0x3C	; 60
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	88 ec       	ldi	r24, 0xC8	; 200
    1f60:	90 e0       	ldi	r25, 0x00	; 0
    1f62:	91 83       	std	Z+1, r25	; 0x01
    1f64:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1f66:	fe 01       	movw	r30, r28
    1f68:	ec 53       	subi	r30, 0x3C	; 60
    1f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6c:	80 81       	ld	r24, Z
    1f6e:	91 81       	ldd	r25, Z+1	; 0x01
    1f70:	01 97       	sbiw	r24, 0x01	; 1
    1f72:	f1 f7       	brne	.-4      	; 0x1f70 <main+0x12e2>
    1f74:	fe 01       	movw	r30, r28
    1f76:	ec 53       	subi	r30, 0x3C	; 60
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	91 83       	std	Z+1, r25	; 0x01
    1f7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f7e:	de 01       	movw	r26, r28
    1f80:	aa 53       	subi	r26, 0x3A	; 58
    1f82:	bf 4f       	sbci	r27, 0xFF	; 255
    1f84:	fe 01       	movw	r30, r28
    1f86:	ea 53       	subi	r30, 0x3A	; 58
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	80 81       	ld	r24, Z
    1f8c:	91 81       	ldd	r25, Z+1	; 0x01
    1f8e:	01 97       	sbiw	r24, 0x01	; 1
    1f90:	11 96       	adiw	r26, 0x01	; 1
    1f92:	9c 93       	st	X, r25
    1f94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f96:	fe 01       	movw	r30, r28
    1f98:	ea 53       	subi	r30, 0x3A	; 58
    1f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9c:	80 81       	ld	r24, Z
    1f9e:	91 81       	ldd	r25, Z+1	; 0x01
    1fa0:	00 97       	sbiw	r24, 0x00	; 0
    1fa2:	d1 f6       	brne	.-76     	; 0x1f58 <main+0x12ca>
    1fa4:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fa8:	8e 01       	movw	r16, r28
    1faa:	0a 53       	subi	r16, 0x3A	; 58
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	fe 01       	movw	r30, r28
    1fb0:	e8 53       	subi	r30, 0x38	; 56
    1fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb4:	60 81       	ld	r22, Z
    1fb6:	71 81       	ldd	r23, Z+1	; 0x01
    1fb8:	82 81       	ldd	r24, Z+2	; 0x02
    1fba:	93 81       	ldd	r25, Z+3	; 0x03
    1fbc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fc0:	dc 01       	movw	r26, r24
    1fc2:	cb 01       	movw	r24, r22
    1fc4:	f8 01       	movw	r30, r16
    1fc6:	91 83       	std	Z+1, r25	; 0x01
    1fc8:	80 83       	st	Z, r24
    1fca:	de 01       	movw	r26, r28
    1fcc:	ae 53       	subi	r26, 0x3E	; 62
    1fce:	bf 4f       	sbci	r27, 0xFF	; 255
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	ea 53       	subi	r30, 0x3A	; 58
    1fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd6:	80 81       	ld	r24, Z
    1fd8:	91 81       	ldd	r25, Z+1	; 0x01
    1fda:	11 96       	adiw	r26, 0x01	; 1
    1fdc:	9c 93       	st	X, r25
    1fde:	8e 93       	st	-X, r24
    1fe0:	fe 01       	movw	r30, r28
    1fe2:	ee 53       	subi	r30, 0x3E	; 62
    1fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe6:	80 81       	ld	r24, Z
    1fe8:	91 81       	ldd	r25, Z+1	; 0x01
    1fea:	01 97       	sbiw	r24, 0x01	; 1
    1fec:	f1 f7       	brne	.-4      	; 0x1fea <main+0x135c>
    1fee:	fe 01       	movw	r30, r28
    1ff0:	ee 53       	subi	r30, 0x3E	; 62
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	91 83       	std	Z+1, r25	; 0x01
    1ff6:	80 83       	st	Z, r24
    1ff8:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1ffc:	8e 01       	movw	r16, r28
    1ffe:	00 53       	subi	r16, 0x30	; 48
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	fe 01       	movw	r30, r28
    2004:	ef 52       	subi	r30, 0x2F	; 47
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	60 81       	ld	r22, Z
    200a:	71 81       	ldd	r23, Z+1	; 0x01
    200c:	82 81       	ldd	r24, Z+2	; 0x02
    200e:	93 81       	ldd	r25, Z+3	; 0x03
    2010:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2014:	dc 01       	movw	r26, r24
    2016:	cb 01       	movw	r24, r22
    2018:	f8 01       	movw	r30, r16
    201a:	80 83       	st	Z, r24
    201c:	de 01       	movw	r26, r28
    201e:	af 53       	subi	r26, 0x3F	; 63
    2020:	bf 4f       	sbci	r27, 0xFF	; 255
    2022:	fe 01       	movw	r30, r28
    2024:	e0 53       	subi	r30, 0x30	; 48
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	80 81       	ld	r24, Z
    202a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    202c:	fe 01       	movw	r30, r28
    202e:	ef 53       	subi	r30, 0x3F	; 63
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	80 81       	ld	r24, Z
    2034:	8a 95       	dec	r24
    2036:	f1 f7       	brne	.-4      	; 0x2034 <main+0x13a6>
    2038:	fe 01       	movw	r30, r28
    203a:	ef 53       	subi	r30, 0x3F	; 63
    203c:	ff 4f       	sbci	r31, 0xFF	; 255
    203e:	80 83       	st	Z, r24
    2040:	0c 94 b0 18 	jmp	0x3160	; 0x3160 <main+0x24d2>
					_delay_us(0.7);
		}
		else if( !(GET_BIT(PINA,4))){ //SOL 783991 HZ = 1.3Microsec
    2044:	e9 e3       	ldi	r30, 0x39	; 57
    2046:	f0 e0       	ldi	r31, 0x00	; 0
    2048:	80 81       	ld	r24, Z
    204a:	82 95       	swap	r24
    204c:	8f 70       	andi	r24, 0x0F	; 15
    204e:	88 2f       	mov	r24, r24
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	81 70       	andi	r24, 0x01	; 1
    2054:	90 70       	andi	r25, 0x00	; 0
    2056:	00 97       	sbiw	r24, 0x00	; 0
    2058:	09 f0       	breq	.+2      	; 0x205c <main+0x13ce>
    205a:	61 c2       	rjmp	.+1218   	; 0x251e <main+0x1890>
					SET_BIT(PORTC,7);
    205c:	a5 e3       	ldi	r26, 0x35	; 53
    205e:	b0 e0       	ldi	r27, 0x00	; 0
    2060:	e5 e3       	ldi	r30, 0x35	; 53
    2062:	f0 e0       	ldi	r31, 0x00	; 0
    2064:	80 81       	ld	r24, Z
    2066:	80 68       	ori	r24, 0x80	; 128
    2068:	8c 93       	st	X, r24
    206a:	fe 01       	movw	r30, r28
    206c:	e3 54       	subi	r30, 0x43	; 67
    206e:	ff 4f       	sbci	r31, 0xFF	; 255
    2070:	86 e6       	ldi	r24, 0x66	; 102
    2072:	96 e6       	ldi	r25, 0x66	; 102
    2074:	a6 e2       	ldi	r26, 0x26	; 38
    2076:	bf e3       	ldi	r27, 0x3F	; 63
    2078:	80 83       	st	Z, r24
    207a:	91 83       	std	Z+1, r25	; 0x01
    207c:	a2 83       	std	Z+2, r26	; 0x02
    207e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2080:	8e 01       	movw	r16, r28
    2082:	07 54       	subi	r16, 0x47	; 71
    2084:	1f 4f       	sbci	r17, 0xFF	; 255
    2086:	fe 01       	movw	r30, r28
    2088:	e3 54       	subi	r30, 0x43	; 67
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	60 81       	ld	r22, Z
    208e:	71 81       	ldd	r23, Z+1	; 0x01
    2090:	82 81       	ldd	r24, Z+2	; 0x02
    2092:	93 81       	ldd	r25, Z+3	; 0x03
    2094:	2b ea       	ldi	r18, 0xAB	; 171
    2096:	3a ea       	ldi	r19, 0xAA	; 170
    2098:	4a e2       	ldi	r20, 0x2A	; 42
    209a:	50 e4       	ldi	r21, 0x40	; 64
    209c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a0:	dc 01       	movw	r26, r24
    20a2:	cb 01       	movw	r24, r22
    20a4:	f8 01       	movw	r30, r16
    20a6:	80 83       	st	Z, r24
    20a8:	91 83       	std	Z+1, r25	; 0x01
    20aa:	a2 83       	std	Z+2, r26	; 0x02
    20ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20ae:	fe 01       	movw	r30, r28
    20b0:	e7 54       	subi	r30, 0x47	; 71
    20b2:	ff 4f       	sbci	r31, 0xFF	; 255
    20b4:	60 81       	ld	r22, Z
    20b6:	71 81       	ldd	r23, Z+1	; 0x01
    20b8:	82 81       	ldd	r24, Z+2	; 0x02
    20ba:	93 81       	ldd	r25, Z+3	; 0x03
    20bc:	20 e0       	ldi	r18, 0x00	; 0
    20be:	30 e0       	ldi	r19, 0x00	; 0
    20c0:	40 e8       	ldi	r20, 0x80	; 128
    20c2:	5f e3       	ldi	r21, 0x3F	; 63
    20c4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    20c8:	88 23       	and	r24, r24
    20ca:	34 f4       	brge	.+12     	; 0x20d8 <main+0x144a>
		__ticks = 1;
    20cc:	fe 01       	movw	r30, r28
    20ce:	e8 54       	subi	r30, 0x48	; 72
    20d0:	ff 4f       	sbci	r31, 0xFF	; 255
    20d2:	81 e0       	ldi	r24, 0x01	; 1
    20d4:	80 83       	st	Z, r24
    20d6:	e0 c0       	rjmp	.+448    	; 0x2298 <main+0x160a>
	else if (__tmp > 255)
    20d8:	fe 01       	movw	r30, r28
    20da:	e7 54       	subi	r30, 0x47	; 71
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	60 81       	ld	r22, Z
    20e0:	71 81       	ldd	r23, Z+1	; 0x01
    20e2:	82 81       	ldd	r24, Z+2	; 0x02
    20e4:	93 81       	ldd	r25, Z+3	; 0x03
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	4f e7       	ldi	r20, 0x7F	; 127
    20ec:	53 e4       	ldi	r21, 0x43	; 67
    20ee:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    20f2:	18 16       	cp	r1, r24
    20f4:	0c f0       	brlt	.+2      	; 0x20f8 <main+0x146a>
    20f6:	c0 c0       	rjmp	.+384    	; 0x2278 <main+0x15ea>
	{
		_delay_ms(__us / 1000.0);
    20f8:	fe 01       	movw	r30, r28
    20fa:	e3 54       	subi	r30, 0x43	; 67
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	60 81       	ld	r22, Z
    2100:	71 81       	ldd	r23, Z+1	; 0x01
    2102:	82 81       	ldd	r24, Z+2	; 0x02
    2104:	93 81       	ldd	r25, Z+3	; 0x03
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	4a e7       	ldi	r20, 0x7A	; 122
    210c:	54 e4       	ldi	r21, 0x44	; 68
    210e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2112:	dc 01       	movw	r26, r24
    2114:	cb 01       	movw	r24, r22
    2116:	fe 01       	movw	r30, r28
    2118:	ec 54       	subi	r30, 0x4C	; 76
    211a:	ff 4f       	sbci	r31, 0xFF	; 255
    211c:	80 83       	st	Z, r24
    211e:	91 83       	std	Z+1, r25	; 0x01
    2120:	a2 83       	std	Z+2, r26	; 0x02
    2122:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2124:	8e 01       	movw	r16, r28
    2126:	00 55       	subi	r16, 0x50	; 80
    2128:	1f 4f       	sbci	r17, 0xFF	; 255
    212a:	fe 01       	movw	r30, r28
    212c:	ec 54       	subi	r30, 0x4C	; 76
    212e:	ff 4f       	sbci	r31, 0xFF	; 255
    2130:	60 81       	ld	r22, Z
    2132:	71 81       	ldd	r23, Z+1	; 0x01
    2134:	82 81       	ldd	r24, Z+2	; 0x02
    2136:	93 81       	ldd	r25, Z+3	; 0x03
    2138:	20 e0       	ldi	r18, 0x00	; 0
    213a:	30 e0       	ldi	r19, 0x00	; 0
    213c:	4a ef       	ldi	r20, 0xFA	; 250
    213e:	54 e4       	ldi	r21, 0x44	; 68
    2140:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2144:	dc 01       	movw	r26, r24
    2146:	cb 01       	movw	r24, r22
    2148:	f8 01       	movw	r30, r16
    214a:	80 83       	st	Z, r24
    214c:	91 83       	std	Z+1, r25	; 0x01
    214e:	a2 83       	std	Z+2, r26	; 0x02
    2150:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2152:	fe 01       	movw	r30, r28
    2154:	e0 55       	subi	r30, 0x50	; 80
    2156:	ff 4f       	sbci	r31, 0xFF	; 255
    2158:	60 81       	ld	r22, Z
    215a:	71 81       	ldd	r23, Z+1	; 0x01
    215c:	82 81       	ldd	r24, Z+2	; 0x02
    215e:	93 81       	ldd	r25, Z+3	; 0x03
    2160:	20 e0       	ldi	r18, 0x00	; 0
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	40 e8       	ldi	r20, 0x80	; 128
    2166:	5f e3       	ldi	r21, 0x3F	; 63
    2168:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    216c:	88 23       	and	r24, r24
    216e:	44 f4       	brge	.+16     	; 0x2180 <main+0x14f2>
		__ticks = 1;
    2170:	fe 01       	movw	r30, r28
    2172:	e2 55       	subi	r30, 0x52	; 82
    2174:	ff 4f       	sbci	r31, 0xFF	; 255
    2176:	81 e0       	ldi	r24, 0x01	; 1
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	91 83       	std	Z+1, r25	; 0x01
    217c:	80 83       	st	Z, r24
    217e:	64 c0       	rjmp	.+200    	; 0x2248 <main+0x15ba>
	else if (__tmp > 65535)
    2180:	fe 01       	movw	r30, r28
    2182:	e0 55       	subi	r30, 0x50	; 80
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	82 81       	ldd	r24, Z+2	; 0x02
    218c:	93 81       	ldd	r25, Z+3	; 0x03
    218e:	20 e0       	ldi	r18, 0x00	; 0
    2190:	3f ef       	ldi	r19, 0xFF	; 255
    2192:	4f e7       	ldi	r20, 0x7F	; 127
    2194:	57 e4       	ldi	r21, 0x47	; 71
    2196:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    219a:	18 16       	cp	r1, r24
    219c:	0c f0       	brlt	.+2      	; 0x21a0 <main+0x1512>
    219e:	43 c0       	rjmp	.+134    	; 0x2226 <main+0x1598>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21a0:	fe 01       	movw	r30, r28
    21a2:	ec 54       	subi	r30, 0x4C	; 76
    21a4:	ff 4f       	sbci	r31, 0xFF	; 255
    21a6:	60 81       	ld	r22, Z
    21a8:	71 81       	ldd	r23, Z+1	; 0x01
    21aa:	82 81       	ldd	r24, Z+2	; 0x02
    21ac:	93 81       	ldd	r25, Z+3	; 0x03
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	40 e2       	ldi	r20, 0x20	; 32
    21b4:	51 e4       	ldi	r21, 0x41	; 65
    21b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21ba:	dc 01       	movw	r26, r24
    21bc:	cb 01       	movw	r24, r22
    21be:	8e 01       	movw	r16, r28
    21c0:	02 55       	subi	r16, 0x52	; 82
    21c2:	1f 4f       	sbci	r17, 0xFF	; 255
    21c4:	bc 01       	movw	r22, r24
    21c6:	cd 01       	movw	r24, r26
    21c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21cc:	dc 01       	movw	r26, r24
    21ce:	cb 01       	movw	r24, r22
    21d0:	f8 01       	movw	r30, r16
    21d2:	91 83       	std	Z+1, r25	; 0x01
    21d4:	80 83       	st	Z, r24
    21d6:	1f c0       	rjmp	.+62     	; 0x2216 <main+0x1588>
    21d8:	fe 01       	movw	r30, r28
    21da:	e4 55       	subi	r30, 0x54	; 84
    21dc:	ff 4f       	sbci	r31, 0xFF	; 255
    21de:	88 ec       	ldi	r24, 0xC8	; 200
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	91 83       	std	Z+1, r25	; 0x01
    21e4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    21e6:	fe 01       	movw	r30, r28
    21e8:	e4 55       	subi	r30, 0x54	; 84
    21ea:	ff 4f       	sbci	r31, 0xFF	; 255
    21ec:	80 81       	ld	r24, Z
    21ee:	91 81       	ldd	r25, Z+1	; 0x01
    21f0:	01 97       	sbiw	r24, 0x01	; 1
    21f2:	f1 f7       	brne	.-4      	; 0x21f0 <main+0x1562>
    21f4:	fe 01       	movw	r30, r28
    21f6:	e4 55       	subi	r30, 0x54	; 84
    21f8:	ff 4f       	sbci	r31, 0xFF	; 255
    21fa:	91 83       	std	Z+1, r25	; 0x01
    21fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21fe:	de 01       	movw	r26, r28
    2200:	a2 55       	subi	r26, 0x52	; 82
    2202:	bf 4f       	sbci	r27, 0xFF	; 255
    2204:	fe 01       	movw	r30, r28
    2206:	e2 55       	subi	r30, 0x52	; 82
    2208:	ff 4f       	sbci	r31, 0xFF	; 255
    220a:	80 81       	ld	r24, Z
    220c:	91 81       	ldd	r25, Z+1	; 0x01
    220e:	01 97       	sbiw	r24, 0x01	; 1
    2210:	11 96       	adiw	r26, 0x01	; 1
    2212:	9c 93       	st	X, r25
    2214:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2216:	fe 01       	movw	r30, r28
    2218:	e2 55       	subi	r30, 0x52	; 82
    221a:	ff 4f       	sbci	r31, 0xFF	; 255
    221c:	80 81       	ld	r24, Z
    221e:	91 81       	ldd	r25, Z+1	; 0x01
    2220:	00 97       	sbiw	r24, 0x00	; 0
    2222:	d1 f6       	brne	.-76     	; 0x21d8 <main+0x154a>
    2224:	4b c0       	rjmp	.+150    	; 0x22bc <main+0x162e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2226:	8e 01       	movw	r16, r28
    2228:	02 55       	subi	r16, 0x52	; 82
    222a:	1f 4f       	sbci	r17, 0xFF	; 255
    222c:	fe 01       	movw	r30, r28
    222e:	e0 55       	subi	r30, 0x50	; 80
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	60 81       	ld	r22, Z
    2234:	71 81       	ldd	r23, Z+1	; 0x01
    2236:	82 81       	ldd	r24, Z+2	; 0x02
    2238:	93 81       	ldd	r25, Z+3	; 0x03
    223a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    223e:	dc 01       	movw	r26, r24
    2240:	cb 01       	movw	r24, r22
    2242:	f8 01       	movw	r30, r16
    2244:	91 83       	std	Z+1, r25	; 0x01
    2246:	80 83       	st	Z, r24
    2248:	de 01       	movw	r26, r28
    224a:	a6 55       	subi	r26, 0x56	; 86
    224c:	bf 4f       	sbci	r27, 0xFF	; 255
    224e:	fe 01       	movw	r30, r28
    2250:	e2 55       	subi	r30, 0x52	; 82
    2252:	ff 4f       	sbci	r31, 0xFF	; 255
    2254:	80 81       	ld	r24, Z
    2256:	91 81       	ldd	r25, Z+1	; 0x01
    2258:	11 96       	adiw	r26, 0x01	; 1
    225a:	9c 93       	st	X, r25
    225c:	8e 93       	st	-X, r24
    225e:	fe 01       	movw	r30, r28
    2260:	e6 55       	subi	r30, 0x56	; 86
    2262:	ff 4f       	sbci	r31, 0xFF	; 255
    2264:	80 81       	ld	r24, Z
    2266:	91 81       	ldd	r25, Z+1	; 0x01
    2268:	01 97       	sbiw	r24, 0x01	; 1
    226a:	f1 f7       	brne	.-4      	; 0x2268 <main+0x15da>
    226c:	fe 01       	movw	r30, r28
    226e:	e6 55       	subi	r30, 0x56	; 86
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	91 83       	std	Z+1, r25	; 0x01
    2274:	80 83       	st	Z, r24
    2276:	22 c0       	rjmp	.+68     	; 0x22bc <main+0x162e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2278:	8e 01       	movw	r16, r28
    227a:	08 54       	subi	r16, 0x48	; 72
    227c:	1f 4f       	sbci	r17, 0xFF	; 255
    227e:	fe 01       	movw	r30, r28
    2280:	e7 54       	subi	r30, 0x47	; 71
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	60 81       	ld	r22, Z
    2286:	71 81       	ldd	r23, Z+1	; 0x01
    2288:	82 81       	ldd	r24, Z+2	; 0x02
    228a:	93 81       	ldd	r25, Z+3	; 0x03
    228c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2290:	dc 01       	movw	r26, r24
    2292:	cb 01       	movw	r24, r22
    2294:	f8 01       	movw	r30, r16
    2296:	80 83       	st	Z, r24
    2298:	de 01       	movw	r26, r28
    229a:	a7 55       	subi	r26, 0x57	; 87
    229c:	bf 4f       	sbci	r27, 0xFF	; 255
    229e:	fe 01       	movw	r30, r28
    22a0:	e8 54       	subi	r30, 0x48	; 72
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	80 81       	ld	r24, Z
    22a6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22a8:	fe 01       	movw	r30, r28
    22aa:	e7 55       	subi	r30, 0x57	; 87
    22ac:	ff 4f       	sbci	r31, 0xFF	; 255
    22ae:	80 81       	ld	r24, Z
    22b0:	8a 95       	dec	r24
    22b2:	f1 f7       	brne	.-4      	; 0x22b0 <main+0x1622>
    22b4:	fe 01       	movw	r30, r28
    22b6:	e7 55       	subi	r30, 0x57	; 87
    22b8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ba:	80 83       	st	Z, r24
					_delay_us(0.65);
					CLR_BIT(PORTC,7);
    22bc:	a5 e3       	ldi	r26, 0x35	; 53
    22be:	b0 e0       	ldi	r27, 0x00	; 0
    22c0:	e5 e3       	ldi	r30, 0x35	; 53
    22c2:	f0 e0       	ldi	r31, 0x00	; 0
    22c4:	80 81       	ld	r24, Z
    22c6:	8f 77       	andi	r24, 0x7F	; 127
    22c8:	8c 93       	st	X, r24
    22ca:	fe 01       	movw	r30, r28
    22cc:	eb 55       	subi	r30, 0x5B	; 91
    22ce:	ff 4f       	sbci	r31, 0xFF	; 255
    22d0:	86 e6       	ldi	r24, 0x66	; 102
    22d2:	96 e6       	ldi	r25, 0x66	; 102
    22d4:	a6 e2       	ldi	r26, 0x26	; 38
    22d6:	bf e3       	ldi	r27, 0x3F	; 63
    22d8:	80 83       	st	Z, r24
    22da:	91 83       	std	Z+1, r25	; 0x01
    22dc:	a2 83       	std	Z+2, r26	; 0x02
    22de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    22e0:	8e 01       	movw	r16, r28
    22e2:	0f 55       	subi	r16, 0x5F	; 95
    22e4:	1f 4f       	sbci	r17, 0xFF	; 255
    22e6:	fe 01       	movw	r30, r28
    22e8:	eb 55       	subi	r30, 0x5B	; 91
    22ea:	ff 4f       	sbci	r31, 0xFF	; 255
    22ec:	60 81       	ld	r22, Z
    22ee:	71 81       	ldd	r23, Z+1	; 0x01
    22f0:	82 81       	ldd	r24, Z+2	; 0x02
    22f2:	93 81       	ldd	r25, Z+3	; 0x03
    22f4:	2b ea       	ldi	r18, 0xAB	; 171
    22f6:	3a ea       	ldi	r19, 0xAA	; 170
    22f8:	4a e2       	ldi	r20, 0x2A	; 42
    22fa:	50 e4       	ldi	r21, 0x40	; 64
    22fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2300:	dc 01       	movw	r26, r24
    2302:	cb 01       	movw	r24, r22
    2304:	f8 01       	movw	r30, r16
    2306:	80 83       	st	Z, r24
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	a2 83       	std	Z+2, r26	; 0x02
    230c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    230e:	fe 01       	movw	r30, r28
    2310:	ef 55       	subi	r30, 0x5F	; 95
    2312:	ff 4f       	sbci	r31, 0xFF	; 255
    2314:	60 81       	ld	r22, Z
    2316:	71 81       	ldd	r23, Z+1	; 0x01
    2318:	82 81       	ldd	r24, Z+2	; 0x02
    231a:	93 81       	ldd	r25, Z+3	; 0x03
    231c:	20 e0       	ldi	r18, 0x00	; 0
    231e:	30 e0       	ldi	r19, 0x00	; 0
    2320:	40 e8       	ldi	r20, 0x80	; 128
    2322:	5f e3       	ldi	r21, 0x3F	; 63
    2324:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2328:	88 23       	and	r24, r24
    232a:	34 f4       	brge	.+12     	; 0x2338 <main+0x16aa>
		__ticks = 1;
    232c:	fe 01       	movw	r30, r28
    232e:	e0 56       	subi	r30, 0x60	; 96
    2330:	ff 4f       	sbci	r31, 0xFF	; 255
    2332:	81 e0       	ldi	r24, 0x01	; 1
    2334:	80 83       	st	Z, r24
    2336:	e0 c0       	rjmp	.+448    	; 0x24f8 <main+0x186a>
	else if (__tmp > 255)
    2338:	fe 01       	movw	r30, r28
    233a:	ef 55       	subi	r30, 0x5F	; 95
    233c:	ff 4f       	sbci	r31, 0xFF	; 255
    233e:	60 81       	ld	r22, Z
    2340:	71 81       	ldd	r23, Z+1	; 0x01
    2342:	82 81       	ldd	r24, Z+2	; 0x02
    2344:	93 81       	ldd	r25, Z+3	; 0x03
    2346:	20 e0       	ldi	r18, 0x00	; 0
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	4f e7       	ldi	r20, 0x7F	; 127
    234c:	53 e4       	ldi	r21, 0x43	; 67
    234e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2352:	18 16       	cp	r1, r24
    2354:	0c f0       	brlt	.+2      	; 0x2358 <main+0x16ca>
    2356:	c0 c0       	rjmp	.+384    	; 0x24d8 <main+0x184a>
	{
		_delay_ms(__us / 1000.0);
    2358:	fe 01       	movw	r30, r28
    235a:	eb 55       	subi	r30, 0x5B	; 91
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	60 81       	ld	r22, Z
    2360:	71 81       	ldd	r23, Z+1	; 0x01
    2362:	82 81       	ldd	r24, Z+2	; 0x02
    2364:	93 81       	ldd	r25, Z+3	; 0x03
    2366:	20 e0       	ldi	r18, 0x00	; 0
    2368:	30 e0       	ldi	r19, 0x00	; 0
    236a:	4a e7       	ldi	r20, 0x7A	; 122
    236c:	54 e4       	ldi	r21, 0x44	; 68
    236e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2372:	dc 01       	movw	r26, r24
    2374:	cb 01       	movw	r24, r22
    2376:	fe 01       	movw	r30, r28
    2378:	e4 56       	subi	r30, 0x64	; 100
    237a:	ff 4f       	sbci	r31, 0xFF	; 255
    237c:	80 83       	st	Z, r24
    237e:	91 83       	std	Z+1, r25	; 0x01
    2380:	a2 83       	std	Z+2, r26	; 0x02
    2382:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2384:	8e 01       	movw	r16, r28
    2386:	08 56       	subi	r16, 0x68	; 104
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	fe 01       	movw	r30, r28
    238c:	e4 56       	subi	r30, 0x64	; 100
    238e:	ff 4f       	sbci	r31, 0xFF	; 255
    2390:	60 81       	ld	r22, Z
    2392:	71 81       	ldd	r23, Z+1	; 0x01
    2394:	82 81       	ldd	r24, Z+2	; 0x02
    2396:	93 81       	ldd	r25, Z+3	; 0x03
    2398:	20 e0       	ldi	r18, 0x00	; 0
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	4a ef       	ldi	r20, 0xFA	; 250
    239e:	54 e4       	ldi	r21, 0x44	; 68
    23a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a4:	dc 01       	movw	r26, r24
    23a6:	cb 01       	movw	r24, r22
    23a8:	f8 01       	movw	r30, r16
    23aa:	80 83       	st	Z, r24
    23ac:	91 83       	std	Z+1, r25	; 0x01
    23ae:	a2 83       	std	Z+2, r26	; 0x02
    23b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23b2:	fe 01       	movw	r30, r28
    23b4:	e8 56       	subi	r30, 0x68	; 104
    23b6:	ff 4f       	sbci	r31, 0xFF	; 255
    23b8:	60 81       	ld	r22, Z
    23ba:	71 81       	ldd	r23, Z+1	; 0x01
    23bc:	82 81       	ldd	r24, Z+2	; 0x02
    23be:	93 81       	ldd	r25, Z+3	; 0x03
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	40 e8       	ldi	r20, 0x80	; 128
    23c6:	5f e3       	ldi	r21, 0x3F	; 63
    23c8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    23cc:	88 23       	and	r24, r24
    23ce:	44 f4       	brge	.+16     	; 0x23e0 <main+0x1752>
		__ticks = 1;
    23d0:	fe 01       	movw	r30, r28
    23d2:	ea 56       	subi	r30, 0x6A	; 106
    23d4:	ff 4f       	sbci	r31, 0xFF	; 255
    23d6:	81 e0       	ldi	r24, 0x01	; 1
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	91 83       	std	Z+1, r25	; 0x01
    23dc:	80 83       	st	Z, r24
    23de:	64 c0       	rjmp	.+200    	; 0x24a8 <main+0x181a>
	else if (__tmp > 65535)
    23e0:	fe 01       	movw	r30, r28
    23e2:	e8 56       	subi	r30, 0x68	; 104
    23e4:	ff 4f       	sbci	r31, 0xFF	; 255
    23e6:	60 81       	ld	r22, Z
    23e8:	71 81       	ldd	r23, Z+1	; 0x01
    23ea:	82 81       	ldd	r24, Z+2	; 0x02
    23ec:	93 81       	ldd	r25, Z+3	; 0x03
    23ee:	20 e0       	ldi	r18, 0x00	; 0
    23f0:	3f ef       	ldi	r19, 0xFF	; 255
    23f2:	4f e7       	ldi	r20, 0x7F	; 127
    23f4:	57 e4       	ldi	r21, 0x47	; 71
    23f6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    23fa:	18 16       	cp	r1, r24
    23fc:	0c f0       	brlt	.+2      	; 0x2400 <main+0x1772>
    23fe:	43 c0       	rjmp	.+134    	; 0x2486 <main+0x17f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2400:	fe 01       	movw	r30, r28
    2402:	e4 56       	subi	r30, 0x64	; 100
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	60 81       	ld	r22, Z
    2408:	71 81       	ldd	r23, Z+1	; 0x01
    240a:	82 81       	ldd	r24, Z+2	; 0x02
    240c:	93 81       	ldd	r25, Z+3	; 0x03
    240e:	20 e0       	ldi	r18, 0x00	; 0
    2410:	30 e0       	ldi	r19, 0x00	; 0
    2412:	40 e2       	ldi	r20, 0x20	; 32
    2414:	51 e4       	ldi	r21, 0x41	; 65
    2416:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    241a:	dc 01       	movw	r26, r24
    241c:	cb 01       	movw	r24, r22
    241e:	8e 01       	movw	r16, r28
    2420:	0a 56       	subi	r16, 0x6A	; 106
    2422:	1f 4f       	sbci	r17, 0xFF	; 255
    2424:	bc 01       	movw	r22, r24
    2426:	cd 01       	movw	r24, r26
    2428:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    242c:	dc 01       	movw	r26, r24
    242e:	cb 01       	movw	r24, r22
    2430:	f8 01       	movw	r30, r16
    2432:	91 83       	std	Z+1, r25	; 0x01
    2434:	80 83       	st	Z, r24
    2436:	1f c0       	rjmp	.+62     	; 0x2476 <main+0x17e8>
    2438:	fe 01       	movw	r30, r28
    243a:	ec 56       	subi	r30, 0x6C	; 108
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	88 ec       	ldi	r24, 0xC8	; 200
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	91 83       	std	Z+1, r25	; 0x01
    2444:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2446:	fe 01       	movw	r30, r28
    2448:	ec 56       	subi	r30, 0x6C	; 108
    244a:	ff 4f       	sbci	r31, 0xFF	; 255
    244c:	80 81       	ld	r24, Z
    244e:	91 81       	ldd	r25, Z+1	; 0x01
    2450:	01 97       	sbiw	r24, 0x01	; 1
    2452:	f1 f7       	brne	.-4      	; 0x2450 <main+0x17c2>
    2454:	fe 01       	movw	r30, r28
    2456:	ec 56       	subi	r30, 0x6C	; 108
    2458:	ff 4f       	sbci	r31, 0xFF	; 255
    245a:	91 83       	std	Z+1, r25	; 0x01
    245c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    245e:	de 01       	movw	r26, r28
    2460:	aa 56       	subi	r26, 0x6A	; 106
    2462:	bf 4f       	sbci	r27, 0xFF	; 255
    2464:	fe 01       	movw	r30, r28
    2466:	ea 56       	subi	r30, 0x6A	; 106
    2468:	ff 4f       	sbci	r31, 0xFF	; 255
    246a:	80 81       	ld	r24, Z
    246c:	91 81       	ldd	r25, Z+1	; 0x01
    246e:	01 97       	sbiw	r24, 0x01	; 1
    2470:	11 96       	adiw	r26, 0x01	; 1
    2472:	9c 93       	st	X, r25
    2474:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2476:	fe 01       	movw	r30, r28
    2478:	ea 56       	subi	r30, 0x6A	; 106
    247a:	ff 4f       	sbci	r31, 0xFF	; 255
    247c:	80 81       	ld	r24, Z
    247e:	91 81       	ldd	r25, Z+1	; 0x01
    2480:	00 97       	sbiw	r24, 0x00	; 0
    2482:	d1 f6       	brne	.-76     	; 0x2438 <main+0x17aa>
    2484:	6d c6       	rjmp	.+3290   	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2486:	8e 01       	movw	r16, r28
    2488:	0a 56       	subi	r16, 0x6A	; 106
    248a:	1f 4f       	sbci	r17, 0xFF	; 255
    248c:	fe 01       	movw	r30, r28
    248e:	e8 56       	subi	r30, 0x68	; 104
    2490:	ff 4f       	sbci	r31, 0xFF	; 255
    2492:	60 81       	ld	r22, Z
    2494:	71 81       	ldd	r23, Z+1	; 0x01
    2496:	82 81       	ldd	r24, Z+2	; 0x02
    2498:	93 81       	ldd	r25, Z+3	; 0x03
    249a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    249e:	dc 01       	movw	r26, r24
    24a0:	cb 01       	movw	r24, r22
    24a2:	f8 01       	movw	r30, r16
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	80 83       	st	Z, r24
    24a8:	de 01       	movw	r26, r28
    24aa:	ae 56       	subi	r26, 0x6E	; 110
    24ac:	bf 4f       	sbci	r27, 0xFF	; 255
    24ae:	fe 01       	movw	r30, r28
    24b0:	ea 56       	subi	r30, 0x6A	; 106
    24b2:	ff 4f       	sbci	r31, 0xFF	; 255
    24b4:	80 81       	ld	r24, Z
    24b6:	91 81       	ldd	r25, Z+1	; 0x01
    24b8:	11 96       	adiw	r26, 0x01	; 1
    24ba:	9c 93       	st	X, r25
    24bc:	8e 93       	st	-X, r24
    24be:	fe 01       	movw	r30, r28
    24c0:	ee 56       	subi	r30, 0x6E	; 110
    24c2:	ff 4f       	sbci	r31, 0xFF	; 255
    24c4:	80 81       	ld	r24, Z
    24c6:	91 81       	ldd	r25, Z+1	; 0x01
    24c8:	01 97       	sbiw	r24, 0x01	; 1
    24ca:	f1 f7       	brne	.-4      	; 0x24c8 <main+0x183a>
    24cc:	fe 01       	movw	r30, r28
    24ce:	ee 56       	subi	r30, 0x6E	; 110
    24d0:	ff 4f       	sbci	r31, 0xFF	; 255
    24d2:	91 83       	std	Z+1, r25	; 0x01
    24d4:	80 83       	st	Z, r24
    24d6:	44 c6       	rjmp	.+3208   	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    24d8:	8e 01       	movw	r16, r28
    24da:	00 56       	subi	r16, 0x60	; 96
    24dc:	1f 4f       	sbci	r17, 0xFF	; 255
    24de:	fe 01       	movw	r30, r28
    24e0:	ef 55       	subi	r30, 0x5F	; 95
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	f8 01       	movw	r30, r16
    24f6:	80 83       	st	Z, r24
    24f8:	de 01       	movw	r26, r28
    24fa:	af 56       	subi	r26, 0x6F	; 111
    24fc:	bf 4f       	sbci	r27, 0xFF	; 255
    24fe:	fe 01       	movw	r30, r28
    2500:	e0 56       	subi	r30, 0x60	; 96
    2502:	ff 4f       	sbci	r31, 0xFF	; 255
    2504:	80 81       	ld	r24, Z
    2506:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2508:	fe 01       	movw	r30, r28
    250a:	ef 56       	subi	r30, 0x6F	; 111
    250c:	ff 4f       	sbci	r31, 0xFF	; 255
    250e:	80 81       	ld	r24, Z
    2510:	8a 95       	dec	r24
    2512:	f1 f7       	brne	.-4      	; 0x2510 <main+0x1882>
    2514:	fe 01       	movw	r30, r28
    2516:	ef 56       	subi	r30, 0x6F	; 111
    2518:	ff 4f       	sbci	r31, 0xFF	; 255
    251a:	80 83       	st	Z, r24
    251c:	21 c6       	rjmp	.+3138   	; 0x3160 <main+0x24d2>
					_delay_us(0.65);
		}
		else if( !(GET_BIT(PINA,5))){ //LA 880 HZ = 1millisec
    251e:	e9 e3       	ldi	r30, 0x39	; 57
    2520:	f0 e0       	ldi	r31, 0x00	; 0
    2522:	80 81       	ld	r24, Z
    2524:	82 95       	swap	r24
    2526:	86 95       	lsr	r24
    2528:	87 70       	andi	r24, 0x07	; 7
    252a:	88 2f       	mov	r24, r24
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	81 70       	andi	r24, 0x01	; 1
    2530:	90 70       	andi	r25, 0x00	; 0
    2532:	00 97       	sbiw	r24, 0x00	; 0
    2534:	09 f0       	breq	.+2      	; 0x2538 <main+0x18aa>
    2536:	61 c2       	rjmp	.+1218   	; 0x29fa <main+0x1d6c>
					SET_BIT(PORTC,7);
    2538:	a5 e3       	ldi	r26, 0x35	; 53
    253a:	b0 e0       	ldi	r27, 0x00	; 0
    253c:	e5 e3       	ldi	r30, 0x35	; 53
    253e:	f0 e0       	ldi	r31, 0x00	; 0
    2540:	80 81       	ld	r24, Z
    2542:	80 68       	ori	r24, 0x80	; 128
    2544:	8c 93       	st	X, r24
    2546:	fe 01       	movw	r30, r28
    2548:	e3 57       	subi	r30, 0x73	; 115
    254a:	ff 4f       	sbci	r31, 0xFF	; 255
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	aa ef       	ldi	r26, 0xFA	; 250
    2552:	b3 e4       	ldi	r27, 0x43	; 67
    2554:	80 83       	st	Z, r24
    2556:	91 83       	std	Z+1, r25	; 0x01
    2558:	a2 83       	std	Z+2, r26	; 0x02
    255a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    255c:	8e 01       	movw	r16, r28
    255e:	07 57       	subi	r16, 0x77	; 119
    2560:	1f 4f       	sbci	r17, 0xFF	; 255
    2562:	fe 01       	movw	r30, r28
    2564:	e3 57       	subi	r30, 0x73	; 115
    2566:	ff 4f       	sbci	r31, 0xFF	; 255
    2568:	60 81       	ld	r22, Z
    256a:	71 81       	ldd	r23, Z+1	; 0x01
    256c:	82 81       	ldd	r24, Z+2	; 0x02
    256e:	93 81       	ldd	r25, Z+3	; 0x03
    2570:	2b ea       	ldi	r18, 0xAB	; 171
    2572:	3a ea       	ldi	r19, 0xAA	; 170
    2574:	4a e2       	ldi	r20, 0x2A	; 42
    2576:	50 e4       	ldi	r21, 0x40	; 64
    2578:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    257c:	dc 01       	movw	r26, r24
    257e:	cb 01       	movw	r24, r22
    2580:	f8 01       	movw	r30, r16
    2582:	80 83       	st	Z, r24
    2584:	91 83       	std	Z+1, r25	; 0x01
    2586:	a2 83       	std	Z+2, r26	; 0x02
    2588:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    258a:	fe 01       	movw	r30, r28
    258c:	e7 57       	subi	r30, 0x77	; 119
    258e:	ff 4f       	sbci	r31, 0xFF	; 255
    2590:	60 81       	ld	r22, Z
    2592:	71 81       	ldd	r23, Z+1	; 0x01
    2594:	82 81       	ldd	r24, Z+2	; 0x02
    2596:	93 81       	ldd	r25, Z+3	; 0x03
    2598:	20 e0       	ldi	r18, 0x00	; 0
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	40 e8       	ldi	r20, 0x80	; 128
    259e:	5f e3       	ldi	r21, 0x3F	; 63
    25a0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    25a4:	88 23       	and	r24, r24
    25a6:	34 f4       	brge	.+12     	; 0x25b4 <main+0x1926>
		__ticks = 1;
    25a8:	fe 01       	movw	r30, r28
    25aa:	e8 57       	subi	r30, 0x78	; 120
    25ac:	ff 4f       	sbci	r31, 0xFF	; 255
    25ae:	81 e0       	ldi	r24, 0x01	; 1
    25b0:	80 83       	st	Z, r24
    25b2:	e0 c0       	rjmp	.+448    	; 0x2774 <main+0x1ae6>
	else if (__tmp > 255)
    25b4:	fe 01       	movw	r30, r28
    25b6:	e7 57       	subi	r30, 0x77	; 119
    25b8:	ff 4f       	sbci	r31, 0xFF	; 255
    25ba:	60 81       	ld	r22, Z
    25bc:	71 81       	ldd	r23, Z+1	; 0x01
    25be:	82 81       	ldd	r24, Z+2	; 0x02
    25c0:	93 81       	ldd	r25, Z+3	; 0x03
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	30 e0       	ldi	r19, 0x00	; 0
    25c6:	4f e7       	ldi	r20, 0x7F	; 127
    25c8:	53 e4       	ldi	r21, 0x43	; 67
    25ca:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    25ce:	18 16       	cp	r1, r24
    25d0:	0c f0       	brlt	.+2      	; 0x25d4 <main+0x1946>
    25d2:	c0 c0       	rjmp	.+384    	; 0x2754 <main+0x1ac6>
	{
		_delay_ms(__us / 1000.0);
    25d4:	fe 01       	movw	r30, r28
    25d6:	e3 57       	subi	r30, 0x73	; 115
    25d8:	ff 4f       	sbci	r31, 0xFF	; 255
    25da:	60 81       	ld	r22, Z
    25dc:	71 81       	ldd	r23, Z+1	; 0x01
    25de:	82 81       	ldd	r24, Z+2	; 0x02
    25e0:	93 81       	ldd	r25, Z+3	; 0x03
    25e2:	20 e0       	ldi	r18, 0x00	; 0
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	4a e7       	ldi	r20, 0x7A	; 122
    25e8:	54 e4       	ldi	r21, 0x44	; 68
    25ea:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	fe 01       	movw	r30, r28
    25f4:	ec 57       	subi	r30, 0x7C	; 124
    25f6:	ff 4f       	sbci	r31, 0xFF	; 255
    25f8:	80 83       	st	Z, r24
    25fa:	91 83       	std	Z+1, r25	; 0x01
    25fc:	a2 83       	std	Z+2, r26	; 0x02
    25fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2600:	8e 01       	movw	r16, r28
    2602:	00 58       	subi	r16, 0x80	; 128
    2604:	1f 4f       	sbci	r17, 0xFF	; 255
    2606:	fe 01       	movw	r30, r28
    2608:	ec 57       	subi	r30, 0x7C	; 124
    260a:	ff 4f       	sbci	r31, 0xFF	; 255
    260c:	60 81       	ld	r22, Z
    260e:	71 81       	ldd	r23, Z+1	; 0x01
    2610:	82 81       	ldd	r24, Z+2	; 0x02
    2612:	93 81       	ldd	r25, Z+3	; 0x03
    2614:	20 e0       	ldi	r18, 0x00	; 0
    2616:	30 e0       	ldi	r19, 0x00	; 0
    2618:	4a ef       	ldi	r20, 0xFA	; 250
    261a:	54 e4       	ldi	r21, 0x44	; 68
    261c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2620:	dc 01       	movw	r26, r24
    2622:	cb 01       	movw	r24, r22
    2624:	f8 01       	movw	r30, r16
    2626:	80 83       	st	Z, r24
    2628:	91 83       	std	Z+1, r25	; 0x01
    262a:	a2 83       	std	Z+2, r26	; 0x02
    262c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    262e:	fe 01       	movw	r30, r28
    2630:	e0 58       	subi	r30, 0x80	; 128
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	60 81       	ld	r22, Z
    2636:	71 81       	ldd	r23, Z+1	; 0x01
    2638:	82 81       	ldd	r24, Z+2	; 0x02
    263a:	93 81       	ldd	r25, Z+3	; 0x03
    263c:	20 e0       	ldi	r18, 0x00	; 0
    263e:	30 e0       	ldi	r19, 0x00	; 0
    2640:	40 e8       	ldi	r20, 0x80	; 128
    2642:	5f e3       	ldi	r21, 0x3F	; 63
    2644:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2648:	88 23       	and	r24, r24
    264a:	44 f4       	brge	.+16     	; 0x265c <main+0x19ce>
		__ticks = 1;
    264c:	fe 01       	movw	r30, r28
    264e:	e2 58       	subi	r30, 0x82	; 130
    2650:	ff 4f       	sbci	r31, 0xFF	; 255
    2652:	81 e0       	ldi	r24, 0x01	; 1
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	91 83       	std	Z+1, r25	; 0x01
    2658:	80 83       	st	Z, r24
    265a:	64 c0       	rjmp	.+200    	; 0x2724 <main+0x1a96>
	else if (__tmp > 65535)
    265c:	fe 01       	movw	r30, r28
    265e:	e0 58       	subi	r30, 0x80	; 128
    2660:	ff 4f       	sbci	r31, 0xFF	; 255
    2662:	60 81       	ld	r22, Z
    2664:	71 81       	ldd	r23, Z+1	; 0x01
    2666:	82 81       	ldd	r24, Z+2	; 0x02
    2668:	93 81       	ldd	r25, Z+3	; 0x03
    266a:	20 e0       	ldi	r18, 0x00	; 0
    266c:	3f ef       	ldi	r19, 0xFF	; 255
    266e:	4f e7       	ldi	r20, 0x7F	; 127
    2670:	57 e4       	ldi	r21, 0x47	; 71
    2672:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2676:	18 16       	cp	r1, r24
    2678:	0c f0       	brlt	.+2      	; 0x267c <main+0x19ee>
    267a:	43 c0       	rjmp	.+134    	; 0x2702 <main+0x1a74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    267c:	fe 01       	movw	r30, r28
    267e:	ec 57       	subi	r30, 0x7C	; 124
    2680:	ff 4f       	sbci	r31, 0xFF	; 255
    2682:	60 81       	ld	r22, Z
    2684:	71 81       	ldd	r23, Z+1	; 0x01
    2686:	82 81       	ldd	r24, Z+2	; 0x02
    2688:	93 81       	ldd	r25, Z+3	; 0x03
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	40 e2       	ldi	r20, 0x20	; 32
    2690:	51 e4       	ldi	r21, 0x41	; 65
    2692:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	8e 01       	movw	r16, r28
    269c:	02 58       	subi	r16, 0x82	; 130
    269e:	1f 4f       	sbci	r17, 0xFF	; 255
    26a0:	bc 01       	movw	r22, r24
    26a2:	cd 01       	movw	r24, r26
    26a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26a8:	dc 01       	movw	r26, r24
    26aa:	cb 01       	movw	r24, r22
    26ac:	f8 01       	movw	r30, r16
    26ae:	91 83       	std	Z+1, r25	; 0x01
    26b0:	80 83       	st	Z, r24
    26b2:	1f c0       	rjmp	.+62     	; 0x26f2 <main+0x1a64>
    26b4:	fe 01       	movw	r30, r28
    26b6:	e4 58       	subi	r30, 0x84	; 132
    26b8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ba:	88 ec       	ldi	r24, 0xC8	; 200
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26c2:	fe 01       	movw	r30, r28
    26c4:	e4 58       	subi	r30, 0x84	; 132
    26c6:	ff 4f       	sbci	r31, 0xFF	; 255
    26c8:	80 81       	ld	r24, Z
    26ca:	91 81       	ldd	r25, Z+1	; 0x01
    26cc:	01 97       	sbiw	r24, 0x01	; 1
    26ce:	f1 f7       	brne	.-4      	; 0x26cc <main+0x1a3e>
    26d0:	fe 01       	movw	r30, r28
    26d2:	e4 58       	subi	r30, 0x84	; 132
    26d4:	ff 4f       	sbci	r31, 0xFF	; 255
    26d6:	91 83       	std	Z+1, r25	; 0x01
    26d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26da:	de 01       	movw	r26, r28
    26dc:	a2 58       	subi	r26, 0x82	; 130
    26de:	bf 4f       	sbci	r27, 0xFF	; 255
    26e0:	fe 01       	movw	r30, r28
    26e2:	e2 58       	subi	r30, 0x82	; 130
    26e4:	ff 4f       	sbci	r31, 0xFF	; 255
    26e6:	80 81       	ld	r24, Z
    26e8:	91 81       	ldd	r25, Z+1	; 0x01
    26ea:	01 97       	sbiw	r24, 0x01	; 1
    26ec:	11 96       	adiw	r26, 0x01	; 1
    26ee:	9c 93       	st	X, r25
    26f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26f2:	fe 01       	movw	r30, r28
    26f4:	e2 58       	subi	r30, 0x82	; 130
    26f6:	ff 4f       	sbci	r31, 0xFF	; 255
    26f8:	80 81       	ld	r24, Z
    26fa:	91 81       	ldd	r25, Z+1	; 0x01
    26fc:	00 97       	sbiw	r24, 0x00	; 0
    26fe:	d1 f6       	brne	.-76     	; 0x26b4 <main+0x1a26>
    2700:	4b c0       	rjmp	.+150    	; 0x2798 <main+0x1b0a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2702:	8e 01       	movw	r16, r28
    2704:	02 58       	subi	r16, 0x82	; 130
    2706:	1f 4f       	sbci	r17, 0xFF	; 255
    2708:	fe 01       	movw	r30, r28
    270a:	e0 58       	subi	r30, 0x80	; 128
    270c:	ff 4f       	sbci	r31, 0xFF	; 255
    270e:	60 81       	ld	r22, Z
    2710:	71 81       	ldd	r23, Z+1	; 0x01
    2712:	82 81       	ldd	r24, Z+2	; 0x02
    2714:	93 81       	ldd	r25, Z+3	; 0x03
    2716:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    271a:	dc 01       	movw	r26, r24
    271c:	cb 01       	movw	r24, r22
    271e:	f8 01       	movw	r30, r16
    2720:	91 83       	std	Z+1, r25	; 0x01
    2722:	80 83       	st	Z, r24
    2724:	de 01       	movw	r26, r28
    2726:	a6 58       	subi	r26, 0x86	; 134
    2728:	bf 4f       	sbci	r27, 0xFF	; 255
    272a:	fe 01       	movw	r30, r28
    272c:	e2 58       	subi	r30, 0x82	; 130
    272e:	ff 4f       	sbci	r31, 0xFF	; 255
    2730:	80 81       	ld	r24, Z
    2732:	91 81       	ldd	r25, Z+1	; 0x01
    2734:	11 96       	adiw	r26, 0x01	; 1
    2736:	9c 93       	st	X, r25
    2738:	8e 93       	st	-X, r24
    273a:	fe 01       	movw	r30, r28
    273c:	e6 58       	subi	r30, 0x86	; 134
    273e:	ff 4f       	sbci	r31, 0xFF	; 255
    2740:	80 81       	ld	r24, Z
    2742:	91 81       	ldd	r25, Z+1	; 0x01
    2744:	01 97       	sbiw	r24, 0x01	; 1
    2746:	f1 f7       	brne	.-4      	; 0x2744 <main+0x1ab6>
    2748:	fe 01       	movw	r30, r28
    274a:	e6 58       	subi	r30, 0x86	; 134
    274c:	ff 4f       	sbci	r31, 0xFF	; 255
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	80 83       	st	Z, r24
    2752:	22 c0       	rjmp	.+68     	; 0x2798 <main+0x1b0a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2754:	8e 01       	movw	r16, r28
    2756:	08 57       	subi	r16, 0x78	; 120
    2758:	1f 4f       	sbci	r17, 0xFF	; 255
    275a:	fe 01       	movw	r30, r28
    275c:	e7 57       	subi	r30, 0x77	; 119
    275e:	ff 4f       	sbci	r31, 0xFF	; 255
    2760:	60 81       	ld	r22, Z
    2762:	71 81       	ldd	r23, Z+1	; 0x01
    2764:	82 81       	ldd	r24, Z+2	; 0x02
    2766:	93 81       	ldd	r25, Z+3	; 0x03
    2768:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    276c:	dc 01       	movw	r26, r24
    276e:	cb 01       	movw	r24, r22
    2770:	f8 01       	movw	r30, r16
    2772:	80 83       	st	Z, r24
    2774:	de 01       	movw	r26, r28
    2776:	a7 58       	subi	r26, 0x87	; 135
    2778:	bf 4f       	sbci	r27, 0xFF	; 255
    277a:	fe 01       	movw	r30, r28
    277c:	e8 57       	subi	r30, 0x78	; 120
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	80 81       	ld	r24, Z
    2782:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2784:	fe 01       	movw	r30, r28
    2786:	e7 58       	subi	r30, 0x87	; 135
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	80 81       	ld	r24, Z
    278c:	8a 95       	dec	r24
    278e:	f1 f7       	brne	.-4      	; 0x278c <main+0x1afe>
    2790:	fe 01       	movw	r30, r28
    2792:	e7 58       	subi	r30, 0x87	; 135
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	80 83       	st	Z, r24
					_delay_us(500);
					CLR_BIT(PORTC,7);
    2798:	a5 e3       	ldi	r26, 0x35	; 53
    279a:	b0 e0       	ldi	r27, 0x00	; 0
    279c:	e5 e3       	ldi	r30, 0x35	; 53
    279e:	f0 e0       	ldi	r31, 0x00	; 0
    27a0:	80 81       	ld	r24, Z
    27a2:	8f 77       	andi	r24, 0x7F	; 127
    27a4:	8c 93       	st	X, r24
    27a6:	fe 01       	movw	r30, r28
    27a8:	eb 58       	subi	r30, 0x8B	; 139
    27aa:	ff 4f       	sbci	r31, 0xFF	; 255
    27ac:	80 e0       	ldi	r24, 0x00	; 0
    27ae:	90 e0       	ldi	r25, 0x00	; 0
    27b0:	aa ef       	ldi	r26, 0xFA	; 250
    27b2:	b3 e4       	ldi	r27, 0x43	; 67
    27b4:	80 83       	st	Z, r24
    27b6:	91 83       	std	Z+1, r25	; 0x01
    27b8:	a2 83       	std	Z+2, r26	; 0x02
    27ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    27bc:	8e 01       	movw	r16, r28
    27be:	0f 58       	subi	r16, 0x8F	; 143
    27c0:	1f 4f       	sbci	r17, 0xFF	; 255
    27c2:	fe 01       	movw	r30, r28
    27c4:	eb 58       	subi	r30, 0x8B	; 139
    27c6:	ff 4f       	sbci	r31, 0xFF	; 255
    27c8:	60 81       	ld	r22, Z
    27ca:	71 81       	ldd	r23, Z+1	; 0x01
    27cc:	82 81       	ldd	r24, Z+2	; 0x02
    27ce:	93 81       	ldd	r25, Z+3	; 0x03
    27d0:	2b ea       	ldi	r18, 0xAB	; 171
    27d2:	3a ea       	ldi	r19, 0xAA	; 170
    27d4:	4a e2       	ldi	r20, 0x2A	; 42
    27d6:	50 e4       	ldi	r21, 0x40	; 64
    27d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27dc:	dc 01       	movw	r26, r24
    27de:	cb 01       	movw	r24, r22
    27e0:	f8 01       	movw	r30, r16
    27e2:	80 83       	st	Z, r24
    27e4:	91 83       	std	Z+1, r25	; 0x01
    27e6:	a2 83       	std	Z+2, r26	; 0x02
    27e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27ea:	fe 01       	movw	r30, r28
    27ec:	ef 58       	subi	r30, 0x8F	; 143
    27ee:	ff 4f       	sbci	r31, 0xFF	; 255
    27f0:	60 81       	ld	r22, Z
    27f2:	71 81       	ldd	r23, Z+1	; 0x01
    27f4:	82 81       	ldd	r24, Z+2	; 0x02
    27f6:	93 81       	ldd	r25, Z+3	; 0x03
    27f8:	20 e0       	ldi	r18, 0x00	; 0
    27fa:	30 e0       	ldi	r19, 0x00	; 0
    27fc:	40 e8       	ldi	r20, 0x80	; 128
    27fe:	5f e3       	ldi	r21, 0x3F	; 63
    2800:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2804:	88 23       	and	r24, r24
    2806:	34 f4       	brge	.+12     	; 0x2814 <main+0x1b86>
		__ticks = 1;
    2808:	fe 01       	movw	r30, r28
    280a:	e0 59       	subi	r30, 0x90	; 144
    280c:	ff 4f       	sbci	r31, 0xFF	; 255
    280e:	81 e0       	ldi	r24, 0x01	; 1
    2810:	80 83       	st	Z, r24
    2812:	e0 c0       	rjmp	.+448    	; 0x29d4 <main+0x1d46>
	else if (__tmp > 255)
    2814:	fe 01       	movw	r30, r28
    2816:	ef 58       	subi	r30, 0x8F	; 143
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	60 81       	ld	r22, Z
    281c:	71 81       	ldd	r23, Z+1	; 0x01
    281e:	82 81       	ldd	r24, Z+2	; 0x02
    2820:	93 81       	ldd	r25, Z+3	; 0x03
    2822:	20 e0       	ldi	r18, 0x00	; 0
    2824:	30 e0       	ldi	r19, 0x00	; 0
    2826:	4f e7       	ldi	r20, 0x7F	; 127
    2828:	53 e4       	ldi	r21, 0x43	; 67
    282a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    282e:	18 16       	cp	r1, r24
    2830:	0c f0       	brlt	.+2      	; 0x2834 <main+0x1ba6>
    2832:	c0 c0       	rjmp	.+384    	; 0x29b4 <main+0x1d26>
	{
		_delay_ms(__us / 1000.0);
    2834:	fe 01       	movw	r30, r28
    2836:	eb 58       	subi	r30, 0x8B	; 139
    2838:	ff 4f       	sbci	r31, 0xFF	; 255
    283a:	60 81       	ld	r22, Z
    283c:	71 81       	ldd	r23, Z+1	; 0x01
    283e:	82 81       	ldd	r24, Z+2	; 0x02
    2840:	93 81       	ldd	r25, Z+3	; 0x03
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	30 e0       	ldi	r19, 0x00	; 0
    2846:	4a e7       	ldi	r20, 0x7A	; 122
    2848:	54 e4       	ldi	r21, 0x44	; 68
    284a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    284e:	dc 01       	movw	r26, r24
    2850:	cb 01       	movw	r24, r22
    2852:	fe 01       	movw	r30, r28
    2854:	e4 59       	subi	r30, 0x94	; 148
    2856:	ff 4f       	sbci	r31, 0xFF	; 255
    2858:	80 83       	st	Z, r24
    285a:	91 83       	std	Z+1, r25	; 0x01
    285c:	a2 83       	std	Z+2, r26	; 0x02
    285e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2860:	8e 01       	movw	r16, r28
    2862:	08 59       	subi	r16, 0x98	; 152
    2864:	1f 4f       	sbci	r17, 0xFF	; 255
    2866:	fe 01       	movw	r30, r28
    2868:	e4 59       	subi	r30, 0x94	; 148
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	4a ef       	ldi	r20, 0xFA	; 250
    287a:	54 e4       	ldi	r21, 0x44	; 68
    287c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2880:	dc 01       	movw	r26, r24
    2882:	cb 01       	movw	r24, r22
    2884:	f8 01       	movw	r30, r16
    2886:	80 83       	st	Z, r24
    2888:	91 83       	std	Z+1, r25	; 0x01
    288a:	a2 83       	std	Z+2, r26	; 0x02
    288c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    288e:	fe 01       	movw	r30, r28
    2890:	e8 59       	subi	r30, 0x98	; 152
    2892:	ff 4f       	sbci	r31, 0xFF	; 255
    2894:	60 81       	ld	r22, Z
    2896:	71 81       	ldd	r23, Z+1	; 0x01
    2898:	82 81       	ldd	r24, Z+2	; 0x02
    289a:	93 81       	ldd	r25, Z+3	; 0x03
    289c:	20 e0       	ldi	r18, 0x00	; 0
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	40 e8       	ldi	r20, 0x80	; 128
    28a2:	5f e3       	ldi	r21, 0x3F	; 63
    28a4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    28a8:	88 23       	and	r24, r24
    28aa:	44 f4       	brge	.+16     	; 0x28bc <main+0x1c2e>
		__ticks = 1;
    28ac:	fe 01       	movw	r30, r28
    28ae:	ea 59       	subi	r30, 0x9A	; 154
    28b0:	ff 4f       	sbci	r31, 0xFF	; 255
    28b2:	81 e0       	ldi	r24, 0x01	; 1
    28b4:	90 e0       	ldi	r25, 0x00	; 0
    28b6:	91 83       	std	Z+1, r25	; 0x01
    28b8:	80 83       	st	Z, r24
    28ba:	64 c0       	rjmp	.+200    	; 0x2984 <main+0x1cf6>
	else if (__tmp > 65535)
    28bc:	fe 01       	movw	r30, r28
    28be:	e8 59       	subi	r30, 0x98	; 152
    28c0:	ff 4f       	sbci	r31, 0xFF	; 255
    28c2:	60 81       	ld	r22, Z
    28c4:	71 81       	ldd	r23, Z+1	; 0x01
    28c6:	82 81       	ldd	r24, Z+2	; 0x02
    28c8:	93 81       	ldd	r25, Z+3	; 0x03
    28ca:	20 e0       	ldi	r18, 0x00	; 0
    28cc:	3f ef       	ldi	r19, 0xFF	; 255
    28ce:	4f e7       	ldi	r20, 0x7F	; 127
    28d0:	57 e4       	ldi	r21, 0x47	; 71
    28d2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    28d6:	18 16       	cp	r1, r24
    28d8:	0c f0       	brlt	.+2      	; 0x28dc <main+0x1c4e>
    28da:	43 c0       	rjmp	.+134    	; 0x2962 <main+0x1cd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28dc:	fe 01       	movw	r30, r28
    28de:	e4 59       	subi	r30, 0x94	; 148
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	60 81       	ld	r22, Z
    28e4:	71 81       	ldd	r23, Z+1	; 0x01
    28e6:	82 81       	ldd	r24, Z+2	; 0x02
    28e8:	93 81       	ldd	r25, Z+3	; 0x03
    28ea:	20 e0       	ldi	r18, 0x00	; 0
    28ec:	30 e0       	ldi	r19, 0x00	; 0
    28ee:	40 e2       	ldi	r20, 0x20	; 32
    28f0:	51 e4       	ldi	r21, 0x41	; 65
    28f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28f6:	dc 01       	movw	r26, r24
    28f8:	cb 01       	movw	r24, r22
    28fa:	8e 01       	movw	r16, r28
    28fc:	0a 59       	subi	r16, 0x9A	; 154
    28fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2900:	bc 01       	movw	r22, r24
    2902:	cd 01       	movw	r24, r26
    2904:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2908:	dc 01       	movw	r26, r24
    290a:	cb 01       	movw	r24, r22
    290c:	f8 01       	movw	r30, r16
    290e:	91 83       	std	Z+1, r25	; 0x01
    2910:	80 83       	st	Z, r24
    2912:	1f c0       	rjmp	.+62     	; 0x2952 <main+0x1cc4>
    2914:	fe 01       	movw	r30, r28
    2916:	ec 59       	subi	r30, 0x9C	; 156
    2918:	ff 4f       	sbci	r31, 0xFF	; 255
    291a:	88 ec       	ldi	r24, 0xC8	; 200
    291c:	90 e0       	ldi	r25, 0x00	; 0
    291e:	91 83       	std	Z+1, r25	; 0x01
    2920:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2922:	fe 01       	movw	r30, r28
    2924:	ec 59       	subi	r30, 0x9C	; 156
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	80 81       	ld	r24, Z
    292a:	91 81       	ldd	r25, Z+1	; 0x01
    292c:	01 97       	sbiw	r24, 0x01	; 1
    292e:	f1 f7       	brne	.-4      	; 0x292c <main+0x1c9e>
    2930:	fe 01       	movw	r30, r28
    2932:	ec 59       	subi	r30, 0x9C	; 156
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	91 83       	std	Z+1, r25	; 0x01
    2938:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    293a:	de 01       	movw	r26, r28
    293c:	aa 59       	subi	r26, 0x9A	; 154
    293e:	bf 4f       	sbci	r27, 0xFF	; 255
    2940:	fe 01       	movw	r30, r28
    2942:	ea 59       	subi	r30, 0x9A	; 154
    2944:	ff 4f       	sbci	r31, 0xFF	; 255
    2946:	80 81       	ld	r24, Z
    2948:	91 81       	ldd	r25, Z+1	; 0x01
    294a:	01 97       	sbiw	r24, 0x01	; 1
    294c:	11 96       	adiw	r26, 0x01	; 1
    294e:	9c 93       	st	X, r25
    2950:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2952:	fe 01       	movw	r30, r28
    2954:	ea 59       	subi	r30, 0x9A	; 154
    2956:	ff 4f       	sbci	r31, 0xFF	; 255
    2958:	80 81       	ld	r24, Z
    295a:	91 81       	ldd	r25, Z+1	; 0x01
    295c:	00 97       	sbiw	r24, 0x00	; 0
    295e:	d1 f6       	brne	.-76     	; 0x2914 <main+0x1c86>
    2960:	ff c3       	rjmp	.+2046   	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2962:	8e 01       	movw	r16, r28
    2964:	0a 59       	subi	r16, 0x9A	; 154
    2966:	1f 4f       	sbci	r17, 0xFF	; 255
    2968:	fe 01       	movw	r30, r28
    296a:	e8 59       	subi	r30, 0x98	; 152
    296c:	ff 4f       	sbci	r31, 0xFF	; 255
    296e:	60 81       	ld	r22, Z
    2970:	71 81       	ldd	r23, Z+1	; 0x01
    2972:	82 81       	ldd	r24, Z+2	; 0x02
    2974:	93 81       	ldd	r25, Z+3	; 0x03
    2976:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    297a:	dc 01       	movw	r26, r24
    297c:	cb 01       	movw	r24, r22
    297e:	f8 01       	movw	r30, r16
    2980:	91 83       	std	Z+1, r25	; 0x01
    2982:	80 83       	st	Z, r24
    2984:	de 01       	movw	r26, r28
    2986:	ae 59       	subi	r26, 0x9E	; 158
    2988:	bf 4f       	sbci	r27, 0xFF	; 255
    298a:	fe 01       	movw	r30, r28
    298c:	ea 59       	subi	r30, 0x9A	; 154
    298e:	ff 4f       	sbci	r31, 0xFF	; 255
    2990:	80 81       	ld	r24, Z
    2992:	91 81       	ldd	r25, Z+1	; 0x01
    2994:	11 96       	adiw	r26, 0x01	; 1
    2996:	9c 93       	st	X, r25
    2998:	8e 93       	st	-X, r24
    299a:	fe 01       	movw	r30, r28
    299c:	ee 59       	subi	r30, 0x9E	; 158
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	80 81       	ld	r24, Z
    29a2:	91 81       	ldd	r25, Z+1	; 0x01
    29a4:	01 97       	sbiw	r24, 0x01	; 1
    29a6:	f1 f7       	brne	.-4      	; 0x29a4 <main+0x1d16>
    29a8:	fe 01       	movw	r30, r28
    29aa:	ee 59       	subi	r30, 0x9E	; 158
    29ac:	ff 4f       	sbci	r31, 0xFF	; 255
    29ae:	91 83       	std	Z+1, r25	; 0x01
    29b0:	80 83       	st	Z, r24
    29b2:	d6 c3       	rjmp	.+1964   	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29b4:	8e 01       	movw	r16, r28
    29b6:	00 59       	subi	r16, 0x90	; 144
    29b8:	1f 4f       	sbci	r17, 0xFF	; 255
    29ba:	fe 01       	movw	r30, r28
    29bc:	ef 58       	subi	r30, 0x8F	; 143
    29be:	ff 4f       	sbci	r31, 0xFF	; 255
    29c0:	60 81       	ld	r22, Z
    29c2:	71 81       	ldd	r23, Z+1	; 0x01
    29c4:	82 81       	ldd	r24, Z+2	; 0x02
    29c6:	93 81       	ldd	r25, Z+3	; 0x03
    29c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29cc:	dc 01       	movw	r26, r24
    29ce:	cb 01       	movw	r24, r22
    29d0:	f8 01       	movw	r30, r16
    29d2:	80 83       	st	Z, r24
    29d4:	de 01       	movw	r26, r28
    29d6:	af 59       	subi	r26, 0x9F	; 159
    29d8:	bf 4f       	sbci	r27, 0xFF	; 255
    29da:	fe 01       	movw	r30, r28
    29dc:	e0 59       	subi	r30, 0x90	; 144
    29de:	ff 4f       	sbci	r31, 0xFF	; 255
    29e0:	80 81       	ld	r24, Z
    29e2:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    29e4:	fe 01       	movw	r30, r28
    29e6:	ef 59       	subi	r30, 0x9F	; 159
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	80 81       	ld	r24, Z
    29ec:	8a 95       	dec	r24
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <main+0x1d5e>
    29f0:	fe 01       	movw	r30, r28
    29f2:	ef 59       	subi	r30, 0x9F	; 159
    29f4:	ff 4f       	sbci	r31, 0xFF	; 255
    29f6:	80 83       	st	Z, r24
    29f8:	b3 c3       	rjmp	.+1894   	; 0x3160 <main+0x24d2>
					_delay_us(500);
		}
		else if( !(GET_BIT(PINA,6))){ //TI 987767 HZ = 1Microsec
    29fa:	e9 e3       	ldi	r30, 0x39	; 57
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	80 81       	ld	r24, Z
    2a00:	82 95       	swap	r24
    2a02:	86 95       	lsr	r24
    2a04:	86 95       	lsr	r24
    2a06:	83 70       	andi	r24, 0x03	; 3
    2a08:	88 2f       	mov	r24, r24
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    2a0c:	81 70       	andi	r24, 0x01	; 1
    2a0e:	90 70       	andi	r25, 0x00	; 0
    2a10:	00 97       	sbiw	r24, 0x00	; 0
    2a12:	09 f0       	breq	.+2      	; 0x2a16 <main+0x1d88>
    2a14:	15 c2       	rjmp	.+1066   	; 0x2e40 <main+0x21b2>
					SET_BIT(PORTC,7);
    2a16:	a5 e3       	ldi	r26, 0x35	; 53
    2a18:	b0 e0       	ldi	r27, 0x00	; 0
    2a1a:	e5 e3       	ldi	r30, 0x35	; 53
    2a1c:	f0 e0       	ldi	r31, 0x00	; 0
    2a1e:	80 81       	ld	r24, Z
    2a20:	80 68       	ori	r24, 0x80	; 128
    2a22:	8c 93       	st	X, r24
    2a24:	fe 01       	movw	r30, r28
    2a26:	e3 5a       	subi	r30, 0xA3	; 163
    2a28:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2a:	80 e0       	ldi	r24, 0x00	; 0
    2a2c:	90 e0       	ldi	r25, 0x00	; 0
    2a2e:	a0 e0       	ldi	r26, 0x00	; 0
    2a30:	bf e3       	ldi	r27, 0x3F	; 63
    2a32:	80 83       	st	Z, r24
    2a34:	91 83       	std	Z+1, r25	; 0x01
    2a36:	a2 83       	std	Z+2, r26	; 0x02
    2a38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2a3a:	8e 01       	movw	r16, r28
    2a3c:	07 5a       	subi	r16, 0xA7	; 167
    2a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a40:	fe 01       	movw	r30, r28
    2a42:	e3 5a       	subi	r30, 0xA3	; 163
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	60 81       	ld	r22, Z
    2a48:	71 81       	ldd	r23, Z+1	; 0x01
    2a4a:	82 81       	ldd	r24, Z+2	; 0x02
    2a4c:	93 81       	ldd	r25, Z+3	; 0x03
    2a4e:	2b ea       	ldi	r18, 0xAB	; 171
    2a50:	3a ea       	ldi	r19, 0xAA	; 170
    2a52:	4a e2       	ldi	r20, 0x2A	; 42
    2a54:	50 e4       	ldi	r21, 0x40	; 64
    2a56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a5a:	dc 01       	movw	r26, r24
    2a5c:	cb 01       	movw	r24, r22
    2a5e:	f8 01       	movw	r30, r16
    2a60:	80 83       	st	Z, r24
    2a62:	91 83       	std	Z+1, r25	; 0x01
    2a64:	a2 83       	std	Z+2, r26	; 0x02
    2a66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a68:	fe 01       	movw	r30, r28
    2a6a:	e7 5a       	subi	r30, 0xA7	; 167
    2a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6e:	60 81       	ld	r22, Z
    2a70:	71 81       	ldd	r23, Z+1	; 0x01
    2a72:	82 81       	ldd	r24, Z+2	; 0x02
    2a74:	93 81       	ldd	r25, Z+3	; 0x03
    2a76:	20 e0       	ldi	r18, 0x00	; 0
    2a78:	30 e0       	ldi	r19, 0x00	; 0
    2a7a:	40 e8       	ldi	r20, 0x80	; 128
    2a7c:	5f e3       	ldi	r21, 0x3F	; 63
    2a7e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2a82:	88 23       	and	r24, r24
    2a84:	34 f4       	brge	.+12     	; 0x2a92 <main+0x1e04>
		__ticks = 1;
    2a86:	fe 01       	movw	r30, r28
    2a88:	e8 5a       	subi	r30, 0xA8	; 168
    2a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8c:	81 e0       	ldi	r24, 0x01	; 1
    2a8e:	80 83       	st	Z, r24
    2a90:	e0 c0       	rjmp	.+448    	; 0x2c52 <main+0x1fc4>
	else if (__tmp > 255)
    2a92:	fe 01       	movw	r30, r28
    2a94:	e7 5a       	subi	r30, 0xA7	; 167
    2a96:	ff 4f       	sbci	r31, 0xFF	; 255
    2a98:	60 81       	ld	r22, Z
    2a9a:	71 81       	ldd	r23, Z+1	; 0x01
    2a9c:	82 81       	ldd	r24, Z+2	; 0x02
    2a9e:	93 81       	ldd	r25, Z+3	; 0x03
    2aa0:	20 e0       	ldi	r18, 0x00	; 0
    2aa2:	30 e0       	ldi	r19, 0x00	; 0
    2aa4:	4f e7       	ldi	r20, 0x7F	; 127
    2aa6:	53 e4       	ldi	r21, 0x43	; 67
    2aa8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2aac:	18 16       	cp	r1, r24
    2aae:	0c f0       	brlt	.+2      	; 0x2ab2 <main+0x1e24>
    2ab0:	c0 c0       	rjmp	.+384    	; 0x2c32 <main+0x1fa4>
	{
		_delay_ms(__us / 1000.0);
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e3 5a       	subi	r30, 0xA3	; 163
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	60 81       	ld	r22, Z
    2aba:	71 81       	ldd	r23, Z+1	; 0x01
    2abc:	82 81       	ldd	r24, Z+2	; 0x02
    2abe:	93 81       	ldd	r25, Z+3	; 0x03
    2ac0:	20 e0       	ldi	r18, 0x00	; 0
    2ac2:	30 e0       	ldi	r19, 0x00	; 0
    2ac4:	4a e7       	ldi	r20, 0x7A	; 122
    2ac6:	54 e4       	ldi	r21, 0x44	; 68
    2ac8:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2acc:	dc 01       	movw	r26, r24
    2ace:	cb 01       	movw	r24, r22
    2ad0:	fe 01       	movw	r30, r28
    2ad2:	ec 5a       	subi	r30, 0xAC	; 172
    2ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad6:	80 83       	st	Z, r24
    2ad8:	91 83       	std	Z+1, r25	; 0x01
    2ada:	a2 83       	std	Z+2, r26	; 0x02
    2adc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ade:	8e 01       	movw	r16, r28
    2ae0:	00 5b       	subi	r16, 0xB0	; 176
    2ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ae4:	fe 01       	movw	r30, r28
    2ae6:	ec 5a       	subi	r30, 0xAC	; 172
    2ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aea:	60 81       	ld	r22, Z
    2aec:	71 81       	ldd	r23, Z+1	; 0x01
    2aee:	82 81       	ldd	r24, Z+2	; 0x02
    2af0:	93 81       	ldd	r25, Z+3	; 0x03
    2af2:	20 e0       	ldi	r18, 0x00	; 0
    2af4:	30 e0       	ldi	r19, 0x00	; 0
    2af6:	4a ef       	ldi	r20, 0xFA	; 250
    2af8:	54 e4       	ldi	r21, 0x44	; 68
    2afa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2afe:	dc 01       	movw	r26, r24
    2b00:	cb 01       	movw	r24, r22
    2b02:	f8 01       	movw	r30, r16
    2b04:	80 83       	st	Z, r24
    2b06:	91 83       	std	Z+1, r25	; 0x01
    2b08:	a2 83       	std	Z+2, r26	; 0x02
    2b0a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b0c:	fe 01       	movw	r30, r28
    2b0e:	e0 5b       	subi	r30, 0xB0	; 176
    2b10:	ff 4f       	sbci	r31, 0xFF	; 255
    2b12:	60 81       	ld	r22, Z
    2b14:	71 81       	ldd	r23, Z+1	; 0x01
    2b16:	82 81       	ldd	r24, Z+2	; 0x02
    2b18:	93 81       	ldd	r25, Z+3	; 0x03
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	40 e8       	ldi	r20, 0x80	; 128
    2b20:	5f e3       	ldi	r21, 0x3F	; 63
    2b22:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b26:	88 23       	and	r24, r24
    2b28:	44 f4       	brge	.+16     	; 0x2b3a <main+0x1eac>
		__ticks = 1;
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	e2 5b       	subi	r30, 0xB2	; 178
    2b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b30:	81 e0       	ldi	r24, 0x01	; 1
    2b32:	90 e0       	ldi	r25, 0x00	; 0
    2b34:	91 83       	std	Z+1, r25	; 0x01
    2b36:	80 83       	st	Z, r24
    2b38:	64 c0       	rjmp	.+200    	; 0x2c02 <main+0x1f74>
	else if (__tmp > 65535)
    2b3a:	fe 01       	movw	r30, r28
    2b3c:	e0 5b       	subi	r30, 0xB0	; 176
    2b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b40:	60 81       	ld	r22, Z
    2b42:	71 81       	ldd	r23, Z+1	; 0x01
    2b44:	82 81       	ldd	r24, Z+2	; 0x02
    2b46:	93 81       	ldd	r25, Z+3	; 0x03
    2b48:	20 e0       	ldi	r18, 0x00	; 0
    2b4a:	3f ef       	ldi	r19, 0xFF	; 255
    2b4c:	4f e7       	ldi	r20, 0x7F	; 127
    2b4e:	57 e4       	ldi	r21, 0x47	; 71
    2b50:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2b54:	18 16       	cp	r1, r24
    2b56:	0c f0       	brlt	.+2      	; 0x2b5a <main+0x1ecc>
    2b58:	43 c0       	rjmp	.+134    	; 0x2be0 <main+0x1f52>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b5a:	fe 01       	movw	r30, r28
    2b5c:	ec 5a       	subi	r30, 0xAC	; 172
    2b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b60:	60 81       	ld	r22, Z
    2b62:	71 81       	ldd	r23, Z+1	; 0x01
    2b64:	82 81       	ldd	r24, Z+2	; 0x02
    2b66:	93 81       	ldd	r25, Z+3	; 0x03
    2b68:	20 e0       	ldi	r18, 0x00	; 0
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	40 e2       	ldi	r20, 0x20	; 32
    2b6e:	51 e4       	ldi	r21, 0x41	; 65
    2b70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b74:	dc 01       	movw	r26, r24
    2b76:	cb 01       	movw	r24, r22
    2b78:	8e 01       	movw	r16, r28
    2b7a:	02 5b       	subi	r16, 0xB2	; 178
    2b7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b7e:	bc 01       	movw	r22, r24
    2b80:	cd 01       	movw	r24, r26
    2b82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b86:	dc 01       	movw	r26, r24
    2b88:	cb 01       	movw	r24, r22
    2b8a:	f8 01       	movw	r30, r16
    2b8c:	91 83       	std	Z+1, r25	; 0x01
    2b8e:	80 83       	st	Z, r24
    2b90:	1f c0       	rjmp	.+62     	; 0x2bd0 <main+0x1f42>
    2b92:	fe 01       	movw	r30, r28
    2b94:	e4 5b       	subi	r30, 0xB4	; 180
    2b96:	ff 4f       	sbci	r31, 0xFF	; 255
    2b98:	88 ec       	ldi	r24, 0xC8	; 200
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	91 83       	std	Z+1, r25	; 0x01
    2b9e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2ba0:	fe 01       	movw	r30, r28
    2ba2:	e4 5b       	subi	r30, 0xB4	; 180
    2ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba6:	80 81       	ld	r24, Z
    2ba8:	91 81       	ldd	r25, Z+1	; 0x01
    2baa:	01 97       	sbiw	r24, 0x01	; 1
    2bac:	f1 f7       	brne	.-4      	; 0x2baa <main+0x1f1c>
    2bae:	fe 01       	movw	r30, r28
    2bb0:	e4 5b       	subi	r30, 0xB4	; 180
    2bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb4:	91 83       	std	Z+1, r25	; 0x01
    2bb6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bb8:	de 01       	movw	r26, r28
    2bba:	a2 5b       	subi	r26, 0xB2	; 178
    2bbc:	bf 4f       	sbci	r27, 0xFF	; 255
    2bbe:	fe 01       	movw	r30, r28
    2bc0:	e2 5b       	subi	r30, 0xB2	; 178
    2bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc4:	80 81       	ld	r24, Z
    2bc6:	91 81       	ldd	r25, Z+1	; 0x01
    2bc8:	01 97       	sbiw	r24, 0x01	; 1
    2bca:	11 96       	adiw	r26, 0x01	; 1
    2bcc:	9c 93       	st	X, r25
    2bce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bd0:	fe 01       	movw	r30, r28
    2bd2:	e2 5b       	subi	r30, 0xB2	; 178
    2bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd6:	80 81       	ld	r24, Z
    2bd8:	91 81       	ldd	r25, Z+1	; 0x01
    2bda:	00 97       	sbiw	r24, 0x00	; 0
    2bdc:	d1 f6       	brne	.-76     	; 0x2b92 <main+0x1f04>
    2bde:	4b c0       	rjmp	.+150    	; 0x2c76 <main+0x1fe8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2be0:	8e 01       	movw	r16, r28
    2be2:	02 5b       	subi	r16, 0xB2	; 178
    2be4:	1f 4f       	sbci	r17, 0xFF	; 255
    2be6:	fe 01       	movw	r30, r28
    2be8:	e0 5b       	subi	r30, 0xB0	; 176
    2bea:	ff 4f       	sbci	r31, 0xFF	; 255
    2bec:	60 81       	ld	r22, Z
    2bee:	71 81       	ldd	r23, Z+1	; 0x01
    2bf0:	82 81       	ldd	r24, Z+2	; 0x02
    2bf2:	93 81       	ldd	r25, Z+3	; 0x03
    2bf4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf8:	dc 01       	movw	r26, r24
    2bfa:	cb 01       	movw	r24, r22
    2bfc:	f8 01       	movw	r30, r16
    2bfe:	91 83       	std	Z+1, r25	; 0x01
    2c00:	80 83       	st	Z, r24
    2c02:	de 01       	movw	r26, r28
    2c04:	a6 5b       	subi	r26, 0xB6	; 182
    2c06:	bf 4f       	sbci	r27, 0xFF	; 255
    2c08:	fe 01       	movw	r30, r28
    2c0a:	e2 5b       	subi	r30, 0xB2	; 178
    2c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0e:	80 81       	ld	r24, Z
    2c10:	91 81       	ldd	r25, Z+1	; 0x01
    2c12:	11 96       	adiw	r26, 0x01	; 1
    2c14:	9c 93       	st	X, r25
    2c16:	8e 93       	st	-X, r24
    2c18:	fe 01       	movw	r30, r28
    2c1a:	e6 5b       	subi	r30, 0xB6	; 182
    2c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1e:	80 81       	ld	r24, Z
    2c20:	91 81       	ldd	r25, Z+1	; 0x01
    2c22:	01 97       	sbiw	r24, 0x01	; 1
    2c24:	f1 f7       	brne	.-4      	; 0x2c22 <main+0x1f94>
    2c26:	fe 01       	movw	r30, r28
    2c28:	e6 5b       	subi	r30, 0xB6	; 182
    2c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2c:	91 83       	std	Z+1, r25	; 0x01
    2c2e:	80 83       	st	Z, r24
    2c30:	22 c0       	rjmp	.+68     	; 0x2c76 <main+0x1fe8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2c32:	8e 01       	movw	r16, r28
    2c34:	08 5a       	subi	r16, 0xA8	; 168
    2c36:	1f 4f       	sbci	r17, 0xFF	; 255
    2c38:	fe 01       	movw	r30, r28
    2c3a:	e7 5a       	subi	r30, 0xA7	; 167
    2c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3e:	60 81       	ld	r22, Z
    2c40:	71 81       	ldd	r23, Z+1	; 0x01
    2c42:	82 81       	ldd	r24, Z+2	; 0x02
    2c44:	93 81       	ldd	r25, Z+3	; 0x03
    2c46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c4a:	dc 01       	movw	r26, r24
    2c4c:	cb 01       	movw	r24, r22
    2c4e:	f8 01       	movw	r30, r16
    2c50:	80 83       	st	Z, r24
    2c52:	de 01       	movw	r26, r28
    2c54:	a7 5b       	subi	r26, 0xB7	; 183
    2c56:	bf 4f       	sbci	r27, 0xFF	; 255
    2c58:	fe 01       	movw	r30, r28
    2c5a:	e8 5a       	subi	r30, 0xA8	; 168
    2c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5e:	80 81       	ld	r24, Z
    2c60:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2c62:	fe 01       	movw	r30, r28
    2c64:	e7 5b       	subi	r30, 0xB7	; 183
    2c66:	ff 4f       	sbci	r31, 0xFF	; 255
    2c68:	80 81       	ld	r24, Z
    2c6a:	8a 95       	dec	r24
    2c6c:	f1 f7       	brne	.-4      	; 0x2c6a <main+0x1fdc>
    2c6e:	fe 01       	movw	r30, r28
    2c70:	e7 5b       	subi	r30, 0xB7	; 183
    2c72:	ff 4f       	sbci	r31, 0xFF	; 255
    2c74:	80 83       	st	Z, r24
					_delay_us(0.5);
					CLR_BIT(PORTC,7);
    2c76:	a5 e3       	ldi	r26, 0x35	; 53
    2c78:	b0 e0       	ldi	r27, 0x00	; 0
    2c7a:	e5 e3       	ldi	r30, 0x35	; 53
    2c7c:	f0 e0       	ldi	r31, 0x00	; 0
    2c7e:	80 81       	ld	r24, Z
    2c80:	8f 77       	andi	r24, 0x7F	; 127
    2c82:	8c 93       	st	X, r24
    2c84:	fe 01       	movw	r30, r28
    2c86:	eb 5b       	subi	r30, 0xBB	; 187
    2c88:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8a:	80 e0       	ldi	r24, 0x00	; 0
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	a0 e0       	ldi	r26, 0x00	; 0
    2c90:	bf e3       	ldi	r27, 0x3F	; 63
    2c92:	80 83       	st	Z, r24
    2c94:	91 83       	std	Z+1, r25	; 0x01
    2c96:	a2 83       	std	Z+2, r26	; 0x02
    2c98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2c9a:	8e 01       	movw	r16, r28
    2c9c:	0f 5b       	subi	r16, 0xBF	; 191
    2c9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca0:	fe 01       	movw	r30, r28
    2ca2:	eb 5b       	subi	r30, 0xBB	; 187
    2ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca6:	60 81       	ld	r22, Z
    2ca8:	71 81       	ldd	r23, Z+1	; 0x01
    2caa:	82 81       	ldd	r24, Z+2	; 0x02
    2cac:	93 81       	ldd	r25, Z+3	; 0x03
    2cae:	2b ea       	ldi	r18, 0xAB	; 171
    2cb0:	3a ea       	ldi	r19, 0xAA	; 170
    2cb2:	4a e2       	ldi	r20, 0x2A	; 42
    2cb4:	50 e4       	ldi	r21, 0x40	; 64
    2cb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cba:	dc 01       	movw	r26, r24
    2cbc:	cb 01       	movw	r24, r22
    2cbe:	f8 01       	movw	r30, r16
    2cc0:	80 83       	st	Z, r24
    2cc2:	91 83       	std	Z+1, r25	; 0x01
    2cc4:	a2 83       	std	Z+2, r26	; 0x02
    2cc6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cc8:	fe 01       	movw	r30, r28
    2cca:	ef 5b       	subi	r30, 0xBF	; 191
    2ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cce:	60 81       	ld	r22, Z
    2cd0:	71 81       	ldd	r23, Z+1	; 0x01
    2cd2:	82 81       	ldd	r24, Z+2	; 0x02
    2cd4:	93 81       	ldd	r25, Z+3	; 0x03
    2cd6:	20 e0       	ldi	r18, 0x00	; 0
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	40 e8       	ldi	r20, 0x80	; 128
    2cdc:	5f e3       	ldi	r21, 0x3F	; 63
    2cde:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2ce2:	88 23       	and	r24, r24
    2ce4:	34 f4       	brge	.+12     	; 0x2cf2 <main+0x2064>
		__ticks = 1;
    2ce6:	81 e0       	ldi	r24, 0x01	; 1
    2ce8:	fe 01       	movw	r30, r28
    2cea:	e0 5c       	subi	r30, 0xC0	; 192
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	80 83       	st	Z, r24
    2cf0:	9d c0       	rjmp	.+314    	; 0x2e2c <main+0x219e>
	else if (__tmp > 255)
    2cf2:	fe 01       	movw	r30, r28
    2cf4:	ef 5b       	subi	r30, 0xBF	; 191
    2cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf8:	60 81       	ld	r22, Z
    2cfa:	71 81       	ldd	r23, Z+1	; 0x01
    2cfc:	82 81       	ldd	r24, Z+2	; 0x02
    2cfe:	93 81       	ldd	r25, Z+3	; 0x03
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	4f e7       	ldi	r20, 0x7F	; 127
    2d06:	53 e4       	ldi	r21, 0x43	; 67
    2d08:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2d0c:	18 16       	cp	r1, r24
    2d0e:	0c f0       	brlt	.+2      	; 0x2d12 <main+0x2084>
    2d10:	7e c0       	rjmp	.+252    	; 0x2e0e <main+0x2180>
	{
		_delay_ms(__us / 1000.0);
    2d12:	fe 01       	movw	r30, r28
    2d14:	eb 5b       	subi	r30, 0xBB	; 187
    2d16:	ff 4f       	sbci	r31, 0xFF	; 255
    2d18:	60 81       	ld	r22, Z
    2d1a:	71 81       	ldd	r23, Z+1	; 0x01
    2d1c:	82 81       	ldd	r24, Z+2	; 0x02
    2d1e:	93 81       	ldd	r25, Z+3	; 0x03
    2d20:	20 e0       	ldi	r18, 0x00	; 0
    2d22:	30 e0       	ldi	r19, 0x00	; 0
    2d24:	4a e7       	ldi	r20, 0x7A	; 122
    2d26:	54 e4       	ldi	r21, 0x44	; 68
    2d28:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2d2c:	dc 01       	movw	r26, r24
    2d2e:	cb 01       	movw	r24, r22
    2d30:	8c af       	std	Y+60, r24	; 0x3c
    2d32:	9d af       	std	Y+61, r25	; 0x3d
    2d34:	ae af       	std	Y+62, r26	; 0x3e
    2d36:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d38:	6c ad       	ldd	r22, Y+60	; 0x3c
    2d3a:	7d ad       	ldd	r23, Y+61	; 0x3d
    2d3c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2d3e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2d40:	20 e0       	ldi	r18, 0x00	; 0
    2d42:	30 e0       	ldi	r19, 0x00	; 0
    2d44:	4a ef       	ldi	r20, 0xFA	; 250
    2d46:	54 e4       	ldi	r21, 0x44	; 68
    2d48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d4c:	dc 01       	movw	r26, r24
    2d4e:	cb 01       	movw	r24, r22
    2d50:	88 af       	std	Y+56, r24	; 0x38
    2d52:	99 af       	std	Y+57, r25	; 0x39
    2d54:	aa af       	std	Y+58, r26	; 0x3a
    2d56:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    2d58:	68 ad       	ldd	r22, Y+56	; 0x38
    2d5a:	79 ad       	ldd	r23, Y+57	; 0x39
    2d5c:	8a ad       	ldd	r24, Y+58	; 0x3a
    2d5e:	9b ad       	ldd	r25, Y+59	; 0x3b
    2d60:	20 e0       	ldi	r18, 0x00	; 0
    2d62:	30 e0       	ldi	r19, 0x00	; 0
    2d64:	40 e8       	ldi	r20, 0x80	; 128
    2d66:	5f e3       	ldi	r21, 0x3F	; 63
    2d68:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2d6c:	88 23       	and	r24, r24
    2d6e:	2c f4       	brge	.+10     	; 0x2d7a <main+0x20ec>
		__ticks = 1;
    2d70:	81 e0       	ldi	r24, 0x01	; 1
    2d72:	90 e0       	ldi	r25, 0x00	; 0
    2d74:	9f ab       	std	Y+55, r25	; 0x37
    2d76:	8e ab       	std	Y+54, r24	; 0x36
    2d78:	3f c0       	rjmp	.+126    	; 0x2df8 <main+0x216a>
	else if (__tmp > 65535)
    2d7a:	68 ad       	ldd	r22, Y+56	; 0x38
    2d7c:	79 ad       	ldd	r23, Y+57	; 0x39
    2d7e:	8a ad       	ldd	r24, Y+58	; 0x3a
    2d80:	9b ad       	ldd	r25, Y+59	; 0x3b
    2d82:	20 e0       	ldi	r18, 0x00	; 0
    2d84:	3f ef       	ldi	r19, 0xFF	; 255
    2d86:	4f e7       	ldi	r20, 0x7F	; 127
    2d88:	57 e4       	ldi	r21, 0x47	; 71
    2d8a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2d8e:	18 16       	cp	r1, r24
    2d90:	4c f5       	brge	.+82     	; 0x2de4 <main+0x2156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d92:	6c ad       	ldd	r22, Y+60	; 0x3c
    2d94:	7d ad       	ldd	r23, Y+61	; 0x3d
    2d96:	8e ad       	ldd	r24, Y+62	; 0x3e
    2d98:	9f ad       	ldd	r25, Y+63	; 0x3f
    2d9a:	20 e0       	ldi	r18, 0x00	; 0
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	40 e2       	ldi	r20, 0x20	; 32
    2da0:	51 e4       	ldi	r21, 0x41	; 65
    2da2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2da6:	dc 01       	movw	r26, r24
    2da8:	cb 01       	movw	r24, r22
    2daa:	bc 01       	movw	r22, r24
    2dac:	cd 01       	movw	r24, r26
    2dae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2db2:	dc 01       	movw	r26, r24
    2db4:	cb 01       	movw	r24, r22
    2db6:	9f ab       	std	Y+55, r25	; 0x37
    2db8:	8e ab       	std	Y+54, r24	; 0x36
    2dba:	0f c0       	rjmp	.+30     	; 0x2dda <main+0x214c>
    2dbc:	88 ec       	ldi	r24, 0xC8	; 200
    2dbe:	90 e0       	ldi	r25, 0x00	; 0
    2dc0:	9d ab       	std	Y+53, r25	; 0x35
    2dc2:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2dc4:	8c a9       	ldd	r24, Y+52	; 0x34
    2dc6:	9d a9       	ldd	r25, Y+53	; 0x35
    2dc8:	01 97       	sbiw	r24, 0x01	; 1
    2dca:	f1 f7       	brne	.-4      	; 0x2dc8 <main+0x213a>
    2dcc:	9d ab       	std	Y+53, r25	; 0x35
    2dce:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dd0:	8e a9       	ldd	r24, Y+54	; 0x36
    2dd2:	9f a9       	ldd	r25, Y+55	; 0x37
    2dd4:	01 97       	sbiw	r24, 0x01	; 1
    2dd6:	9f ab       	std	Y+55, r25	; 0x37
    2dd8:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dda:	8e a9       	ldd	r24, Y+54	; 0x36
    2ddc:	9f a9       	ldd	r25, Y+55	; 0x37
    2dde:	00 97       	sbiw	r24, 0x00	; 0
    2de0:	69 f7       	brne	.-38     	; 0x2dbc <main+0x212e>
    2de2:	be c1       	rjmp	.+892    	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de4:	68 ad       	ldd	r22, Y+56	; 0x38
    2de6:	79 ad       	ldd	r23, Y+57	; 0x39
    2de8:	8a ad       	ldd	r24, Y+58	; 0x3a
    2dea:	9b ad       	ldd	r25, Y+59	; 0x3b
    2dec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2df0:	dc 01       	movw	r26, r24
    2df2:	cb 01       	movw	r24, r22
    2df4:	9f ab       	std	Y+55, r25	; 0x37
    2df6:	8e ab       	std	Y+54, r24	; 0x36
    2df8:	8e a9       	ldd	r24, Y+54	; 0x36
    2dfa:	9f a9       	ldd	r25, Y+55	; 0x37
    2dfc:	9b ab       	std	Y+51, r25	; 0x33
    2dfe:	8a ab       	std	Y+50, r24	; 0x32
    2e00:	8a a9       	ldd	r24, Y+50	; 0x32
    2e02:	9b a9       	ldd	r25, Y+51	; 0x33
    2e04:	01 97       	sbiw	r24, 0x01	; 1
    2e06:	f1 f7       	brne	.-4      	; 0x2e04 <main+0x2176>
    2e08:	9b ab       	std	Y+51, r25	; 0x33
    2e0a:	8a ab       	std	Y+50, r24	; 0x32
    2e0c:	a9 c1       	rjmp	.+850    	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2e0e:	fe 01       	movw	r30, r28
    2e10:	ef 5b       	subi	r30, 0xBF	; 191
    2e12:	ff 4f       	sbci	r31, 0xFF	; 255
    2e14:	60 81       	ld	r22, Z
    2e16:	71 81       	ldd	r23, Z+1	; 0x01
    2e18:	82 81       	ldd	r24, Z+2	; 0x02
    2e1a:	93 81       	ldd	r25, Z+3	; 0x03
    2e1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e20:	dc 01       	movw	r26, r24
    2e22:	cb 01       	movw	r24, r22
    2e24:	fe 01       	movw	r30, r28
    2e26:	e0 5c       	subi	r30, 0xC0	; 192
    2e28:	ff 4f       	sbci	r31, 0xFF	; 255
    2e2a:	80 83       	st	Z, r24
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	e0 5c       	subi	r30, 0xC0	; 192
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	80 81       	ld	r24, Z
    2e34:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2e36:	89 a9       	ldd	r24, Y+49	; 0x31
    2e38:	8a 95       	dec	r24
    2e3a:	f1 f7       	brne	.-4      	; 0x2e38 <main+0x21aa>
    2e3c:	89 ab       	std	Y+49, r24	; 0x31
    2e3e:	90 c1       	rjmp	.+800    	; 0x3160 <main+0x24d2>
					_delay_us(0.5);
		}
		else if( !(GET_BIT(PINA,7))){ //Doo 1046502 HZ = 100Microsec
    2e40:	e9 e3       	ldi	r30, 0x39	; 57
    2e42:	f0 e0       	ldi	r31, 0x00	; 0
    2e44:	80 81       	ld	r24, Z
    2e46:	88 23       	and	r24, r24
    2e48:	0c f4       	brge	.+2      	; 0x2e4c <main+0x21be>
    2e4a:	8a c1       	rjmp	.+788    	; 0x3160 <main+0x24d2>
					SET_BIT(PORTC,7);
    2e4c:	a5 e3       	ldi	r26, 0x35	; 53
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	e5 e3       	ldi	r30, 0x35	; 53
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	80 81       	ld	r24, Z
    2e56:	80 68       	ori	r24, 0x80	; 128
    2e58:	8c 93       	st	X, r24
    2e5a:	80 e0       	ldi	r24, 0x00	; 0
    2e5c:	90 e0       	ldi	r25, 0x00	; 0
    2e5e:	a8 e4       	ldi	r26, 0x48	; 72
    2e60:	b2 e4       	ldi	r27, 0x42	; 66
    2e62:	8d a7       	std	Y+45, r24	; 0x2d
    2e64:	9e a7       	std	Y+46, r25	; 0x2e
    2e66:	af a7       	std	Y+47, r26	; 0x2f
    2e68:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2e6a:	6d a5       	ldd	r22, Y+45	; 0x2d
    2e6c:	7e a5       	ldd	r23, Y+46	; 0x2e
    2e6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2e70:	98 a9       	ldd	r25, Y+48	; 0x30
    2e72:	2b ea       	ldi	r18, 0xAB	; 171
    2e74:	3a ea       	ldi	r19, 0xAA	; 170
    2e76:	4a e2       	ldi	r20, 0x2A	; 42
    2e78:	50 e4       	ldi	r21, 0x40	; 64
    2e7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e7e:	dc 01       	movw	r26, r24
    2e80:	cb 01       	movw	r24, r22
    2e82:	89 a7       	std	Y+41, r24	; 0x29
    2e84:	9a a7       	std	Y+42, r25	; 0x2a
    2e86:	ab a7       	std	Y+43, r26	; 0x2b
    2e88:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    2e8a:	69 a5       	ldd	r22, Y+41	; 0x29
    2e8c:	7a a5       	ldd	r23, Y+42	; 0x2a
    2e8e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2e90:	9c a5       	ldd	r25, Y+44	; 0x2c
    2e92:	20 e0       	ldi	r18, 0x00	; 0
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	40 e8       	ldi	r20, 0x80	; 128
    2e98:	5f e3       	ldi	r21, 0x3F	; 63
    2e9a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2e9e:	88 23       	and	r24, r24
    2ea0:	1c f4       	brge	.+6      	; 0x2ea8 <main+0x221a>
		__ticks = 1;
    2ea2:	81 e0       	ldi	r24, 0x01	; 1
    2ea4:	88 a7       	std	Y+40, r24	; 0x28
    2ea6:	91 c0       	rjmp	.+290    	; 0x2fca <main+0x233c>
	else if (__tmp > 255)
    2ea8:	69 a5       	ldd	r22, Y+41	; 0x29
    2eaa:	7a a5       	ldd	r23, Y+42	; 0x2a
    2eac:	8b a5       	ldd	r24, Y+43	; 0x2b
    2eae:	9c a5       	ldd	r25, Y+44	; 0x2c
    2eb0:	20 e0       	ldi	r18, 0x00	; 0
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	4f e7       	ldi	r20, 0x7F	; 127
    2eb6:	53 e4       	ldi	r21, 0x43	; 67
    2eb8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2ebc:	18 16       	cp	r1, r24
    2ebe:	0c f0       	brlt	.+2      	; 0x2ec2 <main+0x2234>
    2ec0:	7b c0       	rjmp	.+246    	; 0x2fb8 <main+0x232a>
	{
		_delay_ms(__us / 1000.0);
    2ec2:	6d a5       	ldd	r22, Y+45	; 0x2d
    2ec4:	7e a5       	ldd	r23, Y+46	; 0x2e
    2ec6:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ec8:	98 a9       	ldd	r25, Y+48	; 0x30
    2eca:	20 e0       	ldi	r18, 0x00	; 0
    2ecc:	30 e0       	ldi	r19, 0x00	; 0
    2ece:	4a e7       	ldi	r20, 0x7A	; 122
    2ed0:	54 e4       	ldi	r21, 0x44	; 68
    2ed2:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2ed6:	dc 01       	movw	r26, r24
    2ed8:	cb 01       	movw	r24, r22
    2eda:	8c a3       	std	Y+36, r24	; 0x24
    2edc:	9d a3       	std	Y+37, r25	; 0x25
    2ede:	ae a3       	std	Y+38, r26	; 0x26
    2ee0:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ee2:	6c a1       	ldd	r22, Y+36	; 0x24
    2ee4:	7d a1       	ldd	r23, Y+37	; 0x25
    2ee6:	8e a1       	ldd	r24, Y+38	; 0x26
    2ee8:	9f a1       	ldd	r25, Y+39	; 0x27
    2eea:	20 e0       	ldi	r18, 0x00	; 0
    2eec:	30 e0       	ldi	r19, 0x00	; 0
    2eee:	4a ef       	ldi	r20, 0xFA	; 250
    2ef0:	54 e4       	ldi	r21, 0x44	; 68
    2ef2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ef6:	dc 01       	movw	r26, r24
    2ef8:	cb 01       	movw	r24, r22
    2efa:	88 a3       	std	Y+32, r24	; 0x20
    2efc:	99 a3       	std	Y+33, r25	; 0x21
    2efe:	aa a3       	std	Y+34, r26	; 0x22
    2f00:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    2f02:	68 a1       	ldd	r22, Y+32	; 0x20
    2f04:	79 a1       	ldd	r23, Y+33	; 0x21
    2f06:	8a a1       	ldd	r24, Y+34	; 0x22
    2f08:	9b a1       	ldd	r25, Y+35	; 0x23
    2f0a:	20 e0       	ldi	r18, 0x00	; 0
    2f0c:	30 e0       	ldi	r19, 0x00	; 0
    2f0e:	40 e8       	ldi	r20, 0x80	; 128
    2f10:	5f e3       	ldi	r21, 0x3F	; 63
    2f12:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f16:	88 23       	and	r24, r24
    2f18:	2c f4       	brge	.+10     	; 0x2f24 <main+0x2296>
		__ticks = 1;
    2f1a:	81 e0       	ldi	r24, 0x01	; 1
    2f1c:	90 e0       	ldi	r25, 0x00	; 0
    2f1e:	9f 8f       	std	Y+31, r25	; 0x1f
    2f20:	8e 8f       	std	Y+30, r24	; 0x1e
    2f22:	3f c0       	rjmp	.+126    	; 0x2fa2 <main+0x2314>
	else if (__tmp > 65535)
    2f24:	68 a1       	ldd	r22, Y+32	; 0x20
    2f26:	79 a1       	ldd	r23, Y+33	; 0x21
    2f28:	8a a1       	ldd	r24, Y+34	; 0x22
    2f2a:	9b a1       	ldd	r25, Y+35	; 0x23
    2f2c:	20 e0       	ldi	r18, 0x00	; 0
    2f2e:	3f ef       	ldi	r19, 0xFF	; 255
    2f30:	4f e7       	ldi	r20, 0x7F	; 127
    2f32:	57 e4       	ldi	r21, 0x47	; 71
    2f34:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2f38:	18 16       	cp	r1, r24
    2f3a:	4c f5       	brge	.+82     	; 0x2f8e <main+0x2300>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f3c:	6c a1       	ldd	r22, Y+36	; 0x24
    2f3e:	7d a1       	ldd	r23, Y+37	; 0x25
    2f40:	8e a1       	ldd	r24, Y+38	; 0x26
    2f42:	9f a1       	ldd	r25, Y+39	; 0x27
    2f44:	20 e0       	ldi	r18, 0x00	; 0
    2f46:	30 e0       	ldi	r19, 0x00	; 0
    2f48:	40 e2       	ldi	r20, 0x20	; 32
    2f4a:	51 e4       	ldi	r21, 0x41	; 65
    2f4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f50:	dc 01       	movw	r26, r24
    2f52:	cb 01       	movw	r24, r22
    2f54:	bc 01       	movw	r22, r24
    2f56:	cd 01       	movw	r24, r26
    2f58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f5c:	dc 01       	movw	r26, r24
    2f5e:	cb 01       	movw	r24, r22
    2f60:	9f 8f       	std	Y+31, r25	; 0x1f
    2f62:	8e 8f       	std	Y+30, r24	; 0x1e
    2f64:	0f c0       	rjmp	.+30     	; 0x2f84 <main+0x22f6>
    2f66:	88 ec       	ldi	r24, 0xC8	; 200
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	9d 8f       	std	Y+29, r25	; 0x1d
    2f6c:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2f6e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2f70:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2f72:	01 97       	sbiw	r24, 0x01	; 1
    2f74:	f1 f7       	brne	.-4      	; 0x2f72 <main+0x22e4>
    2f76:	9d 8f       	std	Y+29, r25	; 0x1d
    2f78:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f7a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f7c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2f7e:	01 97       	sbiw	r24, 0x01	; 1
    2f80:	9f 8f       	std	Y+31, r25	; 0x1f
    2f82:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f84:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f86:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2f88:	00 97       	sbiw	r24, 0x00	; 0
    2f8a:	69 f7       	brne	.-38     	; 0x2f66 <main+0x22d8>
    2f8c:	24 c0       	rjmp	.+72     	; 0x2fd6 <main+0x2348>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f8e:	68 a1       	ldd	r22, Y+32	; 0x20
    2f90:	79 a1       	ldd	r23, Y+33	; 0x21
    2f92:	8a a1       	ldd	r24, Y+34	; 0x22
    2f94:	9b a1       	ldd	r25, Y+35	; 0x23
    2f96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f9a:	dc 01       	movw	r26, r24
    2f9c:	cb 01       	movw	r24, r22
    2f9e:	9f 8f       	std	Y+31, r25	; 0x1f
    2fa0:	8e 8f       	std	Y+30, r24	; 0x1e
    2fa2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2fa4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2fa6:	9b 8f       	std	Y+27, r25	; 0x1b
    2fa8:	8a 8f       	std	Y+26, r24	; 0x1a
    2faa:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2fac:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2fae:	01 97       	sbiw	r24, 0x01	; 1
    2fb0:	f1 f7       	brne	.-4      	; 0x2fae <main+0x2320>
    2fb2:	9b 8f       	std	Y+27, r25	; 0x1b
    2fb4:	8a 8f       	std	Y+26, r24	; 0x1a
    2fb6:	0f c0       	rjmp	.+30     	; 0x2fd6 <main+0x2348>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2fb8:	69 a5       	ldd	r22, Y+41	; 0x29
    2fba:	7a a5       	ldd	r23, Y+42	; 0x2a
    2fbc:	8b a5       	ldd	r24, Y+43	; 0x2b
    2fbe:	9c a5       	ldd	r25, Y+44	; 0x2c
    2fc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fc4:	dc 01       	movw	r26, r24
    2fc6:	cb 01       	movw	r24, r22
    2fc8:	88 a7       	std	Y+40, r24	; 0x28
    2fca:	88 a5       	ldd	r24, Y+40	; 0x28
    2fcc:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2fce:	89 8d       	ldd	r24, Y+25	; 0x19
    2fd0:	8a 95       	dec	r24
    2fd2:	f1 f7       	brne	.-4      	; 0x2fd0 <main+0x2342>
    2fd4:	89 8f       	std	Y+25, r24	; 0x19
					_delay_us(50);
					CLR_BIT(PORTC,7);
    2fd6:	a5 e3       	ldi	r26, 0x35	; 53
    2fd8:	b0 e0       	ldi	r27, 0x00	; 0
    2fda:	e5 e3       	ldi	r30, 0x35	; 53
    2fdc:	f0 e0       	ldi	r31, 0x00	; 0
    2fde:	80 81       	ld	r24, Z
    2fe0:	8f 77       	andi	r24, 0x7F	; 127
    2fe2:	8c 93       	st	X, r24
    2fe4:	80 e0       	ldi	r24, 0x00	; 0
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	a8 e4       	ldi	r26, 0x48	; 72
    2fea:	b2 e4       	ldi	r27, 0x42	; 66
    2fec:	8d 8b       	std	Y+21, r24	; 0x15
    2fee:	9e 8b       	std	Y+22, r25	; 0x16
    2ff0:	af 8b       	std	Y+23, r26	; 0x17
    2ff2:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2ff4:	6d 89       	ldd	r22, Y+21	; 0x15
    2ff6:	7e 89       	ldd	r23, Y+22	; 0x16
    2ff8:	8f 89       	ldd	r24, Y+23	; 0x17
    2ffa:	98 8d       	ldd	r25, Y+24	; 0x18
    2ffc:	2b ea       	ldi	r18, 0xAB	; 171
    2ffe:	3a ea       	ldi	r19, 0xAA	; 170
    3000:	4a e2       	ldi	r20, 0x2A	; 42
    3002:	50 e4       	ldi	r21, 0x40	; 64
    3004:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3008:	dc 01       	movw	r26, r24
    300a:	cb 01       	movw	r24, r22
    300c:	89 8b       	std	Y+17, r24	; 0x11
    300e:	9a 8b       	std	Y+18, r25	; 0x12
    3010:	ab 8b       	std	Y+19, r26	; 0x13
    3012:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3014:	69 89       	ldd	r22, Y+17	; 0x11
    3016:	7a 89       	ldd	r23, Y+18	; 0x12
    3018:	8b 89       	ldd	r24, Y+19	; 0x13
    301a:	9c 89       	ldd	r25, Y+20	; 0x14
    301c:	20 e0       	ldi	r18, 0x00	; 0
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	40 e8       	ldi	r20, 0x80	; 128
    3022:	5f e3       	ldi	r21, 0x3F	; 63
    3024:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3028:	88 23       	and	r24, r24
    302a:	1c f4       	brge	.+6      	; 0x3032 <main+0x23a4>
		__ticks = 1;
    302c:	81 e0       	ldi	r24, 0x01	; 1
    302e:	88 8b       	std	Y+16, r24	; 0x10
    3030:	91 c0       	rjmp	.+290    	; 0x3154 <main+0x24c6>
	else if (__tmp > 255)
    3032:	69 89       	ldd	r22, Y+17	; 0x11
    3034:	7a 89       	ldd	r23, Y+18	; 0x12
    3036:	8b 89       	ldd	r24, Y+19	; 0x13
    3038:	9c 89       	ldd	r25, Y+20	; 0x14
    303a:	20 e0       	ldi	r18, 0x00	; 0
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	4f e7       	ldi	r20, 0x7F	; 127
    3040:	53 e4       	ldi	r21, 0x43	; 67
    3042:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3046:	18 16       	cp	r1, r24
    3048:	0c f0       	brlt	.+2      	; 0x304c <main+0x23be>
    304a:	7b c0       	rjmp	.+246    	; 0x3142 <main+0x24b4>
	{
		_delay_ms(__us / 1000.0);
    304c:	6d 89       	ldd	r22, Y+21	; 0x15
    304e:	7e 89       	ldd	r23, Y+22	; 0x16
    3050:	8f 89       	ldd	r24, Y+23	; 0x17
    3052:	98 8d       	ldd	r25, Y+24	; 0x18
    3054:	20 e0       	ldi	r18, 0x00	; 0
    3056:	30 e0       	ldi	r19, 0x00	; 0
    3058:	4a e7       	ldi	r20, 0x7A	; 122
    305a:	54 e4       	ldi	r21, 0x44	; 68
    305c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3060:	dc 01       	movw	r26, r24
    3062:	cb 01       	movw	r24, r22
    3064:	8c 87       	std	Y+12, r24	; 0x0c
    3066:	9d 87       	std	Y+13, r25	; 0x0d
    3068:	ae 87       	std	Y+14, r26	; 0x0e
    306a:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    306c:	6c 85       	ldd	r22, Y+12	; 0x0c
    306e:	7d 85       	ldd	r23, Y+13	; 0x0d
    3070:	8e 85       	ldd	r24, Y+14	; 0x0e
    3072:	9f 85       	ldd	r25, Y+15	; 0x0f
    3074:	20 e0       	ldi	r18, 0x00	; 0
    3076:	30 e0       	ldi	r19, 0x00	; 0
    3078:	4a ef       	ldi	r20, 0xFA	; 250
    307a:	54 e4       	ldi	r21, 0x44	; 68
    307c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3080:	dc 01       	movw	r26, r24
    3082:	cb 01       	movw	r24, r22
    3084:	88 87       	std	Y+8, r24	; 0x08
    3086:	99 87       	std	Y+9, r25	; 0x09
    3088:	aa 87       	std	Y+10, r26	; 0x0a
    308a:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    308c:	68 85       	ldd	r22, Y+8	; 0x08
    308e:	79 85       	ldd	r23, Y+9	; 0x09
    3090:	8a 85       	ldd	r24, Y+10	; 0x0a
    3092:	9b 85       	ldd	r25, Y+11	; 0x0b
    3094:	20 e0       	ldi	r18, 0x00	; 0
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	40 e8       	ldi	r20, 0x80	; 128
    309a:	5f e3       	ldi	r21, 0x3F	; 63
    309c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    30a0:	88 23       	and	r24, r24
    30a2:	2c f4       	brge	.+10     	; 0x30ae <main+0x2420>
		__ticks = 1;
    30a4:	81 e0       	ldi	r24, 0x01	; 1
    30a6:	90 e0       	ldi	r25, 0x00	; 0
    30a8:	9f 83       	std	Y+7, r25	; 0x07
    30aa:	8e 83       	std	Y+6, r24	; 0x06
    30ac:	3f c0       	rjmp	.+126    	; 0x312c <main+0x249e>
	else if (__tmp > 65535)
    30ae:	68 85       	ldd	r22, Y+8	; 0x08
    30b0:	79 85       	ldd	r23, Y+9	; 0x09
    30b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    30b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    30b6:	20 e0       	ldi	r18, 0x00	; 0
    30b8:	3f ef       	ldi	r19, 0xFF	; 255
    30ba:	4f e7       	ldi	r20, 0x7F	; 127
    30bc:	57 e4       	ldi	r21, 0x47	; 71
    30be:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    30c2:	18 16       	cp	r1, r24
    30c4:	4c f5       	brge	.+82     	; 0x3118 <main+0x248a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c6:	6c 85       	ldd	r22, Y+12	; 0x0c
    30c8:	7d 85       	ldd	r23, Y+13	; 0x0d
    30ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    30cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    30ce:	20 e0       	ldi	r18, 0x00	; 0
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	40 e2       	ldi	r20, 0x20	; 32
    30d4:	51 e4       	ldi	r21, 0x41	; 65
    30d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30da:	dc 01       	movw	r26, r24
    30dc:	cb 01       	movw	r24, r22
    30de:	bc 01       	movw	r22, r24
    30e0:	cd 01       	movw	r24, r26
    30e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e6:	dc 01       	movw	r26, r24
    30e8:	cb 01       	movw	r24, r22
    30ea:	9f 83       	std	Y+7, r25	; 0x07
    30ec:	8e 83       	std	Y+6, r24	; 0x06
    30ee:	0f c0       	rjmp	.+30     	; 0x310e <main+0x2480>
    30f0:	88 ec       	ldi	r24, 0xC8	; 200
    30f2:	90 e0       	ldi	r25, 0x00	; 0
    30f4:	9d 83       	std	Y+5, r25	; 0x05
    30f6:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    30f8:	8c 81       	ldd	r24, Y+4	; 0x04
    30fa:	9d 81       	ldd	r25, Y+5	; 0x05
    30fc:	01 97       	sbiw	r24, 0x01	; 1
    30fe:	f1 f7       	brne	.-4      	; 0x30fc <main+0x246e>
    3100:	9d 83       	std	Y+5, r25	; 0x05
    3102:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3104:	8e 81       	ldd	r24, Y+6	; 0x06
    3106:	9f 81       	ldd	r25, Y+7	; 0x07
    3108:	01 97       	sbiw	r24, 0x01	; 1
    310a:	9f 83       	std	Y+7, r25	; 0x07
    310c:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    310e:	8e 81       	ldd	r24, Y+6	; 0x06
    3110:	9f 81       	ldd	r25, Y+7	; 0x07
    3112:	00 97       	sbiw	r24, 0x00	; 0
    3114:	69 f7       	brne	.-38     	; 0x30f0 <main+0x2462>
    3116:	24 c0       	rjmp	.+72     	; 0x3160 <main+0x24d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3118:	68 85       	ldd	r22, Y+8	; 0x08
    311a:	79 85       	ldd	r23, Y+9	; 0x09
    311c:	8a 85       	ldd	r24, Y+10	; 0x0a
    311e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3120:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3124:	dc 01       	movw	r26, r24
    3126:	cb 01       	movw	r24, r22
    3128:	9f 83       	std	Y+7, r25	; 0x07
    312a:	8e 83       	std	Y+6, r24	; 0x06
    312c:	8e 81       	ldd	r24, Y+6	; 0x06
    312e:	9f 81       	ldd	r25, Y+7	; 0x07
    3130:	9b 83       	std	Y+3, r25	; 0x03
    3132:	8a 83       	std	Y+2, r24	; 0x02
    3134:	8a 81       	ldd	r24, Y+2	; 0x02
    3136:	9b 81       	ldd	r25, Y+3	; 0x03
    3138:	01 97       	sbiw	r24, 0x01	; 1
    313a:	f1 f7       	brne	.-4      	; 0x3138 <main+0x24aa>
    313c:	9b 83       	std	Y+3, r25	; 0x03
    313e:	8a 83       	std	Y+2, r24	; 0x02
    3140:	0f c0       	rjmp	.+30     	; 0x3160 <main+0x24d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3142:	69 89       	ldd	r22, Y+17	; 0x11
    3144:	7a 89       	ldd	r23, Y+18	; 0x12
    3146:	8b 89       	ldd	r24, Y+19	; 0x13
    3148:	9c 89       	ldd	r25, Y+20	; 0x14
    314a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    314e:	dc 01       	movw	r26, r24
    3150:	cb 01       	movw	r24, r22
    3152:	88 8b       	std	Y+16, r24	; 0x10
    3154:	88 89       	ldd	r24, Y+16	; 0x10
    3156:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3158:	89 81       	ldd	r24, Y+1	; 0x01
    315a:	8a 95       	dec	r24
    315c:	f1 f7       	brne	.-4      	; 0x315a <main+0x24cc>
    315e:	89 83       	std	Y+1, r24	; 0x01

	DDRA=0x00;	// PORTA is an input PORT
	PORTA=0xff;	// PORTA use pull up resistors
	while(1)
	{
	while((!(GET_BIT(PINA,0))) || (!(GET_BIT(PINA,1))) || (!(GET_BIT(PINA,2)))
    3160:	e9 e3       	ldi	r30, 0x39	; 57
    3162:	f0 e0       	ldi	r31, 0x00	; 0
    3164:	80 81       	ld	r24, Z
    3166:	88 2f       	mov	r24, r24
    3168:	90 e0       	ldi	r25, 0x00	; 0
    316a:	81 70       	andi	r24, 0x01	; 1
    316c:	90 70       	andi	r25, 0x00	; 0
    316e:	00 97       	sbiw	r24, 0x00	; 0
    3170:	11 f4       	brne	.+4      	; 0x3176 <main+0x24e8>
    3172:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    3176:	e9 e3       	ldi	r30, 0x39	; 57
    3178:	f0 e0       	ldi	r31, 0x00	; 0
    317a:	80 81       	ld	r24, Z
    317c:	86 95       	lsr	r24
    317e:	88 2f       	mov	r24, r24
    3180:	90 e0       	ldi	r25, 0x00	; 0
    3182:	81 70       	andi	r24, 0x01	; 1
    3184:	90 70       	andi	r25, 0x00	; 0
    3186:	00 97       	sbiw	r24, 0x00	; 0
    3188:	11 f4       	brne	.+4      	; 0x318e <main+0x2500>
    318a:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    318e:	e9 e3       	ldi	r30, 0x39	; 57
    3190:	f0 e0       	ldi	r31, 0x00	; 0
    3192:	80 81       	ld	r24, Z
    3194:	86 95       	lsr	r24
    3196:	86 95       	lsr	r24
    3198:	88 2f       	mov	r24, r24
    319a:	90 e0       	ldi	r25, 0x00	; 0
    319c:	81 70       	andi	r24, 0x01	; 1
    319e:	90 70       	andi	r25, 0x00	; 0
    31a0:	00 97       	sbiw	r24, 0x00	; 0
    31a2:	11 f4       	brne	.+4      	; 0x31a8 <main+0x251a>
    31a4:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    31a8:	e9 e3       	ldi	r30, 0x39	; 57
    31aa:	f0 e0       	ldi	r31, 0x00	; 0
    31ac:	80 81       	ld	r24, Z
    31ae:	86 95       	lsr	r24
    31b0:	86 95       	lsr	r24
    31b2:	86 95       	lsr	r24
    31b4:	88 2f       	mov	r24, r24
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	81 70       	andi	r24, 0x01	; 1
    31ba:	90 70       	andi	r25, 0x00	; 0
    31bc:	00 97       	sbiw	r24, 0x00	; 0
    31be:	11 f4       	brne	.+4      	; 0x31c4 <main+0x2536>
    31c0:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    31c4:	e9 e3       	ldi	r30, 0x39	; 57
    31c6:	f0 e0       	ldi	r31, 0x00	; 0
    31c8:	80 81       	ld	r24, Z
    31ca:	82 95       	swap	r24
    31cc:	8f 70       	andi	r24, 0x0F	; 15
    31ce:	88 2f       	mov	r24, r24
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	81 70       	andi	r24, 0x01	; 1
    31d4:	90 70       	andi	r25, 0x00	; 0
    31d6:	00 97       	sbiw	r24, 0x00	; 0
    31d8:	11 f4       	brne	.+4      	; 0x31de <main+0x2550>
    31da:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    31de:	e9 e3       	ldi	r30, 0x39	; 57
    31e0:	f0 e0       	ldi	r31, 0x00	; 0
    31e2:	80 81       	ld	r24, Z
    31e4:	82 95       	swap	r24
    31e6:	86 95       	lsr	r24
    31e8:	87 70       	andi	r24, 0x07	; 7
    31ea:	88 2f       	mov	r24, r24
    31ec:	90 e0       	ldi	r25, 0x00	; 0
    31ee:	81 70       	andi	r24, 0x01	; 1
    31f0:	90 70       	andi	r25, 0x00	; 0
    31f2:	00 97       	sbiw	r24, 0x00	; 0
    31f4:	11 f4       	brne	.+4      	; 0x31fa <main+0x256c>
    31f6:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    31fa:	e9 e3       	ldi	r30, 0x39	; 57
    31fc:	f0 e0       	ldi	r31, 0x00	; 0
    31fe:	80 81       	ld	r24, Z
    3200:	82 95       	swap	r24
    3202:	86 95       	lsr	r24
    3204:	86 95       	lsr	r24
    3206:	83 70       	andi	r24, 0x03	; 3
    3208:	88 2f       	mov	r24, r24
    320a:	90 e0       	ldi	r25, 0x00	; 0
    320c:	81 70       	andi	r24, 0x01	; 1
    320e:	90 70       	andi	r25, 0x00	; 0
    3210:	00 97       	sbiw	r24, 0x00	; 0
    3212:	11 f4       	brne	.+4      	; 0x3218 <main+0x258a>
    3214:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    3218:	e9 e3       	ldi	r30, 0x39	; 57
    321a:	f0 e0       	ldi	r31, 0x00	; 0
    321c:	80 81       	ld	r24, Z
    321e:	88 23       	and	r24, r24
    3220:	14 f0       	brlt	.+4      	; 0x3226 <main+0x2598>
    3222:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <main+0x3a>
    3226:	9c cf       	rjmp	.-200    	; 0x3160 <main+0x24d2>

00003228 <__prologue_saves__>:
    3228:	2f 92       	push	r2
    322a:	3f 92       	push	r3
    322c:	4f 92       	push	r4
    322e:	5f 92       	push	r5
    3230:	6f 92       	push	r6
    3232:	7f 92       	push	r7
    3234:	8f 92       	push	r8
    3236:	9f 92       	push	r9
    3238:	af 92       	push	r10
    323a:	bf 92       	push	r11
    323c:	cf 92       	push	r12
    323e:	df 92       	push	r13
    3240:	ef 92       	push	r14
    3242:	ff 92       	push	r15
    3244:	0f 93       	push	r16
    3246:	1f 93       	push	r17
    3248:	cf 93       	push	r28
    324a:	df 93       	push	r29
    324c:	cd b7       	in	r28, 0x3d	; 61
    324e:	de b7       	in	r29, 0x3e	; 62
    3250:	ca 1b       	sub	r28, r26
    3252:	db 0b       	sbc	r29, r27
    3254:	0f b6       	in	r0, 0x3f	; 63
    3256:	f8 94       	cli
    3258:	de bf       	out	0x3e, r29	; 62
    325a:	0f be       	out	0x3f, r0	; 63
    325c:	cd bf       	out	0x3d, r28	; 61
    325e:	09 94       	ijmp

00003260 <__epilogue_restores__>:
    3260:	2a 88       	ldd	r2, Y+18	; 0x12
    3262:	39 88       	ldd	r3, Y+17	; 0x11
    3264:	48 88       	ldd	r4, Y+16	; 0x10
    3266:	5f 84       	ldd	r5, Y+15	; 0x0f
    3268:	6e 84       	ldd	r6, Y+14	; 0x0e
    326a:	7d 84       	ldd	r7, Y+13	; 0x0d
    326c:	8c 84       	ldd	r8, Y+12	; 0x0c
    326e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3270:	aa 84       	ldd	r10, Y+10	; 0x0a
    3272:	b9 84       	ldd	r11, Y+9	; 0x09
    3274:	c8 84       	ldd	r12, Y+8	; 0x08
    3276:	df 80       	ldd	r13, Y+7	; 0x07
    3278:	ee 80       	ldd	r14, Y+6	; 0x06
    327a:	fd 80       	ldd	r15, Y+5	; 0x05
    327c:	0c 81       	ldd	r16, Y+4	; 0x04
    327e:	1b 81       	ldd	r17, Y+3	; 0x03
    3280:	aa 81       	ldd	r26, Y+2	; 0x02
    3282:	b9 81       	ldd	r27, Y+1	; 0x01
    3284:	ce 0f       	add	r28, r30
    3286:	d1 1d       	adc	r29, r1
    3288:	0f b6       	in	r0, 0x3f	; 63
    328a:	f8 94       	cli
    328c:	de bf       	out	0x3e, r29	; 62
    328e:	0f be       	out	0x3f, r0	; 63
    3290:	cd bf       	out	0x3d, r28	; 61
    3292:	ed 01       	movw	r28, r26
    3294:	08 95       	ret

00003296 <_exit>:
    3296:	f8 94       	cli

00003298 <__stop_program>:
    3298:	ff cf       	rjmp	.-2      	; 0x3298 <__stop_program>
